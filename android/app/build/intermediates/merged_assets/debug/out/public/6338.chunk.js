"use strict";(self.webpackChunkstudent_mis_mobile_app=self.webpackChunkstudent_mis_mobile_app||[]).push([[6338],{56338:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"iosTransitionAnimation\": () => (/* binding */ iosTransitionAnimation),\n/* harmony export */   \"shadow\": () => (/* binding */ shadow)\n/* harmony export */ });\n/* harmony import */ var _animation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35980);\n/* harmony import */ var _index4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(55026);\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n\n\n\nconst DURATION = 540;\nconst getClonedElement = (tagName) => {\n  return document.querySelector(`${tagName}.ion-cloned-element`);\n};\nconst shadow = (el) => {\n  return el.shadowRoot || el;\n};\nconst getLargeTitle = (refEl) => {\n  const tabs = (refEl.tagName === 'ION-TABS') ? refEl : refEl.querySelector('ion-tabs');\n  const query = 'ion-content ion-header:not(.header-collapse-condense-inactive) ion-title.title-large';\n  if (tabs != null) {\n    const activeTab = tabs.querySelector('ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)');\n    return (activeTab != null) ? activeTab.querySelector(query) : null;\n  }\n  return refEl.querySelector(query);\n};\nconst getBackButton = (refEl, backDirection) => {\n  const tabs = (refEl.tagName === 'ION-TABS') ? refEl : refEl.querySelector('ion-tabs');\n  let buttonsList = [];\n  if (tabs != null) {\n    const activeTab = tabs.querySelector('ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)');\n    if (activeTab != null) {\n      buttonsList = activeTab.querySelectorAll('ion-buttons');\n    }\n  }\n  else {\n    buttonsList = refEl.querySelectorAll('ion-buttons');\n  }\n  for (const buttons of buttonsList) {\n    const parentHeader = buttons.closest('ion-header');\n    const activeHeader = parentHeader && !parentHeader.classList.contains('header-collapse-condense-inactive');\n    const backButton = buttons.querySelector('ion-back-button');\n    const buttonsCollapse = buttons.classList.contains('buttons-collapse');\n    const startSlot = buttons.slot === 'start' || buttons.slot === '';\n    if (backButton !== null && startSlot && ((buttonsCollapse && activeHeader && backDirection) || !buttonsCollapse)) {\n      return backButton;\n    }\n  }\n  return null;\n};\nconst createLargeTitleTransition = (rootAnimation, rtl, backDirection, enteringEl, leavingEl) => {\n  const enteringBackButton = getBackButton(enteringEl, backDirection);\n  const leavingLargeTitle = getLargeTitle(leavingEl);\n  const enteringLargeTitle = getLargeTitle(enteringEl);\n  const leavingBackButton = getBackButton(leavingEl, backDirection);\n  const shouldAnimationForward = enteringBackButton !== null && leavingLargeTitle !== null && !backDirection;\n  const shouldAnimationBackward = enteringLargeTitle !== null && leavingBackButton !== null && backDirection;\n  if (shouldAnimationForward) {\n    const leavingLargeTitleBox = leavingLargeTitle.getBoundingClientRect();\n    const enteringBackButtonBox = enteringBackButton.getBoundingClientRect();\n    animateLargeTitle(rootAnimation, rtl, backDirection, leavingLargeTitle, leavingLargeTitleBox, enteringBackButtonBox);\n    animateBackButton(rootAnimation, rtl, backDirection, enteringBackButton, leavingLargeTitleBox, enteringBackButtonBox);\n  }\n  else if (shouldAnimationBackward) {\n    const enteringLargeTitleBox = enteringLargeTitle.getBoundingClientRect();\n    const leavingBackButtonBox = leavingBackButton.getBoundingClientRect();\n    animateLargeTitle(rootAnimation, rtl, backDirection, enteringLargeTitle, enteringLargeTitleBox, leavingBackButtonBox);\n    animateBackButton(rootAnimation, rtl, backDirection, leavingBackButton, enteringLargeTitleBox, leavingBackButtonBox);\n  }\n  return {\n    forward: shouldAnimationForward,\n    backward: shouldAnimationBackward\n  };\n};\nconst animateBackButton = (rootAnimation, rtl, backDirection, backButtonEl, largeTitleBox, backButtonBox) => {\n  const BACK_BUTTON_START_OFFSET = (rtl) ? `calc(100% - ${backButtonBox.right + 4}px)` : `${backButtonBox.left - 4}px`;\n  const START_TEXT_TRANSLATE = (rtl) ? '7px' : '-7px';\n  const END_TEXT_TRANSLATE = (rtl) ? '-4px' : '4px';\n  const ICON_TRANSLATE = (rtl) ? '-4px' : '4px';\n  const TEXT_ORIGIN_X = (rtl) ? 'right' : 'left';\n  const ICON_ORIGIN_X = (rtl) ? 'left' : 'right';\n  const FORWARD_TEXT_KEYFRAMES = [\n    { offset: 0, opacity: 0, transform: `translate3d(${START_TEXT_TRANSLATE}, ${largeTitleBox.top - 40}px, 0) scale(2.1)` },\n    { offset: 1, opacity: 1, transform: `translate3d(${END_TEXT_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` }\n  ];\n  const BACKWARD_TEXT_KEYFRAMES = [\n    { offset: 0, opacity: 1, transform: `translate3d(${END_TEXT_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` },\n    { offset: 0.6, opacity: 0 },\n    { offset: 1, opacity: 0, transform: `translate3d(${START_TEXT_TRANSLATE}, ${largeTitleBox.top - 40}px, 0) scale(2.1)` }\n  ];\n  const TEXT_KEYFRAMES = (backDirection) ? BACKWARD_TEXT_KEYFRAMES : FORWARD_TEXT_KEYFRAMES;\n  const FORWARD_ICON_KEYFRAMES = [\n    { offset: 0, opacity: 0, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 41}px, 0) scale(0.6)` },\n    { offset: 1, opacity: 1, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` }\n  ];\n  const BACKWARD_ICON_KEYFRAMES = [\n    { offset: 0, opacity: 1, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` },\n    { offset: 0.2, opacity: 0, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 41}px, 0) scale(0.6)` },\n    { offset: 1, opacity: 0, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 41}px, 0) scale(0.6)` }\n  ];\n  const ICON_KEYFRAMES = (backDirection) ? BACKWARD_ICON_KEYFRAMES : FORWARD_ICON_KEYFRAMES;\n  const enteringBackButtonTextAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n  const enteringBackButtonIconAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n  const clonedBackButtonEl = getClonedElement('ion-back-button');\n  const backButtonTextEl = shadow(clonedBackButtonEl).querySelector('.button-text');\n  const backButtonIconEl = shadow(clonedBackButtonEl).querySelector('ion-icon');\n  clonedBackButtonEl.text = backButtonEl.text;\n  clonedBackButtonEl.mode = backButtonEl.mode;\n  clonedBackButtonEl.icon = backButtonEl.icon;\n  clonedBackButtonEl.color = backButtonEl.color;\n  clonedBackButtonEl.disabled = backButtonEl.disabled;\n  clonedBackButtonEl.style.setProperty('display', 'block');\n  clonedBackButtonEl.style.setProperty('position', 'fixed');\n  enteringBackButtonIconAnimation.addElement(backButtonIconEl);\n  enteringBackButtonTextAnimation.addElement(backButtonTextEl);\n  enteringBackButtonTextAnimation\n    .beforeStyles({\n    'transform-origin': `${TEXT_ORIGIN_X} center`\n  })\n    .beforeAddWrite(() => {\n    backButtonEl.style.setProperty('display', 'none');\n    clonedBackButtonEl.style.setProperty(TEXT_ORIGIN_X, BACK_BUTTON_START_OFFSET);\n  })\n    .afterAddWrite(() => {\n    backButtonEl.style.setProperty('display', '');\n    clonedBackButtonEl.style.setProperty('display', 'none');\n    clonedBackButtonEl.style.removeProperty(TEXT_ORIGIN_X);\n  })\n    .keyframes(TEXT_KEYFRAMES);\n  enteringBackButtonIconAnimation\n    .beforeStyles({\n    'transform-origin': `${ICON_ORIGIN_X} center`\n  })\n    .keyframes(ICON_KEYFRAMES);\n  rootAnimation.addAnimation([enteringBackButtonTextAnimation, enteringBackButtonIconAnimation]);\n};\nconst animateLargeTitle = (rootAnimation, rtl, backDirection, largeTitleEl, largeTitleBox, backButtonBox) => {\n  const TITLE_START_OFFSET = (rtl) ? `calc(100% - ${largeTitleBox.right}px)` : `${largeTitleBox.left}px`;\n  const START_TRANSLATE = (rtl) ? '-18px' : '18px';\n  const ORIGIN_X = (rtl) ? 'right' : 'left';\n  const BACKWARDS_KEYFRAMES = [\n    { offset: 0, opacity: 0, transform: `translate3d(${START_TRANSLATE}, ${backButtonBox.top - 4}px, 0) scale(0.49)` },\n    { offset: 0.1, opacity: 0 },\n    { offset: 1, opacity: 1, transform: `translate3d(0, ${largeTitleBox.top - 2}px, 0) scale(1)` }\n  ];\n  const FORWARDS_KEYFRAMES = [\n    { offset: 0, opacity: 0.99, transform: `translate3d(0, ${largeTitleBox.top - 2}px, 0) scale(1)` },\n    { offset: 0.6, opacity: 0 },\n    { offset: 1, opacity: 0, transform: `translate3d(${START_TRANSLATE}, ${backButtonBox.top - 4}px, 0) scale(0.5)` }\n  ];\n  const KEYFRAMES = (backDirection) ? BACKWARDS_KEYFRAMES : FORWARDS_KEYFRAMES;\n  const clonedTitleEl = getClonedElement('ion-title');\n  const clonedLargeTitleAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n  clonedTitleEl.innerText = largeTitleEl.innerText;\n  clonedTitleEl.size = largeTitleEl.size;\n  clonedTitleEl.color = largeTitleEl.color;\n  clonedLargeTitleAnimation.addElement(clonedTitleEl);\n  clonedLargeTitleAnimation\n    .beforeStyles({\n    'transform-origin': `${ORIGIN_X} center`,\n    'height': '46px',\n    'display': '',\n    'position': 'relative',\n    [ORIGIN_X]: TITLE_START_OFFSET\n  })\n    .beforeAddWrite(() => {\n    largeTitleEl.style.setProperty('display', 'none');\n  })\n    .afterAddWrite(() => {\n    largeTitleEl.style.setProperty('display', '');\n    clonedTitleEl.style.setProperty('display', 'none');\n  })\n    .keyframes(KEYFRAMES);\n  rootAnimation.addAnimation(clonedLargeTitleAnimation);\n};\nconst iosTransitionAnimation = (navEl, opts) => {\n  try {\n    const EASING = 'cubic-bezier(0.32,0.72,0,1)';\n    const OPACITY = 'opacity';\n    const TRANSFORM = 'transform';\n    const CENTER = '0%';\n    const OFF_OPACITY = 0.8;\n    const isRTL = navEl.ownerDocument.dir === 'rtl';\n    const OFF_RIGHT = isRTL ? '-99.5%' : '99.5%';\n    const OFF_LEFT = isRTL ? '33%' : '-33%';\n    const enteringEl = opts.enteringEl;\n    const leavingEl = opts.leavingEl;\n    const backDirection = (opts.direction === 'back');\n    const contentEl = enteringEl.querySelector(':scope > ion-content');\n    const headerEls = enteringEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\n    const enteringToolBarEls = enteringEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n    const rootAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n    const enteringContentAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n    rootAnimation\n      .addElement(enteringEl)\n      .duration(opts.duration || DURATION)\n      .easing(opts.easing || EASING)\n      .fill('both')\n      .beforeRemoveClass('ion-page-invisible');\n    if (leavingEl && navEl) {\n      const navDecorAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      navDecorAnimation.addElement(navEl);\n      rootAnimation.addAnimation(navDecorAnimation);\n    }\n    if (!contentEl && enteringToolBarEls.length === 0 && headerEls.length === 0) {\n      enteringContentAnimation.addElement(enteringEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs')); // REVIEW\n    }\n    else {\n      enteringContentAnimation.addElement(contentEl); // REVIEW\n      enteringContentAnimation.addElement(headerEls);\n    }\n    rootAnimation.addAnimation(enteringContentAnimation);\n    if (backDirection) {\n      enteringContentAnimation\n        .beforeClearStyles([OPACITY])\n        .fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`)\n        .fromTo(OPACITY, OFF_OPACITY, 1);\n    }\n    else {\n      // entering content, forward direction\n      enteringContentAnimation\n        .beforeClearStyles([OPACITY])\n        .fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`);\n    }\n    if (contentEl) {\n      const enteringTransitionEffectEl = shadow(contentEl).querySelector('.transition-effect');\n      if (enteringTransitionEffectEl) {\n        const enteringTransitionCoverEl = enteringTransitionEffectEl.querySelector('.transition-cover');\n        const enteringTransitionShadowEl = enteringTransitionEffectEl.querySelector('.transition-shadow');\n        const enteringTransitionEffect = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const enteringTransitionCover = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const enteringTransitionShadow = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        enteringTransitionEffect\n          .addElement(enteringTransitionEffectEl)\n          .beforeStyles({ opacity: '1', display: 'block' })\n          .afterStyles({ opacity: '', display: '' });\n        enteringTransitionCover\n          .addElement(enteringTransitionCoverEl) // REVIEW\n          .beforeClearStyles([OPACITY])\n          .fromTo(OPACITY, 0, 0.1);\n        enteringTransitionShadow\n          .addElement(enteringTransitionShadowEl) // REVIEW\n          .beforeClearStyles([OPACITY])\n          .fromTo(OPACITY, 0.03, 0.70);\n        enteringTransitionEffect.addAnimation([enteringTransitionCover, enteringTransitionShadow]);\n        enteringContentAnimation.addAnimation([enteringTransitionEffect]);\n      }\n    }\n    const enteringContentHasLargeTitle = enteringEl.querySelector('ion-header.header-collapse-condense');\n    const { forward, backward } = createLargeTitleTransition(rootAnimation, isRTL, backDirection, enteringEl, leavingEl);\n    enteringToolBarEls.forEach(enteringToolBarEl => {\n      const enteringToolBar = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      enteringToolBar.addElement(enteringToolBarEl);\n      rootAnimation.addAnimation(enteringToolBar);\n      const enteringTitle = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      enteringTitle.addElement(enteringToolBarEl.querySelector('ion-title')); // REVIEW\n      const enteringToolBarButtons = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      const buttons = Array.from(enteringToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\n      const parentHeader = enteringToolBarEl.closest('ion-header');\n      const inactiveHeader = parentHeader && parentHeader.classList.contains('header-collapse-condense-inactive');\n      let buttonsToAnimate;\n      if (backDirection) {\n        buttonsToAnimate = buttons.filter(button => {\n          const isCollapseButton = button.classList.contains('buttons-collapse');\n          return (isCollapseButton && !inactiveHeader) || !isCollapseButton;\n        });\n      }\n      else {\n        buttonsToAnimate = buttons.filter(button => !button.classList.contains('buttons-collapse'));\n      }\n      enteringToolBarButtons.addElement(buttonsToAnimate);\n      const enteringToolBarItems = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      enteringToolBarItems.addElement(enteringToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])'));\n      const enteringToolBarBg = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      enteringToolBarBg.addElement(shadow(enteringToolBarEl).querySelector('.toolbar-background')); // REVIEW\n      const enteringBackButton = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      const backButtonEl = enteringToolBarEl.querySelector('ion-back-button');\n      if (backButtonEl) {\n        enteringBackButton.addElement(backButtonEl);\n      }\n      enteringToolBar.addAnimation([enteringTitle, enteringToolBarButtons, enteringToolBarItems, enteringToolBarBg, enteringBackButton]);\n      enteringToolBarButtons.fromTo(OPACITY, 0.01, 1);\n      enteringToolBarItems.fromTo(OPACITY, 0.01, 1);\n      if (backDirection) {\n        if (!inactiveHeader) {\n          enteringTitle\n            .fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`)\n            .fromTo(OPACITY, 0.01, 1);\n        }\n        enteringToolBarItems.fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`);\n        // back direction, entering page has a back button\n        enteringBackButton.fromTo(OPACITY, 0.01, 1);\n      }\n      else {\n        // entering toolbar, forward direction\n        if (!enteringContentHasLargeTitle) {\n          enteringTitle\n            .fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`)\n            .fromTo(OPACITY, 0.01, 1);\n        }\n        enteringToolBarItems.fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`);\n        enteringToolBarBg.beforeClearStyles([OPACITY, 'transform']);\n        const translucentHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.translucent;\n        if (!translucentHeader) {\n          enteringToolBarBg.fromTo(OPACITY, 0.01, 'var(--opacity)');\n        }\n        else {\n          enteringToolBarBg.fromTo('transform', (isRTL ? 'translateX(-100%)' : 'translateX(100%)'), 'translateX(0px)');\n        }\n        // forward direction, entering page has a back button\n        if (!forward) {\n          enteringBackButton.fromTo(OPACITY, 0.01, 1);\n        }\n        if (backButtonEl && !forward) {\n          const enteringBackBtnText = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n          enteringBackBtnText\n            .addElement(shadow(backButtonEl).querySelector('.button-text')) // REVIEW\n            .fromTo(`transform`, (isRTL ? 'translateX(-100px)' : 'translateX(100px)'), 'translateX(0px)');\n          enteringToolBar.addAnimation(enteringBackBtnText);\n        }\n      }\n    });\n    // setup leaving view\n    if (leavingEl) {\n      const leavingContent = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      const leavingContentEl = leavingEl.querySelector(':scope > ion-content');\n      const leavingToolBarEls = leavingEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n      const leavingHeaderEls = leavingEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\n      if (!leavingContentEl && leavingToolBarEls.length === 0 && leavingHeaderEls.length === 0) {\n        leavingContent.addElement(leavingEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs')); // REVIEW\n      }\n      else {\n        leavingContent.addElement(leavingContentEl); // REVIEW\n        leavingContent.addElement(leavingHeaderEls);\n      }\n      rootAnimation.addAnimation(leavingContent);\n      if (backDirection) {\n        // leaving content, back direction\n        leavingContent\n          .beforeClearStyles([OPACITY])\n          .fromTo('transform', `translateX(${CENTER})`, (isRTL ? 'translateX(-100%)' : 'translateX(100%)'));\n        const leavingPage = (0,_index4_js__WEBPACK_IMPORTED_MODULE_1__.g)(leavingEl);\n        rootAnimation.afterAddWrite(() => {\n          if (rootAnimation.getDirection() === 'normal') {\n            leavingPage.style.setProperty('display', 'none');\n          }\n        });\n      }\n      else {\n        // leaving content, forward direction\n        leavingContent\n          .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\n          .fromTo(OPACITY, 1, OFF_OPACITY);\n      }\n      if (leavingContentEl) {\n        const leavingTransitionEffectEl = shadow(leavingContentEl).querySelector('.transition-effect');\n        if (leavingTransitionEffectEl) {\n          const leavingTransitionCoverEl = leavingTransitionEffectEl.querySelector('.transition-cover');\n          const leavingTransitionShadowEl = leavingTransitionEffectEl.querySelector('.transition-shadow');\n          const leavingTransitionEffect = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n          const leavingTransitionCover = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n          const leavingTransitionShadow = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n          leavingTransitionEffect\n            .addElement(leavingTransitionEffectEl)\n            .beforeStyles({ opacity: '1', display: 'block' })\n            .afterStyles({ opacity: '', display: '' });\n          leavingTransitionCover\n            .addElement(leavingTransitionCoverEl) // REVIEW\n            .beforeClearStyles([OPACITY])\n            .fromTo(OPACITY, 0.1, 0);\n          leavingTransitionShadow\n            .addElement(leavingTransitionShadowEl) // REVIEW\n            .beforeClearStyles([OPACITY])\n            .fromTo(OPACITY, 0.70, 0.03);\n          leavingTransitionEffect.addAnimation([leavingTransitionCover, leavingTransitionShadow]);\n          leavingContent.addAnimation([leavingTransitionEffect]);\n        }\n      }\n      leavingToolBarEls.forEach(leavingToolBarEl => {\n        const leavingToolBar = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        leavingToolBar.addElement(leavingToolBarEl);\n        const leavingTitle = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        leavingTitle.addElement(leavingToolBarEl.querySelector('ion-title')); // REVIEW\n        const leavingToolBarButtons = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const buttons = leavingToolBarEl.querySelectorAll('ion-buttons,[menuToggle]');\n        const parentHeader = leavingToolBarEl.closest('ion-header');\n        const inactiveHeader = parentHeader && parentHeader.classList.contains('header-collapse-condense-inactive');\n        const buttonsToAnimate = Array.from(buttons).filter(button => {\n          const isCollapseButton = button.classList.contains('buttons-collapse');\n          return (isCollapseButton && !inactiveHeader) || !isCollapseButton;\n        });\n        leavingToolBarButtons.addElement(buttonsToAnimate);\n        const leavingToolBarItems = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const leavingToolBarItemEls = leavingToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])');\n        if (leavingToolBarItemEls.length > 0) {\n          leavingToolBarItems.addElement(leavingToolBarItemEls);\n        }\n        const leavingToolBarBg = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        leavingToolBarBg.addElement(shadow(leavingToolBarEl).querySelector('.toolbar-background')); // REVIEW\n        const leavingBackButton = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const backButtonEl = leavingToolBarEl.querySelector('ion-back-button');\n        if (backButtonEl) {\n          leavingBackButton.addElement(backButtonEl);\n        }\n        leavingToolBar.addAnimation([leavingTitle, leavingToolBarButtons, leavingToolBarItems, leavingBackButton, leavingToolBarBg]);\n        rootAnimation.addAnimation(leavingToolBar);\n        // fade out leaving toolbar items\n        leavingBackButton.fromTo(OPACITY, 0.99, 0);\n        leavingToolBarButtons.fromTo(OPACITY, 0.99, 0);\n        leavingToolBarItems.fromTo(OPACITY, 0.99, 0);\n        if (backDirection) {\n          if (!inactiveHeader) {\n            // leaving toolbar, back direction\n            leavingTitle\n              .fromTo('transform', `translateX(${CENTER})`, (isRTL ? 'translateX(-100%)' : 'translateX(100%)'))\n              .fromTo(OPACITY, 0.99, 0);\n          }\n          leavingToolBarItems.fromTo('transform', `translateX(${CENTER})`, (isRTL ? 'translateX(-100%)' : 'translateX(100%)'));\n          leavingToolBarBg.beforeClearStyles([OPACITY, 'transform']);\n          // leaving toolbar, back direction, and there's no entering toolbar\n          // should just slide out, no fading out\n          const translucentHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.translucent;\n          if (!translucentHeader) {\n            leavingToolBarBg.fromTo(OPACITY, 'var(--opacity)', 0);\n          }\n          else {\n            leavingToolBarBg.fromTo('transform', 'translateX(0px)', (isRTL ? 'translateX(-100%)' : 'translateX(100%)'));\n          }\n          if (backButtonEl && !backward) {\n            const leavingBackBtnText = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n            leavingBackBtnText\n              .addElement(shadow(backButtonEl).querySelector('.button-text')) // REVIEW\n              .fromTo('transform', `translateX(${CENTER})`, `translateX(${(isRTL ? -124 : 124) + 'px'})`);\n            leavingToolBar.addAnimation(leavingBackBtnText);\n          }\n        }\n        else {\n          // leaving toolbar, forward direction\n          if (!inactiveHeader) {\n            leavingTitle\n              .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\n              .fromTo(OPACITY, 0.99, 0)\n              .afterClearStyles([TRANSFORM, OPACITY]);\n          }\n          leavingToolBarItems\n            .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\n            .afterClearStyles([TRANSFORM, OPACITY]);\n          leavingBackButton.afterClearStyles([OPACITY]);\n          leavingTitle.afterClearStyles([OPACITY]);\n          leavingToolBarButtons.afterClearStyles([OPACITY]);\n        }\n      });\n    }\n    return rootAnimation;\n  }\n  catch (err) {\n    throw err;\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///56338\n")}}]);