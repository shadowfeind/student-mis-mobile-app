(self.webpackChunkstudent_mis_mobile_app=self.webpackChunkstudent_mis_mobile_app||[]).push([[21],{82302:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export styles */\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45987);\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87462);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86010);\n/* harmony import */ var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(14670);\n/* harmony import */ var _TableContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(90106);\n\n\n\n\n\n\n\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: \'table\',\n      width: \'100%\',\n      borderCollapse: \'collapse\',\n      borderSpacing: 0,\n      \'& caption\': (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: \'left\',\n        captionSide: \'bottom\'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: \'separate\'\n    }\n  };\n};\nvar defaultComponent = \'table\';\nvar Table = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? \'normal\' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? \'medium\' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(props, ["classes", "className", "component", "padding", "size", "stickyHeader"]);\n\n  var table = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TableContext__WEBPACK_IMPORTED_MODULE_3__/* ["default"].Provider */ .Z.Provider, {\n    value: table\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)({\n    role: Component === defaultComponent ? null : \'table\',\n    ref: ref,\n    className: (0,clsx__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\n false ? 0 : void 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(styles, {\n  name: \'MuiTable\'\n})(Table));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIzMDIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEwRjtBQUNoQztBQUMzQjtBQUNJO0FBQ1g7QUFDNEI7QUFDTjtBQUNKO0FBQ25DO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsdUZBQVEsR0FBRztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMLDREQUE0RCxLQUFLO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw2Q0FBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHVHQUF3Qjs7QUFFdEMsY0FBYywwQ0FBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILHNCQUFzQixnREFBbUIsQ0FBQyxnRkFBcUI7QUFDL0Q7QUFDQSxHQUFHLGVBQWUsZ0RBQW1CLFlBQVksdUZBQVE7QUFDekQ7QUFDQTtBQUNBLGVBQWUseURBQUk7QUFDbkIsR0FBRztBQUNILENBQUM7QUFDRCxNQUFxQyxHQUFHLENBZ0R2QyxDQUFDO0FBQ0YsaUVBQWUsdUVBQVU7QUFDekI7QUFDQSxDQUFDLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkZW50LW1pcy1tb2JpbGUtYXBwLy4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS9UYWJsZS9UYWJsZS5qcz9mYzQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IGNoYWluUHJvcFR5cGVzIH0gZnJvbSAnQG1hdGVyaWFsLXVpL3V0aWxzJztcbmltcG9ydCB3aXRoU3R5bGVzIGZyb20gJy4uL3N0eWxlcy93aXRoU3R5bGVzJztcbmltcG9ydCBUYWJsZUNvbnRleHQgZnJvbSAnLi9UYWJsZUNvbnRleHQnO1xuZXhwb3J0IHZhciBzdHlsZXMgPSBmdW5jdGlvbiBzdHlsZXModGhlbWUpIHtcbiAgcmV0dXJuIHtcbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50LiAqL1xuICAgIHJvb3Q6IHtcbiAgICAgIGRpc3BsYXk6ICd0YWJsZScsXG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgYm9yZGVyQ29sbGFwc2U6ICdjb2xsYXBzZScsXG4gICAgICBib3JkZXJTcGFjaW5nOiAwLFxuICAgICAgJyYgY2FwdGlvbic6IF9leHRlbmRzKHt9LCB0aGVtZS50eXBvZ3JhcGh5LmJvZHkyLCB7XG4gICAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMiksXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnRleHQuc2Vjb25kYXJ5LFxuICAgICAgICB0ZXh0QWxpZ246ICdsZWZ0JyxcbiAgICAgICAgY2FwdGlvblNpZGU6ICdib3R0b20nXG4gICAgICB9KVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBzdGlja3lIZWFkZXI9e3RydWV9YC4gKi9cbiAgICBzdGlja3lIZWFkZXI6IHtcbiAgICAgIGJvcmRlckNvbGxhcHNlOiAnc2VwYXJhdGUnXG4gICAgfVxuICB9O1xufTtcbnZhciBkZWZhdWx0Q29tcG9uZW50ID0gJ3RhYmxlJztcbnZhciBUYWJsZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRhYmxlKHByb3BzLCByZWYpIHtcbiAgdmFyIGNsYXNzZXMgPSBwcm9wcy5jbGFzc2VzLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgX3Byb3BzJGNvbXBvbmVudCA9IHByb3BzLmNvbXBvbmVudCxcbiAgICAgIENvbXBvbmVudCA9IF9wcm9wcyRjb21wb25lbnQgPT09IHZvaWQgMCA/IGRlZmF1bHRDb21wb25lbnQgOiBfcHJvcHMkY29tcG9uZW50LFxuICAgICAgX3Byb3BzJHBhZGRpbmcgPSBwcm9wcy5wYWRkaW5nLFxuICAgICAgcGFkZGluZyA9IF9wcm9wcyRwYWRkaW5nID09PSB2b2lkIDAgPyAnbm9ybWFsJyA6IF9wcm9wcyRwYWRkaW5nLFxuICAgICAgX3Byb3BzJHNpemUgPSBwcm9wcy5zaXplLFxuICAgICAgc2l6ZSA9IF9wcm9wcyRzaXplID09PSB2b2lkIDAgPyAnbWVkaXVtJyA6IF9wcm9wcyRzaXplLFxuICAgICAgX3Byb3BzJHN0aWNreUhlYWRlciA9IHByb3BzLnN0aWNreUhlYWRlcixcbiAgICAgIHN0aWNreUhlYWRlciA9IF9wcm9wcyRzdGlja3lIZWFkZXIgPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJHN0aWNreUhlYWRlcixcbiAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHByb3BzLCBbXCJjbGFzc2VzXCIsIFwiY2xhc3NOYW1lXCIsIFwiY29tcG9uZW50XCIsIFwicGFkZGluZ1wiLCBcInNpemVcIiwgXCJzdGlja3lIZWFkZXJcIl0pO1xuXG4gIHZhciB0YWJsZSA9IFJlYWN0LnVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICBwYWRkaW5nOiBwYWRkaW5nLFxuICAgICAgc2l6ZTogc2l6ZSxcbiAgICAgIHN0aWNreUhlYWRlcjogc3RpY2t5SGVhZGVyXG4gICAgfTtcbiAgfSwgW3BhZGRpbmcsIHNpemUsIHN0aWNreUhlYWRlcl0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHRhYmxlXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgIHJvbGU6IENvbXBvbmVudCA9PT0gZGVmYXVsdENvbXBvbmVudCA/IG51bGwgOiAndGFibGUnLFxuICAgIHJlZjogcmVmLFxuICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSwgc3RpY2t5SGVhZGVyICYmIGNsYXNzZXMuc3RpY2t5SGVhZGVyKVxuICB9LCBvdGhlcikpKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gVGFibGUucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogVGhlIGNvbnRlbnQgb2YgdGhlIHRhYmxlLCBub3JtYWxseSBgVGFibGVIZWFkYCBhbmQgYFRhYmxlQm9keWAuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKiBTZWUgW0NTUyBBUEldKCNjc3MpIGJlbG93IGZvciBtb3JlIGRldGFpbHMuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgcm9vdCBub2RlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKi9cbiAgY29tcG9uZW50OiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIEFsbG93cyBUYWJsZUNlbGxzIHRvIGluaGVyaXQgcGFkZGluZyBvZiB0aGUgVGFibGUuXG4gICAqIGBkZWZhdWx0YCBpcyBkZXByZWNhdGVkLCB1c2UgYG5vcm1hbGAgaW5zdGVhZC5cbiAgICovXG4gIHBhZGRpbmc6IGNoYWluUHJvcFR5cGVzKFByb3BUeXBlcy5vbmVPZihbJ25vcm1hbCcsICdjaGVja2JveCcsICdub25lJywgJ2RlZmF1bHQnXSksIGZ1bmN0aW9uIChwcm9wcykge1xuICAgIGlmIChwcm9wcy5wYWRkaW5nID09PSAnZGVmYXVsdCcpIHtcbiAgICAgIHJldHVybiBuZXcgRXJyb3IoJ01hdGVyaWFsLVVJOiBwYWRkaW5nPVwiZGVmYXVsdFwiIHdhcyByZW5hbWVkIHRvIHBhZGRpbmc9XCJub3JtYWxcIiBmb3IgY29uc2lzdGVuY3kuJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH0pLFxuXG4gIC8qKlxuICAgKiBBbGxvd3MgVGFibGVDZWxscyB0byBpbmhlcml0IHNpemUgb2YgdGhlIFRhYmxlLlxuICAgKi9cbiAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mKFsnc21hbGwnLCAnbWVkaXVtJ10pLFxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGhlYWRlciBzdGlja3kuXG4gICAqXG4gICAqIOKaoO+4jyBJdCBkb2Vzbid0IHdvcmsgd2l0aCBJRSAxMS5cbiAgICovXG4gIHN0aWNreUhlYWRlcjogUHJvcFR5cGVzLmJvb2xcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGVzKHN0eWxlcywge1xuICBuYW1lOiAnTXVpVGFibGUnXG59KShUYWJsZSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///82302\n')},56847:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export styles */\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87462);\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45987);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86010);\n/* harmony import */ var _styles_withStyles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14670);\n\n\n\n\n\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: \'100%\',\n    overflowX: \'auto\'\n  }\n};\nvar TableContainer = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? \'div\' : _props$component,\n      other = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(props, ["classes", "className", "component"]);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({\n    ref: ref,\n    className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(classes.root, className)\n  }, other));\n});\n false ? 0 : void 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_styles_withStyles__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(styles, {\n  name: \'MuiTableContainer\'\n})(TableContainer));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY4NDcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBEO0FBQ2dDO0FBQzNEO0FBQ0k7QUFDWDtBQUNzQjtBQUN2QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyw2Q0FBZ0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHVHQUF3Qjs7QUFFdEMsc0JBQXNCLGdEQUFtQixZQUFZLHVGQUFRO0FBQzdEO0FBQ0EsZUFBZSx5REFBSTtBQUNuQixHQUFHO0FBQ0gsQ0FBQztBQUNELE1BQXFDLEdBQUcsQ0F3QnZDLENBQUM7QUFDRixpRUFBZSx1RUFBVTtBQUN6QjtBQUNBLENBQUMsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudC1taXMtbW9iaWxlLWFwcC8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vVGFibGVDb250YWluZXIvVGFibGVDb250YWluZXIuanM/OWMyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgd2l0aFN0eWxlcyBmcm9tICcuLi9zdHlsZXMvd2l0aFN0eWxlcyc7XG5leHBvcnQgdmFyIHN0eWxlcyA9IHtcbiAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudC4gKi9cbiAgcm9vdDoge1xuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgb3ZlcmZsb3dYOiAnYXV0bydcbiAgfVxufTtcbnZhciBUYWJsZUNvbnRhaW5lciA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRhYmxlQ29udGFpbmVyKHByb3BzLCByZWYpIHtcbiAgdmFyIGNsYXNzZXMgPSBwcm9wcy5jbGFzc2VzLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgX3Byb3BzJGNvbXBvbmVudCA9IHByb3BzLmNvbXBvbmVudCxcbiAgICAgIENvbXBvbmVudCA9IF9wcm9wcyRjb21wb25lbnQgPT09IHZvaWQgMCA/ICdkaXYnIDogX3Byb3BzJGNvbXBvbmVudCxcbiAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHByb3BzLCBbXCJjbGFzc2VzXCIsIFwiY2xhc3NOYW1lXCIsIFwiY29tcG9uZW50XCJdKTtcblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgcmVmOiByZWYsXG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKVxuICB9LCBvdGhlcikpO1xufSk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBUYWJsZUNvbnRhaW5lci5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUaGUgdGFibGUgaXRzZWxmLCBub3JtYWxseSBgPFRhYmxlIC8+YFxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqIFNlZSBbQ1NTIEFQSV0oI2NzcykgYmVsb3cgZm9yIG1vcmUgZGV0YWlscy5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5lbGVtZW50VHlwZVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZXMoc3R5bGVzLCB7XG4gIG5hbWU6ICdNdWlUYWJsZUNvbnRhaW5lcidcbn0pKFRhYmxlQ29udGFpbmVyKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56847\n')},83750:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export styles */\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87462);\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45987);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86010);\n/* harmony import */ var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(14670);\n/* harmony import */ var _Table_Tablelvl2Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(10462);\n\n\n\n\n\n\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: \'table-header-group\'\n  }\n};\nvar tablelvl2 = {\n  variant: \'head\'\n};\nvar defaultComponent = \'thead\';\nvar TableHead = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(props, ["classes", "className", "component"]);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Table_Tablelvl2Context__WEBPACK_IMPORTED_MODULE_2__/* ["default"].Provider */ .Z.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({\n    className: (0,clsx__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : \'rowgroup\'\n  }, other)));\n});\n false ? 0 : void 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(styles, {\n  name: \'MuiTableHead\'\n})(TableHead));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODM3NTAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEwRDtBQUNnQztBQUMzRDtBQUNJO0FBQ1g7QUFDc0I7QUFDVztBQUNsRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2Q0FBZ0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHVHQUF3Qjs7QUFFdEMsc0JBQXNCLGdEQUFtQixDQUFDLDBGQUF5QjtBQUNuRTtBQUNBLEdBQUcsZUFBZSxnREFBbUIsWUFBWSx1RkFBUTtBQUN6RCxlQUFlLHlEQUFJO0FBQ25CO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELE1BQXFDLEdBQUcsQ0F3QnZDLENBQUM7QUFDRixpRUFBZSx1RUFBVTtBQUN6QjtBQUNBLENBQUMsWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnQtbWlzLW1vYmlsZS1hcHAvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL1RhYmxlSGVhZC9UYWJsZUhlYWQuanM/MjI2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgd2l0aFN0eWxlcyBmcm9tICcuLi9zdHlsZXMvd2l0aFN0eWxlcyc7XG5pbXBvcnQgVGFibGVsdmwyQ29udGV4dCBmcm9tICcuLi9UYWJsZS9UYWJsZWx2bDJDb250ZXh0JztcbmV4cG9ydCB2YXIgc3R5bGVzID0ge1xuICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50LiAqL1xuICByb290OiB7XG4gICAgZGlzcGxheTogJ3RhYmxlLWhlYWRlci1ncm91cCdcbiAgfVxufTtcbnZhciB0YWJsZWx2bDIgPSB7XG4gIHZhcmlhbnQ6ICdoZWFkJ1xufTtcbnZhciBkZWZhdWx0Q29tcG9uZW50ID0gJ3RoZWFkJztcbnZhciBUYWJsZUhlYWQgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBUYWJsZUhlYWQocHJvcHMsIHJlZikge1xuICB2YXIgY2xhc3NlcyA9IHByb3BzLmNsYXNzZXMsXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBfcHJvcHMkY29tcG9uZW50ID0gcHJvcHMuY29tcG9uZW50LFxuICAgICAgQ29tcG9uZW50ID0gX3Byb3BzJGNvbXBvbmVudCA9PT0gdm9pZCAwID8gZGVmYXVsdENvbXBvbmVudCA6IF9wcm9wcyRjb21wb25lbnQsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiY2xhc3Nlc1wiLCBcImNsYXNzTmFtZVwiLCBcImNvbXBvbmVudFwiXSk7XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlbHZsMkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogdGFibGVsdmwyXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSksXG4gICAgcmVmOiByZWYsXG4gICAgcm9sZTogQ29tcG9uZW50ID09PSBkZWZhdWx0Q29tcG9uZW50ID8gbnVsbCA6ICdyb3dncm91cCdcbiAgfSwgb3RoZXIpKSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFRhYmxlSGVhZC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUaGUgY29udGVudCBvZiB0aGUgY29tcG9uZW50LCBub3JtYWxseSBgVGFibGVSb3dgLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqIFNlZSBbQ1NTIEFQSV0oI2NzcykgYmVsb3cgZm9yIG1vcmUgZGV0YWlscy5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5lbGVtZW50VHlwZVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZXMoc3R5bGVzLCB7XG4gIG5hbWU6ICdNdWlUYWJsZUhlYWQnXG59KShUYWJsZUhlYWQpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///83750\n')},59067:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\nvar _interopRequireDefault = __webpack_require__(95318);\n\nvar _interopRequireWildcard = __webpack_require__(20862);\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.Z = void 0;\n\nvar React = _interopRequireWildcard(__webpack_require__(67294));\n\nvar _createSvgIcon = _interopRequireDefault(__webpack_require__(2108));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement("path", {\n  d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"\n}), \'Edit\');\n\nexports.Z = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkwNjcuanMiLCJtYXBwaW5ncyI6IjtBQUFhOztBQUViLDZCQUE2QixtQkFBTyxDQUFDLEtBQThDOztBQUVuRiw4QkFBOEIsbUJBQU8sQ0FBQyxLQUErQzs7QUFFckYsNkJBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxDQUFDO0FBQ0YsU0FBZTs7QUFFZixvQ0FBb0MsbUJBQU8sQ0FBQyxLQUFPOztBQUVuRCw0Q0FBNEMsbUJBQU8sQ0FBQyxJQUF1Qjs7QUFFM0U7QUFDQTtBQUNBLENBQUM7O0FBRUQsU0FBZSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnQtbWlzLW1vYmlsZS1hcHAvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2ljb25zL0VkaXQuanM/MzBmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlV2lsZGNhcmRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBSZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbnZhciBfY3JlYXRlU3ZnSWNvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXRpbHMvY3JlYXRlU3ZnSWNvblwiKSk7XG5cbnZhciBfZGVmYXVsdCA9ICgwLCBfY3JlYXRlU3ZnSWNvbi5kZWZhdWx0KSggLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgZDogXCJNMyAxNy4yNVYyMWgzLjc1TDE3LjgxIDkuOTRsLTMuNzUtMy43NUwzIDE3LjI1ek0yMC43MSA3LjA0Yy4zOS0uMzkuMzktMS4wMiAwLTEuNDFsLTIuMzQtMi4zNGEuOTk1OS45OTU5IDAgMDAtMS40MSAwbC0xLjgzIDEuODMgMy43NSAzLjc1IDEuODMtMS44M3pcIlxufSksICdFZGl0Jyk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///59067\n')},15549:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\nvar _interopRequireDefault = __webpack_require__(95318);\n\nvar _interopRequireWildcard = __webpack_require__(20862);\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.Z = void 0;\n\nvar React = _interopRequireWildcard(__webpack_require__(67294));\n\nvar _createSvgIcon = _interopRequireDefault(__webpack_require__(2108));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("path", {\n  d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"\n}), /*#__PURE__*/React.createElement("path", {\n  d: "M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"\n})), \'ZoomIn\');\n\nexports.Z = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU1NDkuanMiLCJtYXBwaW5ncyI6IjtBQUFhOztBQUViLDZCQUE2QixtQkFBTyxDQUFDLEtBQThDOztBQUVuRiw4QkFBOEIsbUJBQU8sQ0FBQyxLQUErQzs7QUFFckYsNkJBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxDQUFDO0FBQ0YsU0FBZTs7QUFFZixvQ0FBb0MsbUJBQU8sQ0FBQyxLQUFPOztBQUVuRCw0Q0FBNEMsbUJBQU8sQ0FBQyxJQUF1Qjs7QUFFM0U7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7O0FBRUQsU0FBZSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnQtbWlzLW1vYmlsZS1hcHAvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2ljb25zL1pvb21Jbi5qcz9iOWU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxudmFyIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZFwiKTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIFJlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcInJlYWN0XCIpKTtcblxudmFyIF9jcmVhdGVTdmdJY29uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91dGlscy9jcmVhdGVTdmdJY29uXCIpKTtcblxudmFyIF9kZWZhdWx0ID0gKDAsIF9jcmVhdGVTdmdJY29uLmRlZmF1bHQpKCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgZDogXCJNMTUuNSAxNGgtLjc5bC0uMjgtLjI3QzE1LjQxIDEyLjU5IDE2IDExLjExIDE2IDkuNSAxNiA1LjkxIDEzLjA5IDMgOS41IDNTMyA1LjkxIDMgOS41IDUuOTEgMTYgOS41IDE2YzEuNjEgMCAzLjA5LS41OSA0LjIzLTEuNTdsLjI3LjI4di43OWw1IDQuOTlMMjAuNDkgMTlsLTQuOTktNXptLTYgMEM3LjAxIDE0IDUgMTEuOTkgNSA5LjVTNy4wMSA1IDkuNSA1IDE0IDcuMDEgMTQgOS41IDExLjk5IDE0IDkuNSAxNHpcIlxufSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gIGQ6IFwiTTEyIDEwaC0ydjJIOXYtMkg3VjloMlY3aDF2MmgydjF6XCJcbn0pKSwgJ1pvb21JbicpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///15549\n')},72378:(module,exports,__webpack_require__)=>{eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///72378\n")},69590:module=>{eval("/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjk1OTAuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsVUFBVTtBQUNqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsVUFBVTtBQUNqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIsVUFBVTtBQUMvQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQixVQUFVO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnQtbWlzLW1vYmlsZS1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtZmFzdC1jb21wYXJlL2luZGV4LmpzPzZlNjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIE1hcDpyZWFkb25seSwgU2V0OnJlYWRvbmx5LCBBcnJheUJ1ZmZlcjpyZWFkb25seSAqL1xuXG52YXIgaGFzRWxlbWVudFR5cGUgPSB0eXBlb2YgRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCc7XG52YXIgaGFzTWFwID0gdHlwZW9mIE1hcCA9PT0gJ2Z1bmN0aW9uJztcbnZhciBoYXNTZXQgPSB0eXBlb2YgU2V0ID09PSAnZnVuY3Rpb24nO1xudmFyIGhhc0FycmF5QnVmZmVyID0gdHlwZW9mIEFycmF5QnVmZmVyID09PSAnZnVuY3Rpb24nICYmICEhQXJyYXlCdWZmZXIuaXNWaWV3O1xuXG4vLyBOb3RlOiBXZSAqKmRvbid0KiogbmVlZCBgZW52SGFzQmlnSW50NjRBcnJheWAgaW4gZmRlIGVzNi9pbmRleC5qc1xuXG5mdW5jdGlvbiBlcXVhbChhLCBiKSB7XG4gIC8vIFNUQVJUOiBmYXN0LWRlZXAtZXF1YWwgZXM2L2luZGV4LmpzIDMuMS4xXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09ICdvYmplY3QnICYmIHR5cGVvZiBiID09ICdvYmplY3QnKSB7XG4gICAgaWYgKGEuY29uc3RydWN0b3IgIT09IGIuY29uc3RydWN0b3IpIHJldHVybiBmYWxzZTtcblxuICAgIHZhciBsZW5ndGgsIGksIGtleXM7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgaWYgKGxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgICBpZiAoIWVxdWFsKGFbaV0sIGJbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyBTVEFSVDogTW9kaWZpY2F0aW9uczpcbiAgICAvLyAxLiBFeHRyYSBgaGFzPFR5cGU+ICYmYCBoZWxwZXJzIGluIGluaXRpYWwgY29uZGl0aW9uIGFsbG93IGVzNiBjb2RlXG4gICAgLy8gICAgdG8gY28tZXhpc3Qgd2l0aCBlczUuXG4gICAgLy8gMi4gUmVwbGFjZSBgZm9yIG9mYCB3aXRoIGVzNSBjb21wbGlhbnQgaXRlcmF0aW9uIHVzaW5nIGBmb3JgLlxuICAgIC8vICAgIEJhc2ljYWxseSwgdGFrZTpcbiAgICAvL1xuICAgIC8vICAgIGBgYGpzXG4gICAgLy8gICAgZm9yIChpIG9mIGEuZW50cmllcygpKVxuICAgIC8vICAgICAgaWYgKCFiLmhhcyhpWzBdKSkgcmV0dXJuIGZhbHNlO1xuICAgIC8vICAgIGBgYFxuICAgIC8vXG4gICAgLy8gICAgLi4uIGFuZCBjb252ZXJ0IHRvOlxuICAgIC8vXG4gICAgLy8gICAgYGBganNcbiAgICAvLyAgICBpdCA9IGEuZW50cmllcygpO1xuICAgIC8vICAgIHdoaWxlICghKGkgPSBpdC5uZXh0KCkpLmRvbmUpXG4gICAgLy8gICAgICBpZiAoIWIuaGFzKGkudmFsdWVbMF0pKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gICAgYGBgXG4gICAgLy9cbiAgICAvLyAgICAqKk5vdGUqKjogYGlgIGFjY2VzcyBzd2l0Y2hlcyB0byBgaS52YWx1ZWAuXG4gICAgdmFyIGl0O1xuICAgIGlmIChoYXNNYXAgJiYgKGEgaW5zdGFuY2VvZiBNYXApICYmIChiIGluc3RhbmNlb2YgTWFwKSkge1xuICAgICAgaWYgKGEuc2l6ZSAhPT0gYi5zaXplKSByZXR1cm4gZmFsc2U7XG4gICAgICBpdCA9IGEuZW50cmllcygpO1xuICAgICAgd2hpbGUgKCEoaSA9IGl0Lm5leHQoKSkuZG9uZSlcbiAgICAgICAgaWYgKCFiLmhhcyhpLnZhbHVlWzBdKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgaXQgPSBhLmVudHJpZXMoKTtcbiAgICAgIHdoaWxlICghKGkgPSBpdC5uZXh0KCkpLmRvbmUpXG4gICAgICAgIGlmICghZXF1YWwoaS52YWx1ZVsxXSwgYi5nZXQoaS52YWx1ZVswXSkpKSByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoaGFzU2V0ICYmIChhIGluc3RhbmNlb2YgU2V0KSAmJiAoYiBpbnN0YW5jZW9mIFNldCkpIHtcbiAgICAgIGlmIChhLnNpemUgIT09IGIuc2l6ZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgaXQgPSBhLmVudHJpZXMoKTtcbiAgICAgIHdoaWxlICghKGkgPSBpdC5uZXh0KCkpLmRvbmUpXG4gICAgICAgIGlmICghYi5oYXMoaS52YWx1ZVswXSkpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvLyBFTkQ6IE1vZGlmaWNhdGlvbnNcblxuICAgIGlmIChoYXNBcnJheUJ1ZmZlciAmJiBBcnJheUJ1ZmZlci5pc1ZpZXcoYSkgJiYgQXJyYXlCdWZmZXIuaXNWaWV3KGIpKSB7XG4gICAgICBsZW5ndGggPSBhLmxlbmd0aDtcbiAgICAgIGlmIChsZW5ndGggIT0gYi5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOylcbiAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmIChhLmNvbnN0cnVjdG9yID09PSBSZWdFeHApIHJldHVybiBhLnNvdXJjZSA9PT0gYi5zb3VyY2UgJiYgYS5mbGFncyA9PT0gYi5mbGFncztcbiAgICBpZiAoYS52YWx1ZU9mICE9PSBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YpIHJldHVybiBhLnZhbHVlT2YoKSA9PT0gYi52YWx1ZU9mKCk7XG4gICAgaWYgKGEudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpIHJldHVybiBhLnRvU3RyaW5nKCkgPT09IGIudG9TdHJpbmcoKTtcblxuICAgIGtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICBpZiAobGVuZ3RoICE9PSBPYmplY3Qua2V5cyhiKS5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOylcbiAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIGtleXNbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gRU5EOiBmYXN0LWRlZXAtZXF1YWxcblxuICAgIC8vIFNUQVJUOiByZWFjdC1mYXN0LWNvbXBhcmVcbiAgICAvLyBjdXN0b20gaGFuZGxpbmcgZm9yIERPTSBlbGVtZW50c1xuICAgIGlmIChoYXNFbGVtZW50VHlwZSAmJiBhIGluc3RhbmNlb2YgRWxlbWVudCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgLy8gY3VzdG9tIGhhbmRsaW5nIGZvciBSZWFjdC9QcmVhY3RcbiAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSAhPT0gMDspIHtcbiAgICAgIGlmICgoa2V5c1tpXSA9PT0gJ19vd25lcicgfHwga2V5c1tpXSA9PT0gJ19fdicgfHwga2V5c1tpXSA9PT0gJ19fbycpICYmIGEuJCR0eXBlb2YpIHtcbiAgICAgICAgLy8gUmVhY3Qtc3BlY2lmaWM6IGF2b2lkIHRyYXZlcnNpbmcgUmVhY3QgZWxlbWVudHMnIF9vd25lclxuICAgICAgICAvLyBQcmVhY3Qtc3BlY2lmaWM6IGF2b2lkIHRyYXZlcnNpbmcgUHJlYWN0IGVsZW1lbnRzJyBfX3YgYW5kIF9fb1xuICAgICAgICAvLyAgICBfX3YgPSAkX29yaWdpbmFsIC8gJF92bm9kZVxuICAgICAgICAvLyAgICBfX28gPSAkX293bmVyXG4gICAgICAgIC8vIFRoZXNlIHByb3BlcnRpZXMgY29udGFpbiBjaXJjdWxhciByZWZlcmVuY2VzIGFuZCBhcmUgbm90IG5lZWRlZCB3aGVuXG4gICAgICAgIC8vIGNvbXBhcmluZyB0aGUgYWN0dWFsIGVsZW1lbnRzIChhbmQgbm90IHRoZWlyIG93bmVycylcbiAgICAgICAgLy8gLiQkdHlwZW9mIGFuZCAuX3N0b3JlIG9uIGp1c3QgcmVhc29uYWJsZSBtYXJrZXJzIG9mIGVsZW1lbnRzXG5cbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIC8vIGFsbCBvdGhlciBwcm9wZXJ0aWVzIHNob3VsZCBiZSB0cmF2ZXJzZWQgYXMgdXN1YWxcbiAgICAgIGlmICghZXF1YWwoYVtrZXlzW2ldXSwgYltrZXlzW2ldXSkpIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gRU5EOiByZWFjdC1mYXN0LWNvbXBhcmVcblxuICAgIC8vIFNUQVJUOiBmYXN0LWRlZXAtZXF1YWxcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBhICE9PSBhICYmIGIgIT09IGI7XG59XG4vLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNFcXVhbChhLCBiKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVxdWFsKGEsIGIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmICgoKGVycm9yLm1lc3NhZ2UgfHwgJycpLm1hdGNoKC9zdGFja3xyZWN1cnNpb24vaSkpKSB7XG4gICAgICAvLyB3YXJuIG9uIGNpcmN1bGFyIHJlZmVyZW5jZXMsIGRvbid0IGNyYXNoXG4gICAgICAvLyBicm93c2VycyBnaXZlIHRoaXMgZGlmZmVyZW50IGVycm9ycyBuYW1lIGFuZCBtZXNzYWdlczpcbiAgICAgIC8vIGNocm9tZS9zYWZhcmk6IFwiUmFuZ2VFcnJvclwiLCBcIk1heGltdW0gY2FsbCBzdGFjayBzaXplIGV4Y2VlZGVkXCJcbiAgICAgIC8vIGZpcmVmb3g6IFwiSW50ZXJuYWxFcnJvclwiLCB0b28gbXVjaCByZWN1cnNpb25cIlxuICAgICAgLy8gZWRnZTogXCJFcnJvclwiLCBcIk91dCBvZiBzdGFjayBzcGFjZVwiXG4gICAgICBjb25zb2xlLndhcm4oJ3JlYWN0LWZhc3QtY29tcGFyZSBjYW5ub3QgaGFuZGxlIGNpcmN1bGFyIHJlZnMnKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gc29tZSBvdGhlciBlcnJvci4gd2Ugc2hvdWxkIGRlZmluaXRlbHkga25vdyBhYm91dCB0aGVzZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///69590\n")},8002:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "G7": () => (/* reexport */ TABS_IDS),\n  "Tk": () => (/* reexport */ TOOLS_IDS),\n  "ZP": () => (/* binding */ react_filerobot_image_editor_lib)\n});\n\n// NAMESPACE OBJECT: ./node_modules/react-konva/es/ReactKonvaHostConfig.js\nvar ReactKonvaHostConfig_namespaceObject = {};\n__webpack_require__.r(ReactKonvaHostConfig_namespaceObject);\n__webpack_require__.d(ReactKonvaHostConfig_namespaceObject, {\n  "appendChild": () => (appendChild),\n  "appendChildToContainer": () => (appendChildToContainer),\n  "appendInitialChild": () => (appendInitialChild),\n  "cancelTimeout": () => (cancelTimeout),\n  "clearContainer": () => (clearContainer),\n  "commitMount": () => (commitMount),\n  "commitTextUpdate": () => (commitTextUpdate),\n  "commitUpdate": () => (commitUpdate),\n  "createInstance": () => (createInstance),\n  "createTextInstance": () => (createTextInstance),\n  "finalizeInitialChildren": () => (finalizeInitialChildren),\n  "getChildHostContext": () => (getChildHostContext),\n  "getPublicInstance": () => (getPublicInstance),\n  "getRootHostContext": () => (getRootHostContext),\n  "hideInstance": () => (hideInstance),\n  "hideTextInstance": () => (hideTextInstance),\n  "idlePriority": () => (scheduler.unstable_IdlePriority),\n  "insertBefore": () => (insertBefore),\n  "insertInContainerBefore": () => (insertInContainerBefore),\n  "isPrimaryRenderer": () => (isPrimaryRenderer),\n  "noTimeout": () => (noTimeout),\n  "now": () => (scheduler.unstable_now),\n  "prepareForCommit": () => (prepareForCommit),\n  "preparePortalMount": () => (preparePortalMount),\n  "prepareUpdate": () => (prepareUpdate),\n  "removeChild": () => (removeChild),\n  "removeChildFromContainer": () => (removeChildFromContainer),\n  "resetAfterCommit": () => (resetAfterCommit),\n  "resetTextContent": () => (resetTextContent),\n  "run": () => (scheduler.unstable_runWithPriority),\n  "scheduleTimeout": () => (scheduleTimeout),\n  "shouldDeprioritizeSubtree": () => (shouldDeprioritizeSubtree),\n  "shouldSetTextContent": () => (shouldSetTextContent),\n  "supportsMutation": () => (supportsMutation),\n  "unhideInstance": () => (unhideInstance),\n  "unhideTextInstance": () => (unhideTextInstance),\n  "warnsIfNotActing": () => (warnsIfNotActing)\n});\n\n// NAMESPACE OBJECT: ./node_modules/react-filerobot-image-editor/lib/custom/filters/index.js\nvar filters_namespaceObject = {};\n__webpack_require__.r(filters_namespaceObject);\n__webpack_require__.d(filters_namespaceObject, {\n  "Aden": () => (filters_Aden),\n  "Amaro": () => (filters_Amaro),\n  "Ashby": () => (filters_Ashby),\n  "BlackAndWhite": () => (filters_BlackAndWhite),\n  "Brannan": () => (filters_Brannan),\n  "Brooklyn": () => (filters_Brooklyn),\n  "Charmes": () => (filters_Charmes),\n  "Clarendon": () => (filters_Clarendon),\n  "Crema": () => (filters_Crema),\n  "Dogpatch": () => (filters_Dogpatch),\n  "Earlybird": () => (filters_Earlybird),\n  "Gingham": () => (filters_Gingham),\n  "Ginza": () => (filters_Ginza),\n  "Hefe": () => (filters_Hefe),\n  "Helena": () => (filters_Helena),\n  "Hudson": () => (filters_Hudson),\n  "Juno": () => (filters_Juno),\n  "Kelvin": () => (filters_Kelvin),\n  "Lark": () => (filters_Lark),\n  "LoFi": () => (filters_LoFi),\n  "Ludwig": () => (filters_Ludwig),\n  "Maven": () => (filters_Maven),\n  "Mayfair": () => (filters_Mayfair),\n  "Moon": () => (filters_Moon),\n  "Nashville": () => (filters_Nashville),\n  "NinteenSeventySeven": () => (filters_NinteenSeventySeven),\n  "Perpetua": () => (filters_Perpetua),\n  "Reyes": () => (filters_Reyes),\n  "Rise": () => (filters_Rise),\n  "Sierra": () => (filters_Sierra),\n  "Skyline": () => (filters_Skyline),\n  "Slumber": () => (filters_Slumber),\n  "Stinson": () => (filters_Stinson),\n  "Sutro": () => (filters_Sutro),\n  "Toaster": () => (filters_Toaster),\n  "Valencia": () => (filters_Valencia),\n  "Vesper": () => (filters_Vesper),\n  "Walden": () => (filters_Walden),\n  "Willow": () => (filters_Willow),\n  "XPro2": () => (filters_XPro2)\n});\n\n// NAMESPACE OBJECT: ./node_modules/react-filerobot-image-editor/lib/custom/finetunes/index.js\nvar finetunes_namespaceObject = {};\n__webpack_require__.r(finetunes_namespaceObject);\n__webpack_require__.d(finetunes_namespaceObject, {\n  "CustomThreshold": () => (finetunes_CustomThreshold),\n  "Warmth": () => (finetunes_Warmth)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__(45987);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(4942);\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(45697);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: ./node_modules/react-is/index.js\nvar react_is = __webpack_require__(59864);\n// EXTERNAL MODULE: ./node_modules/shallowequal/index.js\nvar shallowequal = __webpack_require__(96774);\nvar shallowequal_default = /*#__PURE__*/__webpack_require__.n(shallowequal);\n;// CONCATENATED MODULE: ./node_modules/@emotion/stylis/dist/stylis.browser.esm.js\nfunction stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = \'\', p = \'\', F = \'\', G = \'\', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, \'\')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, \'\').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, \'\'));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(\'\'), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = \'\'));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + \'{\' + k + \'}\';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, \'$1 $2\');\n                    k = f + \'{\' + k + \'}\';\n                    k = 1 === w || 2 === w && L(\'@\' + k, 3) ? \'@-webkit-\' + k + \'@\' + k : \'@\' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, \'\'));\n                } else k = \'\';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = \'\';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, \'\') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(\' \', \':\')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = \'\\x00\\x00\'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = \'\';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += \'\\x00\');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = \'\';\n                  break;\n\n                default:\n                  32 !== g && (y = \' \');\n              }\n              break;\n\n            case 0:\n              y = \'\\\\0\';\n              break;\n\n            case 12:\n              y = \'\\\\f\';\n              break;\n\n            case 11:\n              y = \'\\\\v\';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = \'\\f\' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += \'\\r\');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = \'\', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(\',\') + \'{\' + p + \'}\';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, \':-moz-$1\') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, \'::-webkit-input-$1\') + p.replace(Q, \'::-moz-$1\') + p.replace(Q, \':-ms-input-$1\') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? \'\' : d[0] + \' \'; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + \' \', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, \'$1\' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, \'$1\' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf(\'\\f\')) return c.replace(F, (58 === d.charCodeAt(0) ? \'\' : \'$1\') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + \';\',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(\':\', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + \';\';\n      return 1 === w || 2 === w && L(b, 1) ? \'-webkit-\' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? \'-webkit-\' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? \'-webkit-\' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? \'-webkit-\' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return \'-webkit-\' + a + a;\n\n      case 978:\n        return \'-webkit-\' + a + \'-moz-\' + a + a;\n\n      case 1019:\n      case 983:\n        return \'-webkit-\' + a + \'-moz-\' + a + \'-ms-\' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return \'-webkit-\' + a + a;\n        if (0 < a.indexOf(\'image-set(\', 11)) return a.replace(ja, \'$1-webkit-$2\') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return \'-webkit-box-\' + a.replace(\'-grow\', \'\') + \'-webkit-\' + a + \'-ms-\' + a.replace(\'grow\', \'positive\') + a;\n\n          case 115:\n            return \'-webkit-\' + a + \'-ms-\' + a.replace(\'shrink\', \'negative\') + a;\n\n          case 98:\n            return \'-webkit-\' + a + \'-ms-\' + a.replace(\'basis\', \'preferred-size\') + a;\n        }\n        return \'-webkit-\' + a + \'-ms-\' + a + a;\n\n      case 964:\n        return \'-webkit-\' + a + \'-ms-flex-\' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(\':\', 15)).replace(\'flex-\', \'\').replace(\'space-between\', \'justify\');\n        return \'-webkit-box-pack\' + b + \'-webkit-\' + a + \'-ms-flex-pack\' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, \':-webkit-\') + a.replace(aa, \':-moz-\') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf(\'-\') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, \'tb\');\n            break;\n\n          case 232:\n            b = a.replace(G, \'tb-rl\');\n            break;\n\n          case 220:\n            b = a.replace(G, \'lr\');\n            break;\n\n          default:\n            return a;\n        }\n\n        return \'-webkit-\' + a + \'-ms-\' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf(\'sticky\', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(\':\', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, \'-webkit-\' + b) + \';\' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, \'-webkit-\' + (102 < m ? \'inline-\' : \'\') + \'box\') + \';\' + a.replace(b, \'-webkit-\' + b) + \';\' + a.replace(b, \'-ms-\' + b + \'box\') + \';\' + a;\n        }\n\n        return a + \';\';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace(\'-items\', \'\'), \'-webkit-\' + a + \'-webkit-box-\' + b + \'-ms-flex-\' + b + a;\n\n          case 115:\n            return \'-webkit-\' + a + \'-ms-flex-item-\' + a.replace(ba, \'\') + a;\n\n          default:\n            return \'-webkit-\' + a + \'-ms-flex-line-pack\' + a.replace(\'align-content\', \'\').replace(ba, \'\') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(\':\') + 1)).charCodeAt(0) ? P(d.replace(\'stretch\', \'fill-available\'), c, e, h).replace(\':fill-available\', \':stretch\') : a.replace(b, \'-webkit-\' + b) + a.replace(b, \'-moz-\' + b.replace(\'fill-\', \'\')) + a;\n        break;\n\n      case 962:\n        if (a = \'-webkit-\' + a + (102 === a.charCodeAt(5) ? \'-ms-\' + a : \'\') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf(\'transform\', 10)) return a.substring(0, a.indexOf(\';\', 27) + 1).replace(ma, \'$1-webkit-$2\') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? \':\' : \'{\'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, \'$1\'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + \';\' ? e.replace(oa, \' or ($1)\').substring(4) : \'(\' + c + \')\';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if (\'function\' === typeof d) S[A++] = d;else if (\'object\' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? \'function\' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && \'string\' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = \'\';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = \'\';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\n/* harmony default export */ const stylis_browser_esm = (stylis_min);\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n/* harmony default export */ const unitless_browser_esm = (unitlessKeys);\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js\nfunction memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ const emotion_memoize_browser_esm = (memoize);\n\n;// CONCATENATED MODULE: ./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js\n\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */emotion_memoize_browser_esm(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\n/* harmony default export */ const emotion_is_prop_valid_browser_esm = (isPropValid);\n\n// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(8679);\nvar hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);\n;// CONCATENATED MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nfunction v(){return(v=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var g=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},S=function(t){return null!==t&&"object"==typeof t&&"[object Object]"===(t.toString?t.toString():Object.prototype.toString.call(t))&&!(0,react_is.typeOf)(t)},w=Object.freeze([]),E=Object.freeze({});function b(e){return"function"==typeof e}function _(e){return false||e.displayName||e.name||"Component"}function N(e){return e&&"string"==typeof e.styledComponentId}var A="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",C="5.3.5",I="undefined"!=typeof window&&"HTMLElement"in window,P=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY?"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY:"production"!=="production"),O={},R= false?0:{};function D(){for(var e=arguments.length<=0?void 0:arguments[0],t=[],n=1,r=arguments.length;n<r;n+=1)t.push(n<0||arguments.length<=n?void 0:arguments[n]);return t.forEach((function(t){e=e.replace(/%[a-z]/,t)})),e}function j(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw true?new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):"")):0}var T=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;)(o<<=1)<0&&j(16,""+e);this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var s=r;s<o;s++)this.groupSizes[s]=0}for(var i=this.indexOfGroup(e+1),a=0,c=t.length;a<c;a++)this.tag.insertRule(i,t[a])&&(this.groupSizes[e]++,i++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,s=r;s<o;s++)t+=this.tag.getRule(s)+"/*!sc*/\\n";return t},e}(),x=new Map,k=new Map,V=1,B=function(e){if(x.has(e))return x.get(e);for(;k.has(V);)V++;var t=V++;return false&&0,x.set(e,t),k.set(t,e),t},z=function(e){return k.get(e)},M=function(e,t){t>=V&&(V=t+1),x.set(e,t),k.set(t,e)},G="style["+A+\'][data-styled-version="5.3.5"]\',L=new RegExp("^"+A+\'\\\\.g(\\\\d+)\\\\[id="([\\\\w\\\\d-]+)"\\\\].*?"([^"]*)\'),F=function(e,t,n){for(var r,o=n.split(","),s=0,i=o.length;s<i;s++)(r=o[s])&&e.registerName(t,r)},Y=function(e,t){for(var n=(t.textContent||"").split("/*!sc*/\\n"),r=[],o=0,s=n.length;o<s;o++){var i=n[o].trim();if(i){var a=i.match(L);if(a){var c=0|parseInt(a[1],10),u=a[2];0!==c&&(M(u,c),F(e,u,a[3]),e.getTag().insertRules(c,r)),r.length=0}else r.push(i)}}},q=function(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null},H=function(e){var t=document.head,n=e||t,r=document.createElement("style"),o=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(A))return r}}(n),s=void 0!==o?o.nextSibling:null;r.setAttribute(A,"active"),r.setAttribute("data-styled-version","5.3.5");var i=q();return i&&r.setAttribute("nonce",i),n.insertBefore(r,s),r},$=function(){function e(e){var t=this.element=H(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o}j(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),W=function(){function e(e){var t=this.element=H(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),U=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),J=I,X={isServer:!I,useCSSOMInjection:!P},Z=function(){function e(e,t,n){void 0===e&&(e=E),void 0===t&&(t={}),this.options=v({},X,{},e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&I&&J&&(J=!1,function(e){for(var t=document.querySelectorAll(G),n=0,r=t.length;n<r;n++){var o=t[n];o&&"active"!==o.getAttribute(A)&&(Y(e,o),o.parentNode&&o.parentNode.removeChild(o))}}(this))}e.registerId=function(e){return B(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(v({},this.options,{},t),this.gs,n&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,r=t.useCSSOMInjection,o=t.target,e=n?new U(o):r?new $(o):new W(o),new T(e)));var e,t,n,r,o},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(B(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(B(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(B(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",o=0;o<n;o++){var s=z(o);if(void 0!==s){var i=e.names.get(s),a=t.getGroup(o);if(i&&a&&i.size){var c=A+".g"+o+\'[id="\'+s+\'"]\',u="";void 0!==i&&i.forEach((function(e){e.length>0&&(u+=e+",")})),r+=""+a+c+\'{content:"\'+u+\'"}/*!sc*/\\n\'}}}return r}(this)},e}(),K=/(a)(d)/gi,Q=function(e){return String.fromCharCode(e+(e>25?39:97))};function ee(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=Q(t%52)+n;return(Q(t%52)+n).replace(K,"$1-$2")}var te=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},ne=function(e){return te(5381,e)};function re(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(b(n)&&!N(n))return!1}return!0}var oe=ne("5.3.5"),se=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic= true&&(void 0===n||n.isStatic)&&re(e),this.componentId=t,this.baseHash=te(oe,t),this.baseStyle=n,Z.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId,o=[];if(this.baseStyle&&o.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))o.push(this.staticRulesId);else{var s=Ne(this.rules,e,t,n).join(""),i=ee(te(this.baseHash,s)>>>0);if(!t.hasNameForId(r,i)){var a=n(s,"."+i,void 0,r);t.insertRules(r,i,a)}o.push(i),this.staticRulesId=i}else{for(var c=this.rules.length,u=te(this.baseHash,n.hash),l="",d=0;d<c;d++){var h=this.rules[d];if("string"==typeof h)l+=h, false&&(0);else if(h){var p=Ne(h,e,t,n),f=Array.isArray(p)?p.join(""):p;u=te(u,f+d),l+=f}}if(l){var m=ee(u>>>0);if(!t.hasNameForId(r,m)){var y=n(l,"."+m,void 0,r);t.insertRules(r,m,y)}o.push(m)}}return o.join(" ")},e}(),ie=/^\\s*\\/\\/.*$/gm,ae=[":","[",".","#"];function ce(e){var t,n,r,o,s=void 0===e?E:e,i=s.options,a=void 0===i?E:i,c=s.plugins,u=void 0===c?w:c,l=new stylis_browser_esm(a),d=[],h=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,s,i,a,c,u,l,d){switch(n){case 1:if(0===l&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===u)return r+"/*|*/";break;case 3:switch(u){case 102:case 112:return e(o[0]+r),"";default:return r+(0===d?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}((function(e){d.push(e)})),f=function(e,r,s){return 0===r&&-1!==ae.indexOf(s[n.length])||s.match(o)?e:"."+t};function m(e,s,i,a){void 0===a&&(a="&");var c=e.replace(ie,""),u=s&&i?i+" "+s+" { "+c+" }":c;return t=a,n=s,r=new RegExp("\\\\"+n+"\\\\b","g"),o=new RegExp("(\\\\"+n+"\\\\b){2,}"),l(i||!s?"":s,u)}return l.use([].concat(u,[function(e,t,o){2===e&&o.length&&o[0].lastIndexOf(n)>0&&(o[0]=o[0].replace(r,f))},h,function(e){if(-2===e){var t=d;return d=[],t}}])),m.hash=u.length?u.reduce((function(e,t){return t.name||j(15),te(e,t.name)}),5381).toString():"",m}var ue=react.createContext(),le=ue.Consumer,de=react.createContext(),he=(de.Consumer,new Z),pe=ce();function fe(){return (0,react.useContext)(ue)||he}function me(){return (0,react.useContext)(de)||pe}function ye(e){var t=(0,react.useState)(e.stylisPlugins),n=t[0],s=t[1],c=fe(),u=(0,react.useMemo)((function(){var t=c;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),l=(0,react.useMemo)((function(){return ce({options:{prefix:!e.disableVendorPrefixes},plugins:n})}),[e.disableVendorPrefixes,n]);return (0,react.useEffect)((function(){shallowequal_default()(n,e.stylisPlugins)||s(e.stylisPlugins)}),[e.stylisPlugins]),react.createElement(ue.Provider,{value:u},react.createElement(de.Provider,{value:l}, false?0:e.children))}var ve=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=pe);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"))},this.toString=function(){return j(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=pe),this.name+e.hash},e}(),ge=/([A-Z])/,Se=/([A-Z])/g,we=/^ms-/,Ee=function(e){return"-"+e.toLowerCase()};function be(e){return ge.test(e)?e.replace(Se,Ee).replace(we,"-ms-"):e}var _e=function(e){return null==e||!1===e||""===e};function Ne(e,n,r,o){if(Array.isArray(e)){for(var s,i=[],a=0,c=e.length;a<c;a+=1)""!==(s=Ne(e[a],n,r,o))&&(Array.isArray(s)?i.push.apply(i,s):i.push(s));return i}if(_e(e))return"";if(N(e))return"."+e.styledComponentId;if(b(e)){if("function"!=typeof(l=e)||l.prototype&&l.prototype.isReactComponent||!n)return e;var u=e(n);return false&&0,Ne(u,n,r,o)}var l;return e instanceof ve?r?(e.inject(r,o),e.getName(o)):e:S(e)?function e(t,n){var r,o,s=[];for(var i in t)t.hasOwnProperty(i)&&!_e(t[i])&&(Array.isArray(t[i])&&t[i].isCss||b(t[i])?s.push(be(i)+":",t[i],";"):S(t[i])?s.push.apply(s,e(t[i],i)):s.push(be(i)+": "+(r=i,null==(o=t[i])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||r in unitless_browser_esm?String(o).trim():o+"px")+";"));return n?[n+" {"].concat(s,["}"]):s}(e):e.toString()}var Ae=function(e){return Array.isArray(e)&&(e.isCss=!0),e};function Ce(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return b(e)||S(e)?Ae(Ne(g(w,[e].concat(n)))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:Ae(Ne(g(e,n)))}var Ie=/invalid hook call/i,Pe=new Set,Oe=function(e,t){if(false){ var o, n, r; }},Re=function(e,t,n){return void 0===n&&(n=E),e.theme!==n.theme&&e.theme||t||n.theme},De=/[!"#$%&\'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g,je=/(^-|-$)/g;function Te(e){return e.replace(De,"-").replace(je,"")}var xe=function(e){return ee(ne(e)>>>0)};function ke(e){return"string"==typeof e&&( true||0)}var Ve=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Be=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function ze(e,t,n){var r=e[n];Ve(t)&&Ve(r)?Me(r,t):e[n]=t}function Me(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var o=0,s=n;o<s.length;o++){var i=s[o];if(Ve(i))for(var a in i)Be(a)&&ze(e,i[a],a)}return e}var Ge=react.createContext(),Le=Ge.Consumer;function Fe(e){var t=(0,react.useContext)(Ge),n=(0,react.useMemo)((function(){return function(e,t){if(!e)return j(14);if(b(e)){var n=e(t);return true?n:0}return Array.isArray(e)||"object"!=typeof e?j(8):t?v({},t,{},e):e}(e.theme,t)}),[e.theme,t]);return e.children?react.createElement(Ge.Provider,{value:n},e.children):null}var Ye={};function qe(e,t,n){var o=N(e),i=!ke(e),a=t.attrs,c=void 0===a?w:a,d=t.componentId,h=void 0===d?function(e,t){var n="string"!=typeof e?"sc":Te(e);Ye[n]=(Ye[n]||0)+1;var r=n+"-"+xe("5.3.5"+n+Ye[n]);return t?t+"-"+r:r}(t.displayName,t.parentComponentId):d,p=t.displayName,f=void 0===p?function(e){return ke(e)?"styled."+e:"Styled("+_(e)+")"}(e):p,g=t.displayName&&t.componentId?Te(t.displayName)+"-"+t.componentId:t.componentId||h,S=o&&e.attrs?Array.prototype.concat(e.attrs,c).filter(Boolean):c,A=t.shouldForwardProp;o&&e.shouldForwardProp&&(A=t.shouldForwardProp?function(n,r,o){return e.shouldForwardProp(n,r,o)&&t.shouldForwardProp(n,r,o)}:e.shouldForwardProp);var C,I=new se(n,g,o?e.componentStyle:void 0),P=I.isStatic&&0===c.length,O=function(e,t){return function(e,t,n,r){var o=e.attrs,i=e.componentStyle,a=e.defaultProps,c=e.foldedComponentIds,d=e.shouldForwardProp,h=e.styledComponentId,p=e.target; false&&0;var f=function(e,t,n){void 0===e&&(e=E);var r=v({},t,{theme:e}),o={};return n.forEach((function(e){var t,n,s,i=e;for(t in b(i)&&(i=i(r)),i)r[t]=o[t]="className"===t?(n=o[t],s=i[t],n&&s?n+" "+s:n||s):i[t]})),[r,o]}(Re(t,(0,react.useContext)(Ge),a)||E,t,o),y=f[0],g=f[1],S=function(e,t,n,r){var o=fe(),s=me(),i=t?e.generateAndInjectStyles(E,o,s):e.generateAndInjectStyles(n,o,s);return false&&0, false&&0,i}(i,r,y, false?0:void 0),w=n,_=g.$as||t.$as||g.as||t.as||p,N=ke(_),A=g!==t?v({},t,{},g):t,C={};for(var I in A)"$"!==I[0]&&"as"!==I&&("forwardedAs"===I?C.as=A[I]:(d?d(I,emotion_is_prop_valid_browser_esm,_):!N||emotion_is_prop_valid_browser_esm(I))&&(C[I]=A[I]));return t.style&&g.style!==t.style&&(C.style=v({},t.style,{},g.style)),C.className=Array.prototype.concat(c,h,S!==h?S:null,t.className,g.className).filter(Boolean).join(" "),C.ref=w,(0,react.createElement)(_,C)}(C,e,t,P)};return O.displayName=f,(C=react.forwardRef(O)).attrs=S,C.componentStyle=I,C.displayName=f,C.shouldForwardProp=A,C.foldedComponentIds=o?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):w,C.styledComponentId=g,C.target=o?e.target:e,C.withComponent=function(e){var r=t.componentId,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(t,["componentId"]),s=r&&r+"-"+(ke(e)?e:Te(_(e)));return qe(e,v({},o,{attrs:S,componentId:s}),n)},Object.defineProperty(C,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=o?Me({},e.defaultProps,t):t}}), false&&(0),C.toString=function(){return"."+C.styledComponentId},i&&hoist_non_react_statics_cjs_default()(C,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),C}var He=function(e){return function e(t,r,o){if(void 0===o&&(o=E),!(0,react_is.isValidElementType)(r))return j(1,String(r));var s=function(){return t(r,o,Ce.apply(void 0,arguments))};return s.withConfig=function(n){return e(t,r,v({},o,{},n))},s.attrs=function(n){return e(t,r,v({},o,{attrs:Array.prototype.concat(o.attrs,n).filter(Boolean)}))},s}(qe,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach((function(e){He[e]=He(e)}));var $e=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=re(e),Z.registerId(this.componentId+1)}var t=e.prototype;return t.createStyles=function(e,t,n,r){var o=r(Ne(this.rules,t,n,r).join(""),""),s=this.componentId+e;n.insertRules(s,s,o)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,n,r){e>2&&Z.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)},e}();function We(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];var i=Ce.apply(void 0,[e].concat(n)),a="sc-global-"+xe(JSON.stringify(i)),u=new $e(i,a);function l(e){var t=fe(),n=me(),o=(0,react.useContext)(Ge),l=(0,react.useRef)(t.allocateGSInstance(a)).current;return false&&0, false&&0,t.server&&h(l,e,t,o,n),(0,react.useLayoutEffect)((function(){if(!t.server)return h(l,e,t,o,n),function(){return u.removeStyles(l,t)}}),[l,e,t,o,n]),null}function h(e,t,n,r,o){if(u.isStatic)u.renderStyles(e,O,n,o);else{var s=v({},t,{theme:Re(t,r,l.defaultProps)});u.renderStyles(e,s,n,o)}}return false&&0,react.memo(l)}function Ue(e){ false&&0;for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var o=Ce.apply(void 0,[e].concat(n)).join(""),s=xe(o);return new ve(s,o)}var Je=function(){function e(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString();if(!t)return"";var n=q();return"<style "+[n&&\'nonce="\'+n+\'"\',A+\'="true"\',\'data-styled-version="5.3.5"\'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?j(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return j(2);var n=((t={})[A]="",t["data-styled-version"]="5.3.5",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),o=q();return o&&(n.nonce=o),[react.createElement("style",v({},n,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new Z({isServer:!0}),this.sealed=!1}var t=e.prototype;return t.collectStyles=function(e){return this.sealed?j(2):react.createElement(ye,{sheet:this.instance},e)},t.interleaveWithNodeStream=function(e){return j(3)},e}(),Xe=function(e){var t=r.forwardRef((function(t,n){var o=s(Ge),i=e.defaultProps,a=Re(t,o,i);return false&&0,r.createElement(e,v({},t,{theme:a,ref:n}))}));return y(t,e),t.displayName="WithTheme("+_(e)+")",t},Ze=function(){return (0,react.useContext)(Ge)},Ke={StyleSheet:Z,masterSheet:he}; false&&0, false&&(0);/* harmony default export */ const styled_components_browser_esm = (He);\n//# sourceMappingURL=styled-components.browser.esm.js.map\n\n// EXTERNAL MODULE: ./node_modules/lodash.merge/index.js\nvar lodash_merge = __webpack_require__(72378);\nvar lodash_merge_default = /*#__PURE__*/__webpack_require__.n(lodash_merge);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/types/prop-types/record.js\n\nvar record = function record(keys, valueType) {\n  return keys.reduce(function (toObject, key) {\n    return Object.assign(toObject, (0,defineProperty/* default */.Z)({}, key, valueType));\n  }, {});\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/apply-polymorphic-function-prop.js\n/**\n * If your prop can be either a function or a plain value, this function handles\n * its usage for you – just provide the reference for a \'maybe function\' and the arguments\n * to call it with\n */\nfunction applyPolymorphicFunctionProp(prop) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return typeof prop === \'function\' ? prop.apply(void 0, args) : prop;\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/object-values.js\n/**\n * Type-safe Object.values\n */\nfunction objectValues(object) {\n  return Object.values(object);\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/object-keys.js\n/**\n * Type-safe Object.keys\n */\nfunction objectKeys(object) {\n  return Object.keys(object);\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/types/css/breakpoint.js\nvar Breakpoint = {\n  Xs: \'xs\',\n  Sm: \'sm\',\n  Md: \'md\',\n  Lg: \'lg\',\n  Xl: \'xl\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/types/palette/color.js\nvar Color = {\n  TextPrimary: \'txt-primary\',\n  TextPrimaryInvert: \'txt-primary-invert\',\n  TextSecondary: \'txt-secondary\',\n  TextSecondaryInvert: \'txt-secondary-invert\',\n  TextPlaceholder: \'txt-placeholder\',\n  AccentPrimary: \'accent-primary\',\n  AccentPrimaryHover: \'accent-primary-hover\',\n  AccentPrimaryActive: \'accent-primary-active\',\n  AccentPrimaryDisabled: \'accent-primary-disabled\',\n  BackgroundPrimary: \'bg-primary\',\n  BackgroundPrimaryHover: \'bg-primary-hover\',\n  BackgroundPrimaryActive: \'bg-primary-active\',\n  BackgroundPrimary_0_5_Opacity: \'bg-primary-0-5-opacity\',\n  BackgroundSecondary: \'bg-secondary\',\n  IconsPrimary: \'icons-primary\',\n  IconsPrimaryOpacity_0_6: \'icons-primary-opacity-0-6\',\n  IconsSecondary: \'icons-secondary\',\n  ButtonPrimaryText: \'btn-primary-text\',\n  ButtonDisabledText: \'btn-disabled-text\',\n  LinkPrimary: \'link-primary\',\n  LinkHover: \'link-hover\',\n  LinkActive: \'link-active\',\n  BordersPrimary: \'borders-primary\',\n  BordersSecondary: \'borders-secondary\',\n  BordersStrong: \'borders-strong\',\n  BordersInvert: \'borders-invert\',\n  BorderActiveBottom: \'border-active-bottom\',\n  ActiveSecondary: \'active-secondary\',\n  ActiveSecondaryHover: \'active-secondary-hover\',\n  ActiveSecondaryActive: \'active-secondary-active\',\n  Tag: \'tag\',\n  Error: \'error\',\n  Success: \'success\',\n  Warning: \'warning\',\n  Info: \'info\',\n  LightShadow: \'light-shadow\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/types/typography/font-variant.js\nvar FontVariant = {\n  TextExtraSmall: \'text-extra-small\',\n  TextSmall: \'text-small\',\n  TextNormal: \'text-normal\',\n  TextEmphasis: \'text-emphasis\',\n  TextExtraLarge: \'text-extra-large\',\n  LabelExtraSmall: \'label-extra-small\',\n  LabelSmall: \'label-small\',\n  LabelNormal: \'label-normal\',\n  LabelEmphasis: \'label-emphasis\',\n  LabelExtraLarge: \'label-extra-large\',\n  ButtonXs: \'btn-xs\',\n  ButtonSm: \'btn-sm\',\n  ButtonMd: \'btn-md\',\n  ButtonLg: \'btn-lg\',\n  ButtonXl: \'btn-xl\',\n  InputSm: \'input-sm\',\n  InputMd: \'input-md\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/types/shape/border-radius-size.js\nvar BorderRadiusSize = {\n  Sm: \'sm\',\n  Md: \'md\',\n  Lg: \'lg\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/theme/entity/default-theme.js\n\n\nvar _labelFontVariants, _breakpoints, _objectSpread2, _borderRadius;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\nvar fontFamily = \'"Roboto"\';\nvar defaultFontValue = {\n  fontFamily: fontFamily,\n  fontStyle: \'normal\',\n  fontWeight: \'normal\'\n};\nvar labelFontVariants = (_labelFontVariants = {}, (0,defineProperty/* default */.Z)(_labelFontVariants, FontVariant.LabelExtraSmall, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n  fontSize: \'10px\',\n  lineHeight: \'12px\'\n})), (0,defineProperty/* default */.Z)(_labelFontVariants, FontVariant.LabelSmall, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n  fontSize: \'12px\',\n  lineHeight: \'14px\'\n})), (0,defineProperty/* default */.Z)(_labelFontVariants, FontVariant.LabelNormal, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n  fontSize: \'14px\',\n  lineHeight: \'16px\'\n})), (0,defineProperty/* default */.Z)(_labelFontVariants, FontVariant.LabelEmphasis, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n  fontWeight: \'500\',\n  fontSize: \'14px\',\n  lineHeight: \'16px\'\n})), (0,defineProperty/* default */.Z)(_labelFontVariants, FontVariant.LabelExtraLarge, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n  fontWeight: \'500\',\n  fontSize: \'24px\',\n  lineHeight: \'28px\'\n})), _labelFontVariants);\nvar defaultTheme = {\n  breakpoints: (_breakpoints = {}, (0,defineProperty/* default */.Z)(_breakpoints, Breakpoint.Xs, 0), (0,defineProperty/* default */.Z)(_breakpoints, Breakpoint.Sm, 576), (0,defineProperty/* default */.Z)(_breakpoints, Breakpoint.Md, 768), (0,defineProperty/* default */.Z)(_breakpoints, Breakpoint.Lg, 992), (0,defineProperty/* default */.Z)(_breakpoints, Breakpoint.Xl, 1200), _breakpoints),\n  typography: {\n    // htmlFontSize: \'14px\',\n    fontFamily: fontFamily,\n    baseLineHeight: 1.375,\n    font: _objectSpread(_objectSpread({}, labelFontVariants), {}, (_objectSpread2 = {}, (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.TextExtraSmall, _objectSpread(_objectSpread({}, labelFontVariants[FontVariant.LabelExtraSmall]), {}, {\n      lineHeight: \'1.3\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.TextSmall, _objectSpread(_objectSpread({}, labelFontVariants[FontVariant.LabelSmall]), {}, {\n      lineHeight: \'1.3\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.TextNormal, _objectSpread(_objectSpread({}, labelFontVariants[FontVariant.LabelNormal]), {}, {\n      lineHeight: \'1.3\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.TextEmphasis, _objectSpread(_objectSpread({}, labelFontVariants[FontVariant.LabelEmphasis]), {}, {\n      lineHeight: \'1.3\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.TextExtraLarge, _objectSpread(_objectSpread({}, labelFontVariants[FontVariant.LabelExtraLarge]), {}, {\n      lineHeight: \'1.3\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.ButtonXs, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n      fontWeight: \'500\',\n      fontSize: \'12px\',\n      lineHeight: \'14px\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.ButtonSm, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n      fontWeight: \'500\',\n      fontSize: \'13px\',\n      lineHeight: \'16px\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.ButtonMd, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n      fontWeight: \'500\',\n      fontSize: \'15px\',\n      lineHeight: \'16px\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.ButtonLg, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n      fontWeight: \'500\',\n      fontSize: \'15px\',\n      lineHeight: \'16px\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.ButtonXl, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n      fontWeight: \'500\',\n      fontSize: \'16px\',\n      lineHeight: \'16px\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.InputSm, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n      fontSize: \'13px\',\n      lineHeight: \'16px\'\n    })), (0,defineProperty/* default */.Z)(_objectSpread2, FontVariant.InputMd, _objectSpread(_objectSpread({}, defaultFontValue), {}, {\n      fontSize: \'14px\',\n      lineHeight: \'16px\'\n    })), _objectSpread2))\n  },\n  shape: {\n    borderRadius: (_borderRadius = {}, (0,defineProperty/* default */.Z)(_borderRadius, BorderRadiusSize.Sm, \'2px\'), (0,defineProperty/* default */.Z)(_borderRadius, BorderRadiusSize.Md, \'4px\'), (0,defineProperty/* default */.Z)(_borderRadius, BorderRadiusSize.Lg, \'8px\'), _borderRadius)\n  }\n}; // const defaultTheme = {\n//   "breakpoints": {\n//     "keys": [\n//       "xs",\n//       "sm",\n//       "md",\n//       "lg",\n//       "xl"\n//     ],\n//     "values": {\n//       "xs": 0,\n//       "sm": 600,\n//       "md": 960,\n//       "lg": 1280,\n//       "xl": 1920\n//     }\n//   },\n//   // "overrides": {},\n//   "palette": {\n//     "common": {\n//       "black": "#000",\n//       "white": "#fff"\n//     },\n//     "type": "light",\n//     "primary": {\n//       "light": "#7986cb",\n//       "main": "#3f51b5",\n//       "dark": "#303f9f",\n//       "contrastText": "#fff"\n//     },\n//     "secondary": {\n//       "light": "#ff4081",\n//       "main": "#f50057",\n//       "dark": "#c51162",\n//       "contrastText": "#fff"\n//     },\n//     "error": {\n//       "light": "#e57373",\n//       "main": "#f44336",\n//       "dark": "#d32f2f",\n//       "contrastText": "#fff"\n//     },\n//     "warning": {\n//       "light": "#ffb74d",\n//       "main": "#ff9800",\n//       "dark": "#f57c00",\n//       "contrastText": "rgba(0, 0, 0, 0.87)"\n//     },\n//     "info": {\n//       "light": "#64b5f6",\n//       "main": "#2196f3",\n//       "dark": "#1976d2",\n//       "contrastText": "#fff"\n//     },\n//     "success": {\n//       "light": "#81c784",\n//       "main": "#4caf50",\n//       "dark": "#388e3c",\n//       "contrastText": "rgba(0, 0, 0, 0.87)"\n//     },\n//     "grey": {\n//       "50": "#fafafa",\n//       "100": "#f5f5f5",\n//       "200": "#eeeeee",\n//       "300": "#e0e0e0",\n//       "400": "#bdbdbd",\n//       "500": "#9e9e9e",\n//       "600": "#757575",\n//       "700": "#616161",\n//       "800": "#424242",\n//       "900": "#212121",\n//       "A100": "#d5d5d5",\n//       "A200": "#aaaaaa",\n//       "A400": "#303030",\n//       "A700": "#616161"\n//     },\n//     "contrastThreshold": 3,\n//     "tonalOffset": 0.2,\n//     "text": {\n//       "primary": "rgba(0, 0, 0, 0.87)",\n//       "secondary": "rgba(0, 0, 0, 0.54)",\n//       "disabled": "rgba(0, 0, 0, 0.38)",\n//       "hint": "rgba(0, 0, 0, 0.38)"\n//     },\n//     "divider": "rgba(0, 0, 0, 0.12)",\n//     "background": {\n//       "paper": "#fff",\n//       "default": "#fafafa"\n//     },\n//     "action": {\n//       "active": "rgba(0, 0, 0, 0.54)",\n//       "hover": "rgba(0, 0, 0, 0.04)",\n//       "hoverOpacity": 0.04,\n//       "selected": "rgba(0, 0, 0, 0.08)",\n//       "selectedOpacity": 0.08,\n//       "disabled": "rgba(0, 0, 0, 0.26)",\n//       "disabledBackground": "rgba(0, 0, 0, 0.12)",\n//       "disabledOpacity": 0.38,\n//       "focus": "rgba(0, 0, 0, 0.12)",\n//       "focusOpacity": 0.12,\n//       "activatedOpacity": 0.12\n//     }\n//   },\n//   "shadows": [\n//     "none",\n//     "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",\n//     "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",\n//     "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",\n//     "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",\n//     "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",\n//     "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",\n//     "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",\n//     "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",\n//     "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",\n//     "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",\n//     "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",\n//     "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",\n//     "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",\n//     "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",\n//     "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",\n//     "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",\n//     "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",\n//     "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",\n//     "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",\n//     "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",\n//     "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",\n//     "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",\n//     "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",\n//     "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"\n//   ],\n//   "typography": {\n//     "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     "fontSize": 14,\n//     "fontWeightLight": 300,\n//     "fontWeightRegular": 400,\n//     "fontWeightMedium": 500,\n//     "fontWeightBold": 700,\n//     // "h1": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 300,\n//     //   "fontSize": "6rem",\n//     //   "lineHeight": 1.167,\n//     //   "letterSpacing": "-0.01562em"\n//     // },\n//     // "h2": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 300,\n//     //   "fontSize": "3.75rem",\n//     //   "lineHeight": 1.2,\n//     //   "letterSpacing": "-0.00833em"\n//     // },\n//     // "h3": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 400,\n//     //   "fontSize": "3rem",\n//     //   "lineHeight": 1.167,\n//     //   "letterSpacing": "0em"\n//     // },\n//     // "h4": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 400,\n//     //   "fontSize": "2.125rem",\n//     //   "lineHeight": 1.235,\n//     //   "letterSpacing": "0.00735em"\n//     // },\n//     // "h5": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 400,\n//     //   "fontSize": "1.5rem",\n//     //   "lineHeight": 1.334,\n//     //   "letterSpacing": "0em"\n//     // },\n//     // "h6": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 500,\n//     //   "fontSize": "1.25rem",\n//     //   "lineHeight": 1.6,\n//     //   "letterSpacing": "0.0075em"\n//     // },\n//     // "subtitle1": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 400,\n//     //   "fontSize": "1rem",\n//     //   "lineHeight": 1.75,\n//     //   "letterSpacing": "0.00938em"\n//     // },\n//     // "subtitle2": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 500,\n//     //   "fontSize": "0.875rem",\n//     //   "lineHeight": 1.57,\n//     //   "letterSpacing": "0.00714em"\n//     // },\n//     // "body1": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 400,\n//     //   "fontSize": "1rem",\n//     //   "lineHeight": 1.5,\n//     //   "letterSpacing": "0.00938em"\n//     // },\n//     // "body2": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 400,\n//     //   "fontSize": "0.875rem",\n//     //   "lineHeight": 1.43,\n//     //   "letterSpacing": "0.01071em"\n//     // },\n//     // "button": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 500,\n//     //   "fontSize": "0.875rem",\n//     //   "lineHeight": 1.75,\n//     //   "letterSpacing": "0.02857em",\n//     //   "textTransform": "uppercase"\n//     // },\n//     // "caption": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 400,\n//     //   "fontSize": "0.75rem",\n//     //   "lineHeight": 1.66,\n//     //   "letterSpacing": "0.03333em"\n//     // },\n//     // "overline": {\n//     //   "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",\n//     //   "fontWeight": 400,\n//     //   "fontSize": "0.75rem",\n//     //   "lineHeight": 2.66,\n//     //   "letterSpacing": "0.08333em",\n//     //   "textTransform": "uppercase"\n//     // }\n//   },\n//   "shape": {\n//     "borderRadius": 4\n//   },\n//   "transitions": {\n//     "easing": {\n//       "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",\n//       "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",\n//       "easeIn": "cubic-bezier(0.4, 0, 1, 1)",\n//       "sharp": "cubic-bezier(0.4, 0, 0.6, 1)"\n//     },\n//     "duration": {\n//       "shortest": 150,\n//       "shorter": 200,\n//       "short": 250,\n//       "standard": 300,\n//       "complex": 375,\n//       "enteringScreen": 225,\n//       "leavingScreen": 195\n//     }\n//   },\n//   "zIndex": {\n//     // "mobileStepper": 1000,\n//     // "speedDial": 1050,\n//     // "appBar": 1100,\n//     // "drawer": 1200,\n//     // "modal": 1300,\n//     // "snackbar": 1400,\n//     // "tooltip": 1500\n//   }\n// };\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/theme/roots/common-styles.js\n // Example with theme: ${({ theme }) => css``;\n\nvar CommonStyles = /*#__PURE__*/We(["@keyframes spinner{0%{transform:rotate(0deg);}100%{transform:rotate(360deg);}}.Menu-open{overflow:hidden;}.Modal-open{overflow:hidden;}"]);\n/* harmony default export */ const common_styles = (CommonStyles);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/theme/roots/typography/typography.component.js\n\nvar Typography = /*#__PURE__*/We(["", ";"], function (_ref) {\n  var theme = _ref.theme;\n  var baseLineHeight = theme.typography.baseLineHeight;\n  return Ce(["h1,h2,h3,h4,h5,h6,p,small{line-height:", ";}"], baseLineHeight);\n});\n/* harmony default export */ const typography_component = (Typography);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/theme/roots/palette/entity/default-palette.js\n\n\nvar _lightPalette;\n\n\n// export const darkPalette = {\n//   [Color.TextPrimary]: \'rgba(249,250,251,1)\',\n//   [Color.TextPrimaryInvert]: \'rgba(0,0,0,1)\',\n//   [Color.TextSecondary]: \'rgba(190,195,199,1)\',\n//   [Color.TextSecondaryInvert]: \'rgba(91,92,92,1)\',\n//   [Color.TextPlaceholder]: \'rgba(181,188,190,1)\',\n//   [Color.AccentPrimary]: \'rgba(104,121,235,1)\',\n//   [Color.AccentPrimaryHover]: \'rgba(96,111,209,1)\',\n//   [Color.AccentPrimaryActive]: \'rgba(73,88,188,1)\',\n//   [Color.AccentPrimaryDisabled]: \'#E9EEF2\',\n//   [Color.BackgroundPrimary]: \'rgba(37,50,55,1)\',\n//   [Color.BackgroundPrimaryHover]: \'rgba(46,61,69,1)\',\n//   [Color.BackgroundPrimaryActive]: \'rgba(181,188,190,1)\',\n//   [Color.BackgroundPrimary_0_5_Opacity]: \'rgba(240,248,255,0.600)\',\n//   [Color.BackgroundSecondary]: \'rgba(30,39,43,1)\',\n//   [Color.IconsPrimary]: \'rgba(201,212,220,1)\',\n//   [Color.IconsPrimaryOpacity_0_6]: \'rgba(0,0,0,0.500)\',\n//   [Color.IconsSecondary]: \'rgba(170,170,170,1)\',\n//   [Color.ButtonPrimaryText]: \'rgba(255,255,255,1)\',\n//   [Color.LinkPrimary]: \'#5D6D7E\',\n//   [Color.LinkHover]: \'#768A9F\',\n//   [Color.LinkActive]: \'#92A6BC\',\n//   [Color.BordersPrimary]: \'rgba(30,39,43,1)\',\n//   [Color.BordersSecondary]: \'rgba(37,50,55,1)\',\n//   [Color.BordersStrong]: \'rgba(52,68,76,1)\',\n//   [Color.BordersInvert]: \'rgba(164,170,171,1)\',\n//   [Color.Tag]: \'#889AAC\',\n//   [Color.Error]: \'rgba(232,91,70,1)\',\n//   [Color.Success]: \'rgba(62,207,139,1)\',\n//   [Color.Warning]: \'rgba(255,172,74,1)\',\n//   [Color.Info]: \'rgba(110,123,178,1)\',\n//   [Color.LightShadow]: \'rgba(77, 78, 78, 0.25)\',\n// };\nvar lightPalette = (_lightPalette = {}, (0,defineProperty/* default */.Z)(_lightPalette, Color.TextPrimary, \'rgba(55,65,75,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.TextPrimaryInvert, \'rgba(255,255,255,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.TextSecondary, \'rgba(118,129,132,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.TextSecondaryInvert, \'rgba(213,216,220,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.TextPlaceholder, \'rgba(181,188,190,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.AccentPrimary, \'rgba(104,121,235,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.AccentPrimaryHover, \'rgba(96,111,209,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.AccentPrimaryActive, \'rgba(73,88,188,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.AccentPrimaryDisabled, \'#E9EEF2\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BackgroundPrimary, \'rgba(248,250,251,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BackgroundPrimaryHover, \'rgba(239,243,246,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BackgroundPrimaryActive, \'rgba(93,109,126,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BackgroundPrimary_0_5_Opacity, \'rgba(255,255,255,0.500)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BackgroundSecondary, \'rgba(255,255,255,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.IconsPrimary, \'rgba(93,109,126,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.IconsPrimaryOpacity_0_6, \'rgba(93,109,126,0.600)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.IconsSecondary, \'#959DA8\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.ButtonPrimaryText, \'rgba(255,255,255,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.ButtonDisabledText, \'#A9B6C2\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.LinkPrimary, \'#5D6D7E\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.LinkHover, \'#768A9F\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.LinkActive, \'#92A6BC\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BordersPrimary, \'rgba(223,231,237,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BordersSecondary, \'rgba(223,231,237,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BordersStrong, \'rgba(223,231,237,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BordersInvert, \'rgba(85,99,115,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.BorderActiveBottom, \'#6879EB\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.ActiveSecondary, \'#E9EEF2\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.ActiveSecondaryHover, \'#DFE4E9\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.ActiveSecondaryActive, \'#CBD3DA\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.Tag, \'#889AAC\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.Error, \'rgba(232,91,70,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.Success, \'rgba(62,207,139,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.Warning, \'rgba(255,172,74,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.Info, \'rgba(110,123,178,1)\'), (0,defineProperty/* default */.Z)(_lightPalette, Color.LightShadow, \'rgba(77, 78, 78, 0.25)\'), _lightPalette);\nvar defaultPalette = lightPalette;\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/theme/theme-provider/theme-provider.context.js\n\n\n\nfunction theme_provider_context_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction theme_provider_context_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { theme_provider_context_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { theme_provider_context_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? {} : _ref$theme;\n  var _theme$palette = theme.palette,\n      paletteOverride = _theme$palette === void 0 ? {} : _theme$palette,\n      _theme$breakpoints = theme.breakpoints,\n      breakpointsOverride = _theme$breakpoints === void 0 ? {} : _theme$breakpoints,\n      _theme$typography = theme.typography,\n      typographyOverride = _theme$typography === void 0 ? {} : _theme$typography,\n      _theme$shape = theme.shape,\n      shapeOverride = _theme$shape === void 0 ? {} : _theme$shape;\n  var finalTheme = (0,react.useMemo)(function () {\n    var palette = theme_provider_context_objectSpread(theme_provider_context_objectSpread({}, defaultPalette), paletteOverride);\n\n    return {\n      palette: palette,\n      breakpoints: theme_provider_context_objectSpread(theme_provider_context_objectSpread({}, defaultTheme.breakpoints), breakpointsOverride),\n      typography: theme_provider_context_objectSpread({}, lodash_merge_default()(theme_provider_context_objectSpread({}, defaultTheme.typography), theme_provider_context_objectSpread({}, typographyOverride))),\n      shape: theme_provider_context_objectSpread({}, lodash_merge_default()(theme_provider_context_objectSpread({}, defaultTheme.shape), theme_provider_context_objectSpread({}, shapeOverride)))\n    };\n    return {};\n  }, [JSON.stringify(theme)]);\n  return /*#__PURE__*/react.createElement(Fe, {\n    theme: finalTheme\n  }, applyPolymorphicFunctionProp(children, finalTheme), /*#__PURE__*/react.createElement(common_styles, null), /*#__PURE__*/react.createElement(typography_component, null));\n};\n\nvar _defaultTheme$typogra = defaultTheme.typography,\n    baseLineHeight = _defaultTheme$typogra.baseLineHeight,\n    font = _defaultTheme$typogra.font,\n    typography = (0,objectWithoutProperties/* default */.Z)(_defaultTheme$typogra, ["baseLineHeight", "font"]);\n\nThemeProvider.propTypes = {\n  children: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]),\n  theme: prop_types_default().exact({\n    breakpoints: prop_types_default().exact(record(objectValues(Breakpoint), (prop_types_default()).number)),\n    palette: prop_types_default().exact(record(objectValues(Color), (prop_types_default()).string)),\n    shape: prop_types_default().exact({\n      borderRadius: prop_types_default().exact(record(objectValues(BorderRadiusSize), (prop_types_default()).string))\n    }),\n    typography: prop_types_default().exact(theme_provider_context_objectSpread({\n      baseLineHeight: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n      font: prop_types_default().exact(record(objectValues(FontVariant), (prop_types_default()).object))\n    }, record(objectKeys(typography), (prop_types_default()).string)))\n  })\n};\n/* harmony default export */ const theme_provider_context = (ThemeProvider);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__(71002);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\nvar toConsumableArray = __webpack_require__(93433);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__(29439);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(87462);\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Global.js\nvar PI_OVER_180 = Math.PI / 180;\nfunction detectBrowser() {\n    return (typeof window !== \'undefined\' &&\n        ({}.toString.call(window) === \'[object Window]\' ||\n            {}.toString.call(window) === \'[object global]\'));\n}\nconst glob = typeof global !== \'undefined\'\n    ? global\n    : typeof window !== \'undefined\'\n        ? window\n        : typeof WorkerGlobalScope !== \'undefined\'\n            ? self\n            : {};\nconst Global_Konva = {\n    _global: glob,\n    version: \'8.3.2\',\n    isBrowser: detectBrowser(),\n    isUnminified: /param/.test(function (param) { }.toString()),\n    dblClickWindow: 400,\n    getAngle(angle) {\n        return Global_Konva.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    enableTrace: false,\n    pointerEventsEnabled: true,\n    autoDrawEnabled: true,\n    hitOnDragEnabled: false,\n    capturePointerEventsEnabled: false,\n    _mouseListenClick: false,\n    _touchListenClick: false,\n    _pointerListenClick: false,\n    _mouseInDblClickWindow: false,\n    _touchInDblClickWindow: false,\n    _pointerInDblClickWindow: false,\n    _mouseDblClickPointerId: null,\n    _touchDblClickPointerId: null,\n    _pointerDblClickPointerId: null,\n    pixelRatio: (typeof window !== \'undefined\' && window.devicePixelRatio) || 1,\n    dragDistance: 3,\n    angleDeg: true,\n    showWarnings: true,\n    dragButtons: [0, 1],\n    isDragging() {\n        return Global_Konva[\'DD\'].isDragging;\n    },\n    isDragReady() {\n        return !!Global_Konva[\'DD\'].node;\n    },\n    document: glob.document,\n    _injectGlobal(Konva) {\n        glob.Konva = Konva;\n    },\n};\nconst _registerNode = (NodeClass) => {\n    Global_Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\nGlobal_Konva._injectGlobal(Global_Konva);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Util.js\n\nclass Transform {\n    constructor(m = [1, 0, 0, 1, 0, 0]) {\n        this.dirty = false;\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n    }\n    reset() {\n        this.m[0] = 1;\n        this.m[1] = 0;\n        this.m[2] = 0;\n        this.m[3] = 1;\n        this.m[4] = 0;\n        this.m[5] = 0;\n    }\n    copy() {\n        return new Transform(this.m);\n    }\n    copyInto(tr) {\n        tr.m[0] = this.m[0];\n        tr.m[1] = this.m[1];\n        tr.m[2] = this.m[2];\n        tr.m[3] = this.m[3];\n        tr.m[4] = this.m[4];\n        tr.m[5] = this.m[5];\n    }\n    point(point) {\n        var m = this.m;\n        return {\n            x: m[0] * point.x + m[2] * point.y + m[4],\n            y: m[1] * point.x + m[3] * point.y + m[5],\n        };\n    }\n    translate(x, y) {\n        this.m[4] += this.m[0] * x + this.m[2] * y;\n        this.m[5] += this.m[1] * x + this.m[3] * y;\n        return this;\n    }\n    scale(sx, sy) {\n        this.m[0] *= sx;\n        this.m[1] *= sx;\n        this.m[2] *= sy;\n        this.m[3] *= sy;\n        return this;\n    }\n    rotate(rad) {\n        var c = Math.cos(rad);\n        var s = Math.sin(rad);\n        var m11 = this.m[0] * c + this.m[2] * s;\n        var m12 = this.m[1] * c + this.m[3] * s;\n        var m21 = this.m[0] * -s + this.m[2] * c;\n        var m22 = this.m[1] * -s + this.m[3] * c;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    getTranslation() {\n        return {\n            x: this.m[4],\n            y: this.m[5],\n        };\n    }\n    skew(sx, sy) {\n        var m11 = this.m[0] + this.m[2] * sy;\n        var m12 = this.m[1] + this.m[3] * sy;\n        var m21 = this.m[2] + this.m[0] * sx;\n        var m22 = this.m[3] + this.m[1] * sx;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    multiply(matrix) {\n        var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n        var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n        var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n        var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n        var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n        var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        this.m[4] = dx;\n        this.m[5] = dy;\n        return this;\n    }\n    invert() {\n        var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n        var m0 = this.m[3] * d;\n        var m1 = -this.m[1] * d;\n        var m2 = -this.m[2] * d;\n        var m3 = this.m[0] * d;\n        var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n        var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n        this.m[0] = m0;\n        this.m[1] = m1;\n        this.m[2] = m2;\n        this.m[3] = m3;\n        this.m[4] = m4;\n        this.m[5] = m5;\n        return this;\n    }\n    getMatrix() {\n        return this.m;\n    }\n    setAbsolutePosition(x, y) {\n        var m0 = this.m[0], m1 = this.m[1], m2 = this.m[2], m3 = this.m[3], m4 = this.m[4], m5 = this.m[5], yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2), xt = (x - m4 - m2 * yt) / m0;\n        return this.translate(xt, yt);\n    }\n    decompose() {\n        var a = this.m[0];\n        var b = this.m[1];\n        var c = this.m[2];\n        var d = this.m[3];\n        var e = this.m[4];\n        var f = this.m[5];\n        var delta = a * d - b * c;\n        let result = {\n            x: e,\n            y: f,\n            rotation: 0,\n            scaleX: 0,\n            scaleY: 0,\n            skewX: 0,\n            skewY: 0,\n        };\n        if (a != 0 || b != 0) {\n            var r = Math.sqrt(a * a + b * b);\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n            result.scaleX = r;\n            result.scaleY = delta / r;\n            result.skewX = (a * c + b * d) / delta;\n            result.skewY = 0;\n        }\n        else if (c != 0 || d != 0) {\n            var s = Math.sqrt(c * c + d * d);\n            result.rotation =\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n            result.scaleX = delta / s;\n            result.scaleY = s;\n            result.skewX = 0;\n            result.skewY = (a * c + b * d) / delta;\n        }\n        else {\n        }\n        result.rotation = Util_Util._getRotation(result.rotation);\n        return result;\n    }\n}\nvar OBJECT_ARRAY = \'[object Array]\', OBJECT_NUMBER = \'[object Number]\', OBJECT_STRING = \'[object String]\', OBJECT_BOOLEAN = \'[object Boolean]\', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = \'#\', EMPTY_STRING = \'\', ZERO = \'0\', KONVA_WARNING = \'Konva warning: \', KONVA_ERROR = \'Konva error: \', RGB_PAREN = \'rgb(\', COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5],\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/, animQueue = [];\nconst req = (typeof requestAnimationFrame !== \'undefined\' && requestAnimationFrame) ||\n    function (f) {\n        setTimeout(f, 60);\n    };\nconst Util_Util = {\n    _isElement(obj) {\n        return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isPlainObject(obj) {\n        return !!obj && obj.constructor === Object;\n    },\n    _isArray(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber(obj) {\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\n            !isNaN(obj) &&\n            isFinite(obj));\n    },\n    _isString(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    _isBoolean(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n    },\n    isObject(val) {\n        return val instanceof Object;\n    },\n    isValidSelector(selector) {\n        if (typeof selector !== \'string\') {\n            return false;\n        }\n        var firstChar = selector[0];\n        return (firstChar === \'#\' ||\n            firstChar === \'.\' ||\n            firstChar === firstChar.toUpperCase());\n    },\n    _sign(number) {\n        if (number === 0) {\n            return 1;\n        }\n        if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    },\n    requestAnimFrame(callback) {\n        animQueue.push(callback);\n        if (animQueue.length === 1) {\n            req(function () {\n                const queue = animQueue;\n                animQueue = [];\n                queue.forEach(function (cb) {\n                    cb();\n                });\n            });\n        }\n    },\n    createCanvasElement() {\n        var canvas = document.createElement(\'canvas\');\n        try {\n            canvas.style = canvas.style || {};\n        }\n        catch (e) { }\n        return canvas;\n    },\n    createImageElement() {\n        return document.createElement(\'img\');\n    },\n    _isInDocument(el) {\n        while ((el = el.parentNode)) {\n            if (el == document) {\n                return true;\n            }\n        }\n        return false;\n    },\n    _urlToImage(url, callback) {\n        var imageObj = Util_Util.createImageElement();\n        imageObj.onload = function () {\n            callback(imageObj);\n        };\n        imageObj.src = url;\n    },\n    _rgbToHex(r, g, b) {\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb(hex) {\n        hex = hex.replace(HASH, EMPTY_STRING);\n        var bigint = parseInt(hex, 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    },\n    getRandomColor() {\n        var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n        while (randColor.length < 6) {\n            randColor = ZERO + randColor;\n        }\n        return HASH + randColor;\n    },\n    getRGB(color) {\n        var rgb;\n        if (color in COLORS) {\n            rgb = COLORS[color];\n            return {\n                r: rgb[0],\n                g: rgb[1],\n                b: rgb[2],\n            };\n        }\n        else if (color[0] === HASH) {\n            return this._hexToRgb(color.substring(1));\n        }\n        else if (color.substr(0, 4) === RGB_PAREN) {\n            rgb = RGB_REGEX.exec(color.replace(/ /g, \'\'));\n            return {\n                r: parseInt(rgb[1], 10),\n                g: parseInt(rgb[2], 10),\n                b: parseInt(rgb[3], 10),\n            };\n        }\n        else {\n            return {\n                r: 0,\n                g: 0,\n                b: 0,\n            };\n        }\n    },\n    colorToRGBA(str) {\n        str = str || \'black\';\n        return (Util_Util._namedColorToRBA(str) ||\n            Util_Util._hex3ColorToRGBA(str) ||\n            Util_Util._hex6ColorToRGBA(str) ||\n            Util_Util._rgbColorToRGBA(str) ||\n            Util_Util._rgbaColorToRGBA(str) ||\n            Util_Util._hslColorToRGBA(str));\n    },\n    _namedColorToRBA(str) {\n        var c = COLORS[str.toLowerCase()];\n        if (!c) {\n            return null;\n        }\n        return {\n            r: c[0],\n            g: c[1],\n            b: c[2],\n            a: 1,\n        };\n    },\n    _rgbColorToRGBA(str) {\n        if (str.indexOf(\'rgb(\') === 0) {\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map(Number);\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: 1,\n            };\n        }\n    },\n    _rgbaColorToRGBA(str) {\n        if (str.indexOf(\'rgba(\') === 0) {\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map((n, index) => {\n                if (n.slice(-1) === \'%\') {\n                    return index === 3 ? parseInt(n) / 100 : (parseInt(n) / 100) * 255;\n                }\n                return Number(n);\n            });\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: parts[3],\n            };\n        }\n    },\n    _hex6ColorToRGBA(str) {\n        if (str[0] === \'#\' && str.length === 7) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: 1,\n            };\n        }\n    },\n    _hex3ColorToRGBA(str) {\n        if (str[0] === \'#\' && str.length === 4) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: 1,\n            };\n        }\n    },\n    _hslColorToRGBA(str) {\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n            const h = Number(hsl[0]) / 360;\n            const s = Number(hsl[1]) / 100;\n            const l = Number(hsl[2]) / 100;\n            let t2;\n            let t3;\n            let val;\n            if (s === 0) {\n                val = l * 255;\n                return {\n                    r: Math.round(val),\n                    g: Math.round(val),\n                    b: Math.round(val),\n                    a: 1,\n                };\n            }\n            if (l < 0.5) {\n                t2 = l * (1 + s);\n            }\n            else {\n                t2 = l + s - l * s;\n            }\n            const t1 = 2 * l - t2;\n            const rgb = [0, 0, 0];\n            for (let i = 0; i < 3; i++) {\n                t3 = h + (1 / 3) * -(i - 1);\n                if (t3 < 0) {\n                    t3++;\n                }\n                if (t3 > 1) {\n                    t3--;\n                }\n                if (6 * t3 < 1) {\n                    val = t1 + (t2 - t1) * 6 * t3;\n                }\n                else if (2 * t3 < 1) {\n                    val = t2;\n                }\n                else if (3 * t3 < 2) {\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n                }\n                else {\n                    val = t1;\n                }\n                rgb[i] = val * 255;\n            }\n            return {\n                r: Math.round(rgb[0]),\n                g: Math.round(rgb[1]),\n                b: Math.round(rgb[2]),\n                a: 1,\n            };\n        }\n    },\n    haveIntersection(r1, r2) {\n        return !(r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y);\n    },\n    cloneObject(obj) {\n        var retObj = {};\n        for (var key in obj) {\n            if (this._isPlainObject(obj[key])) {\n                retObj[key] = this.cloneObject(obj[key]);\n            }\n            else if (this._isArray(obj[key])) {\n                retObj[key] = this.cloneArray(obj[key]);\n            }\n            else {\n                retObj[key] = obj[key];\n            }\n        }\n        return retObj;\n    },\n    cloneArray(arr) {\n        return arr.slice(0);\n    },\n    degToRad(deg) {\n        return deg * PI_OVER_DEG180;\n    },\n    radToDeg(rad) {\n        return rad * DEG180_OVER_PI;\n    },\n    _degToRad(deg) {\n        Util_Util.warn(\'Util._degToRad is removed. Please use public Util.degToRad instead.\');\n        return Util_Util.degToRad(deg);\n    },\n    _radToDeg(rad) {\n        Util_Util.warn(\'Util._radToDeg is removed. Please use public Util.radToDeg instead.\');\n        return Util_Util.radToDeg(rad);\n    },\n    _getRotation(radians) {\n        return Global_Konva.angleDeg ? Util_Util.radToDeg(radians) : radians;\n    },\n    _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw(str) {\n        throw new Error(KONVA_ERROR + str);\n    },\n    error(str) {\n        console.error(KONVA_ERROR + str);\n    },\n    warn(str) {\n        if (!Global_Konva.showWarnings) {\n            return;\n        }\n        console.warn(KONVA_WARNING + str);\n    },\n    each(obj, func) {\n        for (var key in obj) {\n            func(key, obj[key]);\n        }\n    },\n    _inRange(val, left, right) {\n        return left <= val && val < right;\n    },\n    _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n        var x, y, dist;\n        var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n        if (pd2 == 0) {\n            x = x1;\n            y = y1;\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n        }\n        else {\n            var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n            if (u < 0) {\n                x = x1;\n                y = y1;\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n            }\n            else if (u > 1.0) {\n                x = x2;\n                y = y2;\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n            }\n            else {\n                x = x1 + u * (x2 - x1);\n                y = y1 + u * (y2 - y1);\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n            }\n        }\n        return [x, y, dist];\n    },\n    _getProjectionToLine(pt, line, isClosed) {\n        var pc = Util_Util.cloneObject(pt);\n        var dist = Number.MAX_VALUE;\n        line.forEach(function (p1, i) {\n            if (!isClosed && i === line.length - 1) {\n                return;\n            }\n            var p2 = line[(i + 1) % line.length];\n            var proj = Util_Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n            var px = proj[0], py = proj[1], pdist = proj[2];\n            if (pdist < dist) {\n                pc.x = px;\n                pc.y = py;\n                dist = pdist;\n            }\n        });\n        return pc;\n    },\n    _prepareArrayForTween(startArray, endArray, isClosed) {\n        var n, start = [], end = [];\n        if (startArray.length > endArray.length) {\n            var temp = endArray;\n            endArray = startArray;\n            startArray = temp;\n        }\n        for (n = 0; n < startArray.length; n += 2) {\n            start.push({\n                x: startArray[n],\n                y: startArray[n + 1],\n            });\n        }\n        for (n = 0; n < endArray.length; n += 2) {\n            end.push({\n                x: endArray[n],\n                y: endArray[n + 1],\n            });\n        }\n        var newStart = [];\n        end.forEach(function (point) {\n            var pr = Util_Util._getProjectionToLine(point, start, isClosed);\n            newStart.push(pr.x);\n            newStart.push(pr.y);\n        });\n        return newStart;\n    },\n    _prepareToStringify(obj) {\n        var desc;\n        obj.visitedByCircularReferenceRemoval = true;\n        for (var key in obj) {\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == \'object\')) {\n                continue;\n            }\n            desc = Object.getOwnPropertyDescriptor(obj, key);\n            if (obj[key].visitedByCircularReferenceRemoval ||\n                Util_Util._isElement(obj[key])) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n            else if (Util_Util._prepareToStringify(obj[key]) === null) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        delete obj.visitedByCircularReferenceRemoval;\n        return obj;\n    },\n    _assign(target, source) {\n        for (var key in source) {\n            target[key] = source[key];\n        }\n        return target;\n    },\n    _getFirstPointerId(evt) {\n        if (!evt.touches) {\n            return evt.pointerId || 999;\n        }\n        else {\n            return evt.changedTouches[0].identifier;\n        }\n    },\n};\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Validators.js\n\n\nfunction _formatValue(val) {\n    if (Util_Util._isString(val)) {\n        return \'"\' + val + \'"\';\n    }\n    if (Object.prototype.toString.call(val) === \'[object Number]\') {\n        return val;\n    }\n    if (Util_Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nfunction RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nfunction alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nfunction getNumberValidator() {\n    if (Global_Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_Util._isNumber(val)) {\n                Util_Util.warn(_formatValue(val) +\n                    \' is a not valid value for "\' +\n                    attr +\n                    \'" attribute. The value should be a number.\');\n            }\n            return val;\n        };\n    }\n}\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if (Global_Konva.isUnminified) {\n        return function (val, attr) {\n            let isNumber = Util_Util._isNumber(val);\n            let isValidArray = Util_Util._isArray(val) && val.length == noOfElements;\n            if (!isNumber && !isValidArray) {\n                Util_Util.warn(_formatValue(val) +\n                    \' is a not valid value for "\' +\n                    attr +\n                    \'" attribute. The value should be a number or Array<number>(\' +\n                    noOfElements +\n                    \')\');\n            }\n            return val;\n        };\n    }\n}\nfunction getNumberOrAutoValidator() {\n    if (Global_Konva.isUnminified) {\n        return function (val, attr) {\n            var isNumber = Util_Util._isNumber(val);\n            var isAuto = val === \'auto\';\n            if (!(isNumber || isAuto)) {\n                Util_Util.warn(_formatValue(val) +\n                    \' is a not valid value for "\' +\n                    attr +\n                    \'" attribute. The value should be a number or "auto".\');\n            }\n            return val;\n        };\n    }\n}\nfunction getStringValidator() {\n    if (Global_Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_Util._isString(val)) {\n                Util_Util.warn(_formatValue(val) +\n                    \' is a not valid value for "\' +\n                    attr +\n                    \'" attribute. The value should be a string.\');\n            }\n            return val;\n        };\n    }\n}\nfunction getStringOrGradientValidator() {\n    if (Global_Konva.isUnminified) {\n        return function (val, attr) {\n            const isString = Util_Util._isString(val);\n            const isGradient = Object.prototype.toString.call(val) === \'[object CanvasGradient]\' ||\n                (val && val.addColorStop);\n            if (!(isString || isGradient)) {\n                Util_Util.warn(_formatValue(val) +\n                    \' is a not valid value for "\' +\n                    attr +\n                    \'" attribute. The value should be a string or a native gradient.\');\n            }\n            return val;\n        };\n    }\n}\nfunction getFunctionValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isFunction(val)) {\n                Util.warn(_formatValue(val) +\n                    \' is a not valid value for "\' +\n                    attr +\n                    \'" attribute. The value should be a function.\');\n            }\n            return val;\n        };\n    }\n}\nfunction getNumberArrayValidator() {\n    if (Global_Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_Util._isArray(val)) {\n                Util_Util.warn(_formatValue(val) +\n                    \' is a not valid value for "\' +\n                    attr +\n                    \'" attribute. The value should be a array of numbers.\');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util_Util._isNumber(item)) {\n                        Util_Util.warn(\'"\' +\n                            attr +\n                            \'" attribute has non numeric element \' +\n                            item +\n                            \'. Make sure that all elements are numbers.\');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nfunction getBooleanValidator() {\n    if (Global_Konva.isUnminified) {\n        return function (val, attr) {\n            var isBool = val === true || val === false;\n            if (!isBool) {\n                Util_Util.warn(_formatValue(val) +\n                    \' is a not valid value for "\' +\n                    attr +\n                    \'" attribute. The value should be a boolean.\');\n            }\n            return val;\n        };\n    }\n}\nfunction getComponentValidator(components) {\n    if (Global_Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_Util.isObject(val)) {\n                Util_Util.warn(_formatValue(val) +\n                    \' is a not valid value for "\' +\n                    attr +\n                    \'" attribute. The value should be an object with properties \' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Factory.js\n\n\nvar GET = \'get\', SET = \'set\';\nconst Factory = {\n    addGetterSetter(constructor, attr, def, validator, after) {\n        Factory.addGetter(constructor, attr, def);\n        Factory.addSetter(constructor, attr, validator, after);\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter(constructor, attr, def) {\n        var method = GET + Util_Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    var val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter(constructor, attr, validator, after) {\n        var method = SET + Util_Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter(constructor, attr, validator, after) {\n        var method = SET + Util_Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter(constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = Util_Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            var ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = getComponentValidator(components);\n        constructor.prototype[setter] = function (val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter(constructor, attr) {\n        var capitalizedAttr = Util_Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter(constructor, attr, def, validator) {\n        Util_Util.error(\'Adding deprecated \' + attr);\n        var method = GET + Util_Util._capitalize(attr);\n        var message = attr +\n            \' property is deprecated and will be removed soon. Look at Konva change log for more information.\';\n        constructor.prototype[method] = function () {\n            Util_Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        Factory.addSetter(constructor, attr, validator, function () {\n            Util_Util.error(message);\n        });\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat(constructor, methods) {\n        Util_Util.each(methods, function (oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = GET + Util_Util._capitalize(oldMethodName);\n            var oldSetter = SET + Util_Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util_Util.error(\'"\' +\n                    oldMethodName +\n                    \'" method is deprecated and will be removed soon. Use ""\' +\n                    newMethodName +\n                    \'" instead.\');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter() {\n        this._filterUpToDate = false;\n    },\n};\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Context.js\n\n\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util_Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + \'\';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = \',\', OPEN_PAREN = \'(\', CLOSE_PAREN = \')\', OPEN_PAREN_BRACKET = \'([\', CLOSE_BRACKET_PAREN = \'])\', SEMICOLON = \';\', DOUBLE_PAREN = \'()\', EQUALS = \'=\', CONTEXT_METHODS = [\n    \'arc\',\n    \'arcTo\',\n    \'beginPath\',\n    \'bezierCurveTo\',\n    \'clearRect\',\n    \'clip\',\n    \'closePath\',\n    \'createLinearGradient\',\n    \'createPattern\',\n    \'createRadialGradient\',\n    \'drawImage\',\n    \'ellipse\',\n    \'fill\',\n    \'fillText\',\n    \'getImageData\',\n    \'createImageData\',\n    \'lineTo\',\n    \'moveTo\',\n    \'putImageData\',\n    \'quadraticCurveTo\',\n    \'rect\',\n    \'restore\',\n    \'rotate\',\n    \'save\',\n    \'scale\',\n    \'setLineDash\',\n    \'setTransform\',\n    \'stroke\',\n    \'strokeText\',\n    \'transform\',\n    \'translate\',\n];\nvar CONTEXT_PROPERTIES = [\n    \'fillStyle\',\n    \'strokeStyle\',\n    \'shadowColor\',\n    \'shadowBlur\',\n    \'shadowOffsetX\',\n    \'shadowOffsetY\',\n    \'lineCap\',\n    \'lineDashOffset\',\n    \'lineJoin\',\n    \'lineWidth\',\n    \'miterLimit\',\n    \'font\',\n    \'textAlign\',\n    \'textBaseline\',\n    \'globalAlpha\',\n    \'globalCompositeOperation\',\n    \'imageSmoothingEnabled\',\n];\nconst traceArrMax = 100;\nclass Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this._context = canvas._canvas.getContext(\'2d\');\n        if (Global_Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = \'\', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util_Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === \'number\' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        var lineCap = shape.getLineCap();\n        if (lineCap) {\n            this.setAttr(\'lineCap\', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr(\'globalAlpha\', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        var lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr(\'lineJoin\', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip() {\n        this._context.clip();\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y) {\n        return this._context.isPointInPath(x, y);\n    }\n    fill(path2d) {\n        if (path2d) {\n            this._context.fill(path2d);\n        }\n        else {\n            this._context.fill();\n        }\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if (\'mozDash\' in this._context) {\n            this._context[\'mozDash\'] = a0;\n        }\n        else if (\'webkitLineDash\' in this._context) {\n            this._context[\'webkitLineDash\'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === \'shadowOffsetX\' ||\n                prop === \'shadowOffsetY\' ||\n                prop === \'shadowBlur\') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === \'source-over\';\n        if (!def) {\n            this.setAttr(\'globalCompositeOperation\', op);\n        }\n    }\n}\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nclass SceneContext extends Context {\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr(\'fillStyle\', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr(\'fillStyle\', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr(\'fillStyle\', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        var grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr(\'fillStyle\', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        var hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === \'color\') {\n            this._fillColor(shape);\n            return;\n        }\n        var hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === \'pattern\') {\n            this._fillPattern(shape);\n            return;\n        }\n        var hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === \'linear-gradient\') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        var hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === \'radial-gradient\') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        var start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr(\'strokeStyle\', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr(\'lineDashOffset\', shape.dashOffset());\n            }\n            this.setAttr(\'lineWidth\', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr(\'shadowColor\', \'rgba(0,0,0,0)\');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr(\'strokeStyle\', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : \'black\', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr(\'shadowColor\', color);\n        this.setAttr(\'shadowBlur\', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr(\'shadowOffsetX\', offset.x * scaleX);\n        this.setAttr(\'shadowOffsetY\', offset.y * scaleY);\n    }\n}\nclass HitContext extends Context {\n    _fill(shape) {\n        this.save();\n        this.setAttr(\'fillStyle\', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === \'auto\' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr(\'lineWidth\', strokeWidth);\n            this.setAttr(\'strokeStyle\', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Canvas.js\n\n\n\n\n\nvar _pixelRatio;\nfunction getDevicePixelRatio() {\n    if (_pixelRatio) {\n        return _pixelRatio;\n    }\n    var canvas = Util_Util.createCanvasElement();\n    var context = canvas.getContext(\'2d\');\n    _pixelRatio = (function () {\n        var devicePixelRatio = Global_Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            context.backingStorePixelRatio ||\n            1;\n        return devicePixelRatio / backingStoreRatio;\n    })();\n    return _pixelRatio;\n}\nclass Canvas {\n    constructor(config) {\n        this.pixelRatio = 1;\n        this.width = 0;\n        this.height = 0;\n        this.isCache = false;\n        var conf = config || {};\n        var pixelRatio = conf.pixelRatio || Global_Konva.pixelRatio || getDevicePixelRatio();\n        this.pixelRatio = pixelRatio;\n        this._canvas = Util_Util.createCanvasElement();\n        this._canvas.style.padding = \'0\';\n        this._canvas.style.margin = \'0\';\n        this._canvas.style.border = \'0\';\n        this._canvas.style.background = \'transparent\';\n        this._canvas.style.position = \'absolute\';\n        this._canvas.style.top = \'0\';\n        this._canvas.style.left = \'0\';\n    }\n    getContext() {\n        return this.context;\n    }\n    getPixelRatio() {\n        return this.pixelRatio;\n    }\n    setPixelRatio(pixelRatio) {\n        var previousRatio = this.pixelRatio;\n        this.pixelRatio = pixelRatio;\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n    }\n    setWidth(width) {\n        this.width = this._canvas.width = width * this.pixelRatio;\n        this._canvas.style.width = width + \'px\';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    setHeight(height) {\n        this.height = this._canvas.height = height * this.pixelRatio;\n        this._canvas.style.height = height + \'px\';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    setSize(width, height) {\n        this.setWidth(width || 0);\n        this.setHeight(height || 0);\n    }\n    toDataURL(mimeType, quality) {\n        try {\n            return this._canvas.toDataURL(mimeType, quality);\n        }\n        catch (e) {\n            try {\n                return this._canvas.toDataURL();\n            }\n            catch (err) {\n                Util_Util.error(\'Unable to get data URL. \' +\n                    err.message +\n                    \' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.\');\n                return \'\';\n            }\n        }\n    }\n}\nFactory.addGetterSetter(Canvas, \'pixelRatio\', undefined, getNumberValidator());\nclass SceneCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.context = new SceneContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\nclass HitCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.hitCanvas = true;\n        this.context = new HitContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/DragAndDrop.js\n\n\nconst DD = {\n    get isDragging() {\n        var flag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus === \'dragging\') {\n                flag = true;\n            }\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node() {\n        var node;\n        DD._dragElements.forEach((elem) => {\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag(evt) {\n        const nodesToFireEvents = [];\n        DD._dragElements.forEach((elem, key) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) {\n                elem.pointerId = Util_Util._getFirstPointerId(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus !== \'dragging\') {\n                var dragDistance = node.dragDistance();\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) {\n                    return;\n                }\n                node.startDrag({ evt });\n                if (!node.isDragging()) {\n                    return;\n                }\n            }\n            node._setDragPosition(evt, elem);\n            nodesToFireEvents.push(node);\n        });\n        nodesToFireEvents.forEach((node) => {\n            node.fire(\'dragmove\', {\n                type: \'dragmove\',\n                target: node,\n                evt: evt,\n            }, true);\n        });\n    },\n    _endDragBefore(evt) {\n        DD._dragElements.forEach((elem) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            if (evt) {\n                stage.setPointersPositions(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus === \'dragging\' || elem.dragStatus === \'stopped\') {\n                DD.justDragged = true;\n                Global_Konva._mouseListenClick = false;\n                Global_Konva._touchListenClick = false;\n                Global_Konva._pointerListenClick = false;\n                elem.dragStatus = \'stopped\';\n            }\n            const drawNode = elem.node.getLayer() ||\n                (elem.node instanceof Global_Konva.Stage && elem.node);\n            if (drawNode) {\n                drawNode.batchDraw();\n            }\n        });\n    },\n    _endDragAfter(evt) {\n        DD._dragElements.forEach((elem, key) => {\n            if (elem.dragStatus === \'stopped\') {\n                elem.node.fire(\'dragend\', {\n                    type: \'dragend\',\n                    target: elem.node,\n                    evt: evt,\n                }, true);\n            }\n            if (elem.dragStatus !== \'dragging\') {\n                DD._dragElements.delete(key);\n            }\n        });\n    },\n};\nif (Global_Konva.isBrowser) {\n    window.addEventListener(\'mouseup\', DD._endDragBefore, true);\n    window.addEventListener(\'touchend\', DD._endDragBefore, true);\n    window.addEventListener(\'mousemove\', DD._drag);\n    window.addEventListener(\'touchmove\', DD._drag);\n    window.addEventListener(\'mouseup\', DD._endDragAfter, false);\n    window.addEventListener(\'touchend\', DD._endDragAfter, false);\n}\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Node.js\n\n\n\n\n\n\nvar ABSOLUTE_OPACITY = \'absoluteOpacity\', ALL_LISTENERS = \'allEventListeners\', ABSOLUTE_TRANSFORM = \'absoluteTransform\', ABSOLUTE_SCALE = \'absoluteScale\', CANVAS = \'canvas\', CHANGE = \'Change\', CHILDREN = \'children\', KONVA = \'konva\', LISTENING = \'listening\', MOUSEENTER = \'mouseenter\', MOUSELEAVE = \'mouseleave\', NAME = \'name\', Node_SET = \'set\', SHAPE = \'Shape\', SPACE = \' \', STAGE = \'stage\', TRANSFORM = \'transform\', UPPER_STAGE = \'Stage\', VISIBLE = \'visible\', TRANSFORM_CHANGE_STR = [\n    \'xChange.konva\',\n    \'yChange.konva\',\n    \'scaleXChange.konva\',\n    \'scaleYChange.konva\',\n    \'skewXChange.konva\',\n    \'skewYChange.konva\',\n    \'rotationChange.konva\',\n    \'offsetXChange.konva\',\n    \'offsetYChange.konva\',\n    \'transformsEnabledChange.konva\',\n].join(SPACE);\nlet idCounter = 1;\nclass Node {\n    constructor(config) {\n        this._id = idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\n            this._cache.get(attr)) {\n            this._cache.get(attr).dirty = true;\n        }\n        else if (attr) {\n            this._cache.delete(attr);\n        }\n        else {\n            this._cache.clear();\n        }\n    }\n    _getCache(attr, privateGetter) {\n        var cache = this._cache.get(attr);\n        var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n        var invalid = cache === undefined || (isTransform && cache.dirty === true);\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep) => dep + \'Change.konva\').join(SPACE);\n            this.on(depsString, () => {\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get(CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === ABSOLUTE_TRANSFORM) {\n            this.fire(\'absoluteTransformChange\');\n        }\n    }\n    clearCache() {\n        this._cache.delete(CANVAS);\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        var conf = config || {};\n        var rect = {};\n        if (conf.x === undefined ||\n            conf.y === undefined ||\n            conf.width === undefined ||\n            conf.height === undefined) {\n            rect = this.getClientRect({\n                skipTransform: true,\n                relativeTo: this.getParent(),\n            });\n        }\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? rect.x : conf.x, y = conf.y === undefined ? rect.y : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            Util_Util.error(\'Can not cache the node. Width or height of the node equals 0. Caching is skipped.\');\n            return;\n        }\n        width += offset * 2;\n        height += offset * 2;\n        x -= offset;\n        y -= offset;\n        var cachedSceneCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n        }), cachedFilterCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n        }), cachedHitCanvas = new HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height,\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete(CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr(\'strokeStyle\', \'red\');\n            sceneContext.setAttr(\'lineWidth\', 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set(CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y,\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has(CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error(\'abstract "getClientRect" method call\');\n    }\n    _transformedRect(rect, top) {\n        var points = [\n            { x: rect.x, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y + rect.height },\n            { x: rect.x, y: rect.y + rect.height },\n        ];\n        var minX, minY, maxX, maxY;\n        var trans = this.getAbsoluteTransform(top);\n        points.forEach(function (point) {\n            var transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        var cacheCanvas = this._getCachedSceneCanvas();\n        var ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                var ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for (n = 0; n < len; n++) {\n                        filter = filters[n];\n                        if (typeof filter !== \'function\') {\n                            Util_Util.error(\'Filter should be type of function, but got \' +\n                                typeof filter +\n                                \' instead. Please check correct filters\');\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                }\n                catch (e) {\n                    Util_Util.error(\'Unable to apply filter. \' +\n                        e.message +\n                        \' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.\');\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (arguments.length === 3) {\n            return this._delegate.apply(this, arguments);\n        }\n        var events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split(\'.\');\n            baseEvent = parts[0];\n            name = parts[1] || \'\';\n            if (!this.eventListeners[baseEvent]) {\n                this.eventListeners[baseEvent] = [];\n            }\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler,\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        var events = (evtStr || \'\').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (!evtStr) {\n            for (t in this.eventListeners) {\n                this._off(t);\n            }\n        }\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split(\'.\');\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) {\n                    this._off(baseEvent, name, callback);\n                }\n            }\n            else {\n                for (t in this.eventListeners) {\n                    this._off(t, name, callback);\n                }\n            }\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        var e = {\n            target: this,\n            type: evt.type,\n            evt: evt,\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function (evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        var stopNode = this;\n        this.on(event, function (evt) {\n            var targets = evt.target.findAncestors(selector, true, stopNode);\n            for (var i = 0; i < targets.length; i++) {\n                evt = Util_Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) {\n            this.stopDrag();\n        }\n        DD._dragElements["delete"](this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache(STAGE);\n        this._clearSelfAndDescendantCache(VISIBLE);\n        this._clearSelfAndDescendantCache(LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        var parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        return this;\n    }\n    getAttr(attr) {\n        var method = \'get\' + Util_Util._capitalize(attr);\n        if (Util_Util._isFunction(this[method])) {\n            return this[method]();\n        }\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        var parent = this.getParent(), ancestors = [];\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return this.attrs || {};\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(() => {\n            var key, method;\n            if (!config) {\n                return this;\n            }\n            for (key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = Node_SET + Util_Util._capitalize(key);\n                if (Util_Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache(LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isListening(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    isVisible() {\n        return this._getCache(VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isVisible(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) {\n            return this._isVisible(top) && this._isListening(top);\n        }\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus !== \'dragging\') {\n                return;\n            }\n            else if (elem.node.nodeType === \'Stage\') {\n                layerUnderDrag = true;\n            }\n            else if (elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        var dragSkip = !skipDragCheck && !Global_Konva.hitOnDragEnabled && layerUnderDrag;\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                child = children[n];\n                index++;\n                if (child.nodeType !== SHAPE) {\n                    nodes = nodes.concat(child.getChildren().slice());\n                }\n                if (child._id === that._id) {\n                    n = len;\n                }\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                addChildren(nodes);\n            }\n        }\n        if (that.nodeType !== UPPER_STAGE) {\n            addChildren(that.getStage().getChildren());\n        }\n        return index;\n    }\n    getDepth() {\n        var depth = 0, parent = this.parent;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(() => {\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y(),\n        };\n    }\n    getRelativePointerPosition() {\n        if (!this.getStage()) {\n            return null;\n        }\n        var pos = this.getStage().getPointerPosition();\n        if (!pos) {\n            return null;\n        }\n        var transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while (parent) {\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) {\n            top = true;\n        }\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        var origTrans = this._clearTransform();\n        this.attrs.x = origTrans.x;\n        this.attrs.y = origTrans.y;\n        delete origTrans.x;\n        delete origTrans.y;\n        this._clearCache(TRANSFORM);\n        var it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y,\n        };\n        this._setTransform(origTrans);\n        this.setPosition({ x: pos.x, y: pos.y });\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        var key;\n        for (key in trans) {\n            this.attrs[key] = trans[key];\n        }\n    }\n    _clearTransform() {\n        var trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY(),\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) {\n            x += changeX;\n        }\n        if (changeY !== undefined) {\n            y += changeY;\n        }\n        this.setPosition({ x: x, y: y });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        var family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) {\n            return;\n        }\n        family.unshift(this);\n        while (parent && (!top || parent._id !== top._id)) {\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for (n = 0; n < len; n++) {\n            func(family[n]);\n        }\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            Util_Util.warn(\'Node has no parent. moveToTop function is ignored.\');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.push(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveUp() {\n        if (!this.parent) {\n            Util_Util.warn(\'Node has no parent. moveUp function is ignored.\');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            Util_Util.warn(\'Node has no parent. moveDown function is ignored.\');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            Util_Util.warn(\'Node has no parent. moveToBottom function is ignored.\');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            Util_Util.warn(\'Node has no parent. zIndex parameter is ignored.\');\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\n            Util_Util.warn(\'Unexpected value \' +\n                zIndex +\n                \' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to \' +\n                (this.parent.children.length - 1) +\n                \'.\');\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        var absOpacity = this.opacity();\n        var parent = this.getParent();\n        if (parent && !parent._isUnderCache) {\n            absOpacity *= parent.getAbsoluteOpacity();\n        }\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        obj.attrs = {};\n        for (key in attrs) {\n            val = attrs[key];\n            nonPlainObject =\n                Util_Util.isObject(val) && !Util_Util._isPlainObject(val) && !Util_Util._isArray(val);\n            if (nonPlainObject) {\n                continue;\n            }\n            getter = typeof this[key] === \'function\' && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) {\n                obj.attrs[key] = val;\n            }\n        }\n        obj.className = this.getClassName();\n        return Util_Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        var res = [];\n        if (includeSelf && this._isMatch(selector)) {\n            res.push(this);\n        }\n        var ancestor = this.parent;\n        while (ancestor) {\n            if (ancestor === stopNode) {\n                return res;\n            }\n            if (ancestor._isMatch(selector)) {\n                res.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (typeof selector === \'function\') {\n            return selector(this);\n        }\n        var selectorArr = selector.replace(/ /g, \'\').split(\',\'), len = selectorArr.length, n, sel;\n        for (n = 0; n < len; n++) {\n            sel = selectorArr[n];\n            if (!Util_Util.isValidSelector(sel)) {\n                Util_Util.warn(\'Selector "\' +\n                    sel +\n                    \'" is invalid. Allowed selectors examples are "#foo", ".bar" or "Group".\');\n                Util_Util.warn(\'If you have a custom shape with such className, please change it to start with upper letter like "Triangle".\');\n                Util_Util.warn(\'Konva is awesome, right?\');\n            }\n            if (sel.charAt(0) === \'#\') {\n                if (this.id() === sel.slice(1)) {\n                    return true;\n                }\n            }\n            else if (sel.charAt(0) === \'.\') {\n                if (this.hasName(sel.slice(1))) {\n                    return true;\n                }\n            }\n            else if (this.className === sel || this.nodeType === sel) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getLayer() {\n        var parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache(STAGE, this._getStage);\n    }\n    _getStage() {\n        var parent = this.getParent();\n        if (parent) {\n            return parent.getStage();\n        }\n        else {\n            return undefined;\n        }\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) {\n            this._fireAndBubble(eventType, evt);\n        }\n        else {\n            this._fire(eventType, evt);\n        }\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) {\n            return this._getAbsoluteTransform(top);\n        }\n        else {\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n        }\n    }\n    _getAbsoluteTransform(top) {\n        var at;\n        if (top) {\n            at = new Transform();\n            this._eachAncestorReverse(function (node) {\n                var transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === \'all\') {\n                    at.multiply(node.getTransform());\n                }\n                else if (transformsEnabled === \'position\') {\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n                }\n            }, top);\n            return at;\n        }\n        else {\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n            if (this.parent) {\n                this.parent.getAbsoluteTransform().copyInto(at);\n            }\n            else {\n                at.reset();\n            }\n            var transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === \'all\') {\n                at.multiply(this.getTransform());\n            }\n            else if (transformsEnabled === \'position\') {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        var parent = this;\n        while (parent) {\n            if (parent._isUnderCache) {\n                top = parent;\n            }\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY,\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache(TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        var m = this._cache.get(TRANSFORM) || new Transform();\n        m.reset();\n        var x = this.x(), y = this.y(), rotation = Global_Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) {\n            m.translate(x, y);\n        }\n        if (rotation !== 0) {\n            m.rotate(rotation);\n        }\n        if (skewX !== 0 || skewY !== 0) {\n            m.skew(skewX, skewY);\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            m.scale(scaleX, scaleY);\n        }\n        if (offsetX !== 0 || offsetY !== 0) {\n            m.translate(-1 * offsetX, -1 * offsetY);\n        }\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        var attrs = Util_Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for (key in obj) {\n            attrs[key] = obj[key];\n        }\n        var node = new this.constructor(attrs);\n        for (key in this.eventListeners) {\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for (n = 0; n < len; n++) {\n                listener = allListeners[n];\n                if (listener.name.indexOf(KONVA) < 0) {\n                    if (!node.eventListeners[key]) {\n                        node.eventListeners[key] = [];\n                    }\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        var box = this.getClientRect();\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : box.x, y = config.y !== undefined ? config.y : box.y, pixelRatio = config.pixelRatio || 1, canvas = new SceneCanvas({\n            width: config.width || box.width || (stage ? stage.width() : 0),\n            height: config.height || box.height || (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio,\n        }), context = canvas.getContext();\n        context.save();\n        if (x || y) {\n            context.translate(-1 * x, -1 * y);\n        }\n        this.drawScene(canvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        var mimeType = config.mimeType || null, quality = config.quality || null;\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) {\n            config.callback(url);\n        }\n        return url;\n    }\n    toImage(config) {\n        if (!config || !config.callback) {\n            throw \'callback required for toImage method config argument\';\n        }\n        var callback = config.callback;\n        delete config.callback;\n        Util_Util._urlToImage(this.toDataURL(config), function (img) {\n            callback(img);\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height(),\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) {\n            return this.attrs.dragDistance;\n        }\n        else if (this.parent) {\n            return this.parent.getDragDistance();\n        }\n        else {\n            return Global_Konva.dragDistance;\n        }\n    }\n    _off(type, name, callback) {\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\n        for (i = 0; i < evtListeners.length; i++) {\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== \'konva\' || name === \'konva\') &&\n                (!name || evtName === name) &&\n                (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal,\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            var oldName = this.name();\n            var newName = oldName ? oldName + \' \' + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) {\n            return false;\n        }\n        const fullName = this.name();\n        if (!fullName) {\n            return false;\n        }\n        var names = (fullName || \'\').split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        var names = (this.name() || \'\').split(/\\s/g);\n        var index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(\' \'));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        var func = this[Node_SET + Util_Util._capitalize(attr)];\n        if (Util_Util._isFunction(func)) {\n            func.call(this, val);\n        }\n        else {\n            this._setAttr(attr, val);\n        }\n        return this;\n    }\n    _requestDraw() {\n        if (Global_Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        var oldVal = this.attrs[key];\n        if (oldVal === val && !Util_Util.isObject(val)) {\n            return;\n        }\n        if (val === undefined || val === null) {\n            delete this.attrs[key];\n        }\n        else {\n            this.attrs[key] = val;\n        }\n        if (this._shouldFireChangeEvents) {\n            this._fireChangeEvent(key, oldVal, val);\n        }\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        var oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) {\n                this.attrs[key] = this.getAttr(key);\n            }\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === SHAPE) {\n            evt.target = this;\n        }\n        var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n            ((compareShape &&\n                (this === compareShape ||\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\n                (this.nodeType === \'Stage\' && !compareShape));\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                compareShape &&\n                compareShape.isAncestorOf &&\n                compareShape.isAncestorOf(this) &&\n                !compareShape.isAncestorOf(this.parent);\n            if (((evt && !evt.cancelBubble) || !evt) &&\n                this.parent &&\n                this.parent.isListening() &&\n                !stopBubble) {\n                if (compareShape && compareShape.parent) {\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                }\n                else {\n                    this._fireAndBubble.call(this.parent, eventType, evt);\n                }\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        let listeners = this._cache.get(ALL_LISTENERS);\n        if (!listeners) {\n            listeners = {};\n            let obj = Object.getPrototypeOf(this);\n            while (obj) {\n                if (!obj.eventListeners) {\n                    obj = Object.getPrototypeOf(obj);\n                    continue;\n                }\n                for (var event in obj.eventListeners) {\n                    const newEvents = obj.eventListeners[event];\n                    const oldEvents = listeners[event] || [];\n                    listeners[event] = newEvents.concat(oldEvents);\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n            this._cache.set(ALL_LISTENERS, listeners);\n        }\n        return listeners[eventType];\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) {\n            for (var i = 0; i < topListeners.length; i++) {\n                topListeners[i].handler.call(this, evt);\n            }\n        }\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) {\n            for (var i = 0; i < selfListeners.length; i++) {\n                selfListeners[i].handler.call(this, evt);\n            }\n        }\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        var pointerId = evt ? evt.pointerId : undefined;\n        var stage = this.getStage();\n        var ap = this.getAbsolutePosition();\n        var pos = stage._getPointerById(pointerId) ||\n            stage._changedPointerPositions[0] ||\n            ap;\n        DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y,\n            },\n            dragStatus: \'ready\',\n            pointerId,\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!DD._dragElements.has(this._id)) {\n            this._createDragElement(evt);\n        }\n        const elem = DD._dragElements.get(this._id);\n        elem.dragStatus = \'dragging\';\n        this.fire(\'dragstart\', {\n            type: \'dragstart\',\n            target: this,\n            evt: evt && evt.evt,\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) {\n            return;\n        }\n        var newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y,\n        };\n        var dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) {\n                Util_Util.warn(\'dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.\');\n            }\n            else {\n                newNodePos = bounded;\n            }\n        }\n        if (!this._lastPos ||\n            this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = DD._dragElements.get(this._id);\n        if (elem) {\n            elem.dragStatus = \'stopped\';\n        }\n        DD._endDragBefore(evt);\n        DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr(\'draggable\', draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === \'dragging\' : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on(\'mousedown.konva touchstart.konva\', function (evt) {\n            var shouldCheckButton = evt.evt[\'button\'] !== undefined;\n            var canDrag = !shouldCheckButton || Global_Konva.dragButtons.indexOf(evt.evt[\'button\']) >= 0;\n            if (!canDrag) {\n                return;\n            }\n            if (this.isDragging()) {\n                return;\n            }\n            var hasDraggingChild = false;\n            DD._dragElements.forEach((elem) => {\n                if (this.isAncestorOf(elem.node)) {\n                    hasDraggingChild = true;\n                }\n            });\n            if (!hasDraggingChild) {\n                this._createDragElement(evt);\n            }\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            this._dragCleanup();\n            var stage = this.getStage();\n            if (!stage) {\n                return;\n            }\n            const dragElement = DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === \'dragging\';\n            const isReady = dragElement && dragElement.dragStatus === \'ready\';\n            if (isDragging) {\n                this.stopDrag();\n            }\n            else if (isReady) {\n                DD._dragElements["delete"](this._id);\n            }\n        }\n    }\n    _dragCleanup() {\n        this.off(\'mousedown.konva\');\n        this.off(\'touchstart.konva\');\n    }\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + margin.x,\n            height: stage.height() + margin.y,\n        };\n        return Util_Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if (Util_Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        var className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) {\n            obj.attrs.container = container;\n        }\n        if (!Global_Konva[className]) {\n            Util_Util.warn(\'Can not find a node with class name "\' +\n                className +\n                \'". Fallback to "Shape".\');\n            className = \'Shape\';\n        }\n        const Class = Global_Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                no.add(Node._createNode(children[n]));\n            }\n        }\n        return no;\n    }\n}\nNode.prototype.nodeType = \'Node\';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, \'visibleChange.konva\', function () {\n    this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, \'listeningChange.konva\', function () {\n    this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, \'opacityChange.konva\', function () {\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, \'zIndex\');\naddGetterSetter(Node, \'absolutePosition\');\naddGetterSetter(Node, \'position\');\naddGetterSetter(Node, \'x\', 0, getNumberValidator());\naddGetterSetter(Node, \'y\', 0, getNumberValidator());\naddGetterSetter(Node, \'globalCompositeOperation\', \'source-over\', getStringValidator());\naddGetterSetter(Node, \'opacity\', 1, getNumberValidator());\naddGetterSetter(Node, \'name\', \'\', getStringValidator());\naddGetterSetter(Node, \'id\', \'\', getStringValidator());\naddGetterSetter(Node, \'rotation\', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, \'scale\', [\'x\', \'y\']);\naddGetterSetter(Node, \'scaleX\', 1, getNumberValidator());\naddGetterSetter(Node, \'scaleY\', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, \'skew\', [\'x\', \'y\']);\naddGetterSetter(Node, \'skewX\', 0, getNumberValidator());\naddGetterSetter(Node, \'skewY\', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, \'offset\', [\'x\', \'y\']);\naddGetterSetter(Node, \'offsetX\', 0, getNumberValidator());\naddGetterSetter(Node, \'offsetY\', 0, getNumberValidator());\naddGetterSetter(Node, \'dragDistance\', null, getNumberValidator());\naddGetterSetter(Node, \'width\', 0, getNumberValidator());\naddGetterSetter(Node, \'height\', 0, getNumberValidator());\naddGetterSetter(Node, \'listening\', true, getBooleanValidator());\naddGetterSetter(Node, \'preventDefault\', true, getBooleanValidator());\naddGetterSetter(Node, \'filters\', null, function (val) {\n    this._filterUpToDate = false;\n    return val;\n});\naddGetterSetter(Node, \'visible\', true, getBooleanValidator());\naddGetterSetter(Node, \'transformsEnabled\', \'all\', getStringValidator());\naddGetterSetter(Node, \'size\');\naddGetterSetter(Node, \'dragBoundFunc\');\naddGetterSetter(Node, \'draggable\', false, getBooleanValidator());\nFactory.backCompat(Node, {\n    rotateDeg: \'rotate\',\n    setRotationDeg: \'setRotation\',\n    getRotationDeg: \'getRotation\',\n});\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Container.js\n\n\n\nclass Container extends Node {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n    }\n    getChildren(filterFunc) {\n        if (!filterFunc) {\n            return this.children || [];\n        }\n        const children = this.children || [];\n        var results = [];\n        children.forEach(function (child) {\n            if (filterFunc(child)) {\n                results.push(child);\n            }\n        });\n        return results;\n    }\n    hasChildren() {\n        return this.getChildren().length > 0;\n    }\n    removeChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    destroyChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    add(...children) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        var child = children[0];\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        this._validateAdd(child);\n        child.index = this.getChildren().length;\n        child.parent = this;\n        child._clearCaches();\n        this.getChildren().push(child);\n        this._fire(\'add\', {\n            child: child,\n        });\n        this._requestDraw();\n        return this;\n    }\n    destroy() {\n        if (this.hasChildren()) {\n            this.destroyChildren();\n        }\n        super.destroy();\n        return this;\n    }\n    find(selector) {\n        return this._generalFind(selector, false);\n    }\n    findOne(selector) {\n        var result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    }\n    _generalFind(selector, findOne) {\n        var retArr = [];\n        this._descendants((node) => {\n            const valid = node._isMatch(selector);\n            if (valid) {\n                retArr.push(node);\n            }\n            if (valid && findOne) {\n                return true;\n            }\n            return false;\n        });\n        return retArr;\n    }\n    _descendants(fn) {\n        let shouldStop = false;\n        const children = this.getChildren();\n        for (const child of children) {\n            shouldStop = fn(child);\n            if (shouldStop) {\n                return true;\n            }\n            if (!child.hasChildren()) {\n                continue;\n            }\n            shouldStop = child._descendants(fn);\n            if (shouldStop) {\n                return true;\n            }\n        }\n        return false;\n    }\n    toObject() {\n        var obj = Node.prototype.toObject.call(this);\n        obj.children = [];\n        this.getChildren().forEach((child) => {\n            obj.children.push(child.toObject());\n        });\n        return obj;\n    }\n    isAncestorOf(node) {\n        var parent = node.getParent();\n        while (parent) {\n            if (parent._id === this._id) {\n                return true;\n            }\n            parent = parent.getParent();\n        }\n        return false;\n    }\n    clone(obj) {\n        var node = Node.prototype.clone.call(this, obj);\n        this.getChildren().forEach(function (no) {\n            node.add(no.clone());\n        });\n        return node;\n    }\n    getAllIntersections(pos) {\n        var arr = [];\n        this.find(\'Shape\').forEach(function (shape) {\n            if (shape.isVisible() && shape.intersects(pos)) {\n                arr.push(shape);\n            }\n        });\n        return arr;\n    }\n    _clearSelfAndDescendantCache(attr) {\n        var _a;\n        super._clearSelfAndDescendantCache(attr);\n        if (this.isCached()) {\n            return;\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n            node._clearSelfAndDescendantCache(attr);\n        });\n    }\n    _setChildrenIndices() {\n        var _a;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n            child.index = n;\n        });\n        this._requestDraw();\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        var caching = canvas && canvas.isCache;\n        if (!this.isVisible() && !caching) {\n            return this;\n        }\n        if (cachedSceneCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren(\'drawScene\', canvas, top);\n        }\n        return this;\n    }\n    drawHit(can, top) {\n        if (!this.shouldDrawHit(top)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren(\'drawHit\', canvas, top);\n        }\n        return this;\n    }\n    _drawChildren(drawMethod, canvas, top) {\n        var _a;\n        var context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc;\n        const selfCache = top === this;\n        if (hasClip) {\n            context.save();\n            var transform = this.getAbsoluteTransform(top);\n            var m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            if (clipFunc) {\n                clipFunc.call(this, context, this);\n            }\n            else {\n                var clipX = this.clipX();\n                var clipY = this.clipY();\n                context.rect(clipX, clipY, clipWidth, clipHeight);\n            }\n            context.clip();\n            m = transform.copy().invert().getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        var hasComposition = !selfCache &&\n            this.globalCompositeOperation() !== \'source-over\' &&\n            drawMethod === \'drawScene\';\n        if (hasComposition) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            child[drawMethod](canvas, top);\n        });\n        if (hasComposition) {\n            context.restore();\n        }\n        if (hasClip) {\n            context.restore();\n        }\n    }\n    getClientRect(config) {\n        var _a;\n        config = config || {};\n        var skipTransform = config.skipTransform;\n        var relativeTo = config.relativeTo;\n        var minX, minY, maxX, maxY;\n        var selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0,\n        };\n        var that = this;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            if (!child.visible()) {\n                return;\n            }\n            var rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: config.skipShadow,\n                skipStroke: config.skipStroke,\n            });\n            if (rect.width === 0 && rect.height === 0) {\n                return;\n            }\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            }\n            else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        var shapes = this.find(\'Shape\');\n        var hasVisible = false;\n        for (var i = 0; i < shapes.length; i++) {\n            var shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible && minX !== undefined) {\n            selfRect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY,\n            };\n        }\n        else {\n            selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (!skipTransform) {\n            return this._transformedRect(selfRect, relativeTo);\n        }\n        return selfRect;\n    }\n}\nFactory.addComponentsGetterSetter(Container, \'clip\', [\n    \'x\',\n    \'y\',\n    \'width\',\n    \'height\',\n]);\nFactory.addGetterSetter(Container, \'clipX\', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, \'clipY\', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, \'clipWidth\', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, \'clipHeight\', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, \'clipFunc\');\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/PointerEvents.js\n\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Global_Konva._global.PointerEvent !== undefined;\nfunction getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nfunction createEvent(evt) {\n    return {\n        evt,\n        pointerId: evt.pointerId,\n    };\n}\nfunction hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nfunction setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    const stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire(\'gotpointercapture\', createEvent(new PointerEvent(\'gotpointercapture\')));\n    }\n}\nfunction releaseCapture(pointerId, target) {\n    const shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    const stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire(\'lostpointercapture\', createEvent(new PointerEvent(\'lostpointercapture\')));\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Stage.js\n\n\n\n\n\n\n\n\nvar Stage_STAGE = \'Stage\', STRING = \'string\', PX = \'px\', MOUSEOUT = \'mouseout\', Stage_MOUSELEAVE = \'mouseleave\', MOUSEOVER = \'mouseover\', Stage_MOUSEENTER = \'mouseenter\', MOUSEMOVE = \'mousemove\', MOUSEDOWN = \'mousedown\', MOUSEUP = \'mouseup\', POINTERMOVE = \'pointermove\', POINTERDOWN = \'pointerdown\', POINTERUP = \'pointerup\', POINTERCANCEL = \'pointercancel\', LOSTPOINTERCAPTURE = \'lostpointercapture\', POINTEROUT = \'pointerout\', POINTERLEAVE = \'pointerleave\', POINTEROVER = \'pointerover\', POINTERENTER = \'pointerenter\', CONTEXTMENU = \'contextmenu\', TOUCHSTART = \'touchstart\', TOUCHEND = \'touchend\', TOUCHMOVE = \'touchmove\', TOUCHCANCEL = \'touchcancel\', WHEEL = \'wheel\', MAX_LAYERS_NUMBER = 5, EVENTS = [\n    [Stage_MOUSEENTER, \'_pointerenter\'],\n    [MOUSEDOWN, \'_pointerdown\'],\n    [MOUSEMOVE, \'_pointermove\'],\n    [MOUSEUP, \'_pointerup\'],\n    [Stage_MOUSELEAVE, \'_pointerleave\'],\n    [TOUCHSTART, \'_pointerdown\'],\n    [TOUCHMOVE, \'_pointermove\'],\n    [TOUCHEND, \'_pointerup\'],\n    [TOUCHCANCEL, \'_pointercancel\'],\n    [MOUSEOVER, \'_pointerover\'],\n    [WHEEL, \'_wheel\'],\n    [CONTEXTMENU, \'_contextmenu\'],\n    [POINTERDOWN, \'_pointerdown\'],\n    [POINTERMOVE, \'_pointermove\'],\n    [POINTERUP, \'_pointerup\'],\n    [POINTERCANCEL, \'_pointercancel\'],\n    [LOSTPOINTERCAPTURE, \'_lostpointercapture\'],\n];\nconst EVENTS_MAP = {\n    mouse: {\n        [POINTEROUT]: MOUSEOUT,\n        [POINTERLEAVE]: Stage_MOUSELEAVE,\n        [POINTEROVER]: MOUSEOVER,\n        [POINTERENTER]: Stage_MOUSEENTER,\n        [POINTERMOVE]: MOUSEMOVE,\n        [POINTERDOWN]: MOUSEDOWN,\n        [POINTERUP]: MOUSEUP,\n        [POINTERCANCEL]: \'mousecancel\',\n        pointerclick: \'click\',\n        pointerdblclick: \'dblclick\',\n    },\n    touch: {\n        [POINTEROUT]: \'touchout\',\n        [POINTERLEAVE]: \'touchleave\',\n        [POINTEROVER]: \'touchover\',\n        [POINTERENTER]: \'touchenter\',\n        [POINTERMOVE]: TOUCHMOVE,\n        [POINTERDOWN]: TOUCHSTART,\n        [POINTERUP]: TOUCHEND,\n        [POINTERCANCEL]: TOUCHCANCEL,\n        pointerclick: \'tap\',\n        pointerdblclick: \'dbltap\',\n    },\n    pointer: {\n        [POINTEROUT]: POINTEROUT,\n        [POINTERLEAVE]: POINTERLEAVE,\n        [POINTEROVER]: POINTEROVER,\n        [POINTERENTER]: POINTERENTER,\n        [POINTERMOVE]: POINTERMOVE,\n        [POINTERDOWN]: POINTERDOWN,\n        [POINTERUP]: POINTERUP,\n        [POINTERCANCEL]: POINTERCANCEL,\n        pointerclick: \'pointerclick\',\n        pointerdblclick: \'pointerdblclick\',\n    },\n};\nconst getEventType = (type) => {\n    if (type.indexOf(\'pointer\') >= 0) {\n        return \'pointer\';\n    }\n    if (type.indexOf(\'touch\') >= 0) {\n        return \'touch\';\n    }\n    return \'mouse\';\n};\nconst getEventsMap = (eventType) => {\n    const type = getEventType(eventType);\n    if (type === \'pointer\') {\n        return Global_Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n    }\n    if (type === \'touch\') {\n        return EVENTS_MAP.touch;\n    }\n    if (type === \'mouse\') {\n        return EVENTS_MAP.mouse;\n    }\n};\nfunction checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util_Util.warn(\'Stage does not support clipping. Please use clip for Layers or Groups.\');\n    }\n    return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nconst stages = [];\nclass Stage extends Container {\n    constructor(config) {\n        super(checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        stages.push(this);\n        this.on(\'widthChange.konva heightChange.konva\', this._resizeDOM);\n        this.on(\'visibleChange.konva\', this._checkVisibility);\n        this.on(\'clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva\', () => {\n            checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === \'Layer\';\n        const isFastLayer = child.getType() === \'FastLayer\';\n        const valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util_Util["throw"](\'You may only add layers to the stage.\');\n        }\n    }\n    _checkVisibility() {\n        if (!this.content) {\n            return;\n        }\n        const style = this.visible() ? \'\' : \'none\';\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === \'.\') {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== \'#\') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw \'Can not find container in document with id \' + id;\n            }\n        }\n        this._setAttr(\'container\', container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        var layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    }\n    clone(obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container =\n            typeof document !== \'undefined\' && document.createElement(\'div\');\n        return Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        var content = this.content;\n        if (content && Util_Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        var index = stages.indexOf(this);\n        if (index > -1) {\n            stages.splice(index, 1);\n        }\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util_Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y,\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p) => p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        var canvas = new SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1,\n        });\n        var _context = canvas.getContext()._context;\n        var layers = this.children;\n        if (config.x || config.y) {\n            _context.translate(-1 * config.x, -1 * config.y);\n        }\n        layers.forEach(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) {\n            return null;\n        }\n        var layers = this.children, len = layers.length, end = len - 1, n;\n        for (n = end; n >= 0; n--) {\n            const shape = layers[n].getIntersection(pos);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    }\n    _resizeDOM() {\n        var width = this.width();\n        var height = this.height();\n        if (this.content) {\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer) => {\n            layer.setSize({ width, height });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        super.add(layer);\n        var length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util_Util.warn(\'The stage has \' +\n                length +\n                \' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.\');\n        }\n        layer.setSize({ width: this.width(), height: this.height() });\n        layer.draw();\n        if (Global_Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!Global_Konva.isBrowser) {\n            return;\n        }\n        EVENTS.forEach(([event, methodName]) => {\n            this.content.addEventListener(event, (evt) => {\n                this[methodName](evt);\n            });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerenter, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + \'targetShape\'];\n        if (shape && !shape.getStage()) {\n            shape = null;\n        }\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var targetShape = this._getTargetShape(eventType);\n        var eventsEnabled = !DD.isDragging || Global_Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this[eventType + \'targetShape\'] = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n        this.pointerPos = undefined;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            var shape = this.getIntersection(pos);\n            DD.justDragged = false;\n            Global_Konva[\'_\' + eventType + \'ListenClick\'] = true;\n            const hasShape = shape && shape.isListening();\n            if (!hasShape) {\n                return;\n            }\n            if (Global_Konva.capturePointerEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            this[eventType + \'ClickStartShape\'] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id,\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf(\'touch\') >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerdown, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._pointerPositions[0].id,\n            });\n        }\n    }\n    _pointermove(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        if (DD.isDragging && DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n        this.setPointersPositions(evt);\n        var eventsEnabled = !DD.isDragging || Global_Konva.hitOnDragEnabled;\n        if (!eventsEnabled) {\n            return;\n        }\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        var targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            var differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n                targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n                    shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n                    this[eventType + \'targetShape\'] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n            }\n            else {\n                if (targetShape) {\n                    this._fire(events.pointerover, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                    this[eventType + \'targetShape\'] = null;\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointermove, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n    }\n    _pointerup(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + \'ClickStartShape\'];\n        const clickEndShape = this[eventType + \'ClickEndShape\'];\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            let fireDblClick = false;\n            if (Global_Konva[\'_\' + eventType + \'InDblClickWindow\']) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + \'DblTimeout\']);\n            }\n            else if (!DD.justDragged) {\n                Global_Konva[\'_\' + eventType + \'InDblClickWindow\'] = true;\n                clearTimeout(this[eventType + \'DblTimeout\']);\n            }\n            this[eventType + \'DblTimeout\'] = setTimeout(function () {\n                Global_Konva[\'_\' + eventType + \'InDblClickWindow\'] = false;\n            }, Global_Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + \'ClickEndShape\'] = shape;\n                shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n                if (Global_Konva[\'_\' + eventType + \'ListenClick\'] &&\n                    clickStartShape &&\n                    clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                        shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n                    }\n                }\n            }\n            else {\n                this[eventType + \'ClickEndShape\'] = null;\n                if (Global_Konva[\'_\' + eventType + \'ListenClick\']) {\n                    this._fire(events.pointerclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n                if (fireDblClick) {\n                    this._fire(events.pointerdblclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerup, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n        Global_Konva[\'_\' + eventType + \'ListenClick\'] = false;\n        if (evt.cancelable) {\n            evt.preventDefault();\n        }\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, createEvent(evt));\n        }\n        releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch) => {\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n        }\n        else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y,\n            };\n            this._pointerPositions = [{ x, y, id: Util_Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x, y, id: Util_Util._getFirstPointerId(evt) },\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        Util_Util.warn(\'Method _setPointerPosition is deprecated. Use "stage.setPointersPositions(event)" instead.\');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) {\n            return {\n                top: 0,\n                left: 0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        var rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1,\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new SceneCanvas({\n            width: this.width(),\n            height: this.height(),\n        });\n        this.bufferHitCanvas = new HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height(),\n        });\n        if (!Global_Konva.isBrowser) {\n            return;\n        }\n        var container = this.container();\n        if (!container) {\n            throw \'Stage has no container. A container is required.\';\n        }\n        container.innerHTML = \'\';\n        this.content = document.createElement(\'div\');\n        this.content.style.position = \'relative\';\n        this.content.style.userSelect = \'none\';\n        this.content.className = \'konvajs-content\';\n        this.content.setAttribute(\'role\', \'presentation\');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        Util_Util.warn(\'Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.\');\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\nStage.prototype.nodeType = Stage_STAGE;\n_registerNode(Stage);\nFactory.addGetterSetter(Stage, \'container\');\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Shape.js\n\n\n\n\n\n\n\nvar HAS_SHADOW = \'hasShadow\';\nvar SHADOW_RGBA = \'shadowRGBA\';\nvar patternImage = \'patternImage\';\nvar linearGradient = \'linearGradient\';\nvar radialGradient = \'radialGradient\';\nlet dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util_Util.createCanvasElement().getContext(\'2d\');\n    return dummyContext;\n}\nconst shapes = {};\nfunction _fillFunc(context) {\n    context.fill();\n}\nfunction _strokeFunc(context) {\n    context.stroke();\n}\nfunction _fillFuncHit(context) {\n    context.fill();\n}\nfunction _strokeFuncHit(context) {\n    context.stroke();\n}\nfunction _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n}\nfunction _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n}\nfunction _clearFillPatternCache() {\n    this._clearCache(patternImage);\n}\nfunction _clearLinearGradientCache() {\n    this._clearCache(linearGradient);\n}\nfunction _clearRadialGradientCache() {\n    this._clearCache(radialGradient);\n}\nclass Shape extends Node {\n    constructor(config) {\n        super(config);\n        let key;\n        while (true) {\n            key = Util_Util.getRandomColor();\n            if (key && !(key in shapes)) {\n                break;\n            }\n        }\n        this.colorKey = key;\n        shapes[key] = this;\n    }\n    getContext() {\n        Util_Util.warn(\'shape.getContext() method is deprecated. Please do not use it.\');\n        return this.getLayer().getContext();\n    }\n    getCanvas() {\n        Util_Util.warn(\'shape.getCanvas() method is deprecated. Please do not use it.\');\n        return this.getLayer().getCanvas();\n    }\n    getSceneFunc() {\n        return this.attrs.sceneFunc || this[\'_sceneFunc\'];\n    }\n    getHitFunc() {\n        return this.attrs.hitFunc || this[\'_hitFunc\'];\n    }\n    hasShadow() {\n        return this._getCache(HAS_SHADOW, this._hasShadow);\n    }\n    _hasShadow() {\n        return (this.shadowEnabled() &&\n            this.shadowOpacity() !== 0 &&\n            !!(this.shadowColor() ||\n                this.shadowBlur() ||\n                this.shadowOffsetX() ||\n                this.shadowOffsetY()));\n    }\n    _getFillPattern() {\n        return this._getCache(patternImage, this.__getFillPattern);\n    }\n    __getFillPattern() {\n        if (this.fillPatternImage()) {\n            var ctx = getDummyContext();\n            const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || \'repeat\');\n            if (pattern && pattern.setTransform) {\n                const tr = new Transform();\n                tr.translate(this.fillPatternX(), this.fillPatternY());\n                tr.rotate(Global_Konva.getAngle(this.fillPatternRotation()));\n                tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n                tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n                const m = tr.getMatrix();\n                pattern.setTransform({\n                    a: m[0],\n                    b: m[1],\n                    c: m[2],\n                    d: m[3],\n                    e: m[4],\n                    f: m[5],\n                });\n            }\n            return pattern;\n        }\n    }\n    _getLinearGradient() {\n        return this._getCache(linearGradient, this.__getLinearGradient);\n    }\n    __getLinearGradient() {\n        var colorStops = this.fillLinearGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillLinearGradientStartPoint();\n            var end = this.fillLinearGradientEndPoint();\n            var grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    _getRadialGradient() {\n        return this._getCache(radialGradient, this.__getRadialGradient);\n    }\n    __getRadialGradient() {\n        var colorStops = this.fillRadialGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillRadialGradientStartPoint();\n            var end = this.fillRadialGradientEndPoint();\n            var grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    getShadowRGBA() {\n        return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    }\n    _getShadowRGBA() {\n        if (this.hasShadow()) {\n            var rgba = Util_Util.colorToRGBA(this.shadowColor());\n            return (\'rgba(\' +\n                rgba.r +\n                \',\' +\n                rgba.g +\n                \',\' +\n                rgba.b +\n                \',\' +\n                rgba.a * (this.shadowOpacity() || 1) +\n                \')\');\n        }\n    }\n    hasFill() {\n        return this._calculate(\'hasFill\', [\n            \'fillEnabled\',\n            \'fill\',\n            \'fillPatternImage\',\n            \'fillLinearGradientColorStops\',\n            \'fillRadialGradientColorStops\',\n        ], () => {\n            return (this.fillEnabled() &&\n                !!(this.fill() ||\n                    this.fillPatternImage() ||\n                    this.fillLinearGradientColorStops() ||\n                    this.fillRadialGradientColorStops()));\n        });\n    }\n    hasStroke() {\n        return this._calculate(\'hasStroke\', [\n            \'strokeEnabled\',\n            \'strokeWidth\',\n            \'stroke\',\n            \'strokeLinearGradientColorStops\',\n        ], () => {\n            return (this.strokeEnabled() &&\n                this.strokeWidth() &&\n                !!(this.stroke() || this.strokeLinearGradientColorStops()));\n        });\n    }\n    hasHitStroke() {\n        const width = this.hitStrokeWidth();\n        if (width === \'auto\') {\n            return this.hasStroke();\n        }\n        return this.strokeEnabled() && !!width;\n    }\n    intersects(point) {\n        var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;\n        bufferHitCanvas.getContext().clear();\n        this.drawHit(bufferHitCanvas, null, true);\n        p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n        return p[3] > 0;\n    }\n    destroy() {\n        Node.prototype.destroy.call(this);\n        delete shapes[this.colorKey];\n        delete this.colorKey;\n        return this;\n    }\n    _useBufferCanvas(forceFill) {\n        var _a;\n        if (!this.getStage()) {\n            return false;\n        }\n        const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n        if (!perfectDrawEnabled) {\n            return false;\n        }\n        const hasFill = forceFill || this.hasFill();\n        const hasStroke = this.hasStroke();\n        const isTransparent = this.getAbsoluteOpacity() !== 1;\n        if (hasFill && hasStroke && isTransparent) {\n            return true;\n        }\n        const hasShadow = this.hasShadow();\n        const strokeForShadow = this.shadowForStrokeEnabled();\n        if (hasFill && hasStroke && hasShadow && strokeForShadow) {\n            return true;\n        }\n        return false;\n    }\n    setStrokeHitEnabled(val) {\n        Util_Util.warn(\'strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.\');\n        if (val) {\n            this.hitStrokeWidth(\'auto\');\n        }\n        else {\n            this.hitStrokeWidth(0);\n        }\n    }\n    getStrokeHitEnabled() {\n        if (this.hitStrokeWidth() === 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    getSelfRect() {\n        var size = this.size();\n        return {\n            x: this._centroid ? -size.width / 2 : 0,\n            y: this._centroid ? -size.height / 2 : 0,\n            width: size.width,\n            height: size.height,\n        };\n    }\n    getClientRect(config = {}) {\n        const skipTransform = config.skipTransform;\n        const relativeTo = config.relativeTo;\n        const fillRect = this.getSelfRect();\n        const applyStroke = !config.skipStroke && this.hasStroke();\n        const strokeWidth = (applyStroke && this.strokeWidth()) || 0;\n        const fillAndStrokeWidth = fillRect.width + strokeWidth;\n        const fillAndStrokeHeight = fillRect.height + strokeWidth;\n        const applyShadow = !config.skipShadow && this.hasShadow();\n        const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n        const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n        const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n        const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n        const blurRadius = (applyShadow && this.shadowBlur()) || 0;\n        const width = preWidth + blurRadius * 2;\n        const height = preHeight + blurRadius * 2;\n        let roundingOffset = 0;\n        if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {\n            roundingOffset = 1;\n        }\n        const rect = {\n            width: width + roundingOffset,\n            height: height + roundingOffset,\n            x: -Math.round(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetX, 0) +\n                fillRect.x,\n            y: -Math.round(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetY, 0) +\n                fillRect.y,\n        };\n        if (!skipTransform) {\n            return this._transformedRect(rect, relativeTo);\n        }\n        return rect;\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || layer.getCanvas(), context = canvas.getContext(), cachedCanvas = this._getCanvasCache(), drawFunc = this.getSceneFunc(), hasShadow = this.hasShadow(), stage, bufferCanvas, bufferContext;\n        var skipBuffer = canvas.isCache;\n        var cachingSelf = top === this;\n        if (!this.isVisible() && !cachingSelf) {\n            return this;\n        }\n        if (cachedCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        if (this._useBufferCanvas() && !skipBuffer) {\n            stage = this.getStage();\n            bufferCanvas = stage.bufferCanvas;\n            bufferContext = bufferCanvas.getContext();\n            bufferContext.clear();\n            bufferContext.save();\n            bufferContext._applyLineJoin(this);\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n            drawFunc.call(this, bufferContext, this);\n            bufferContext.restore();\n            var ratio = bufferCanvas.pixelRatio;\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n            context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n        }\n        else {\n            context._applyLineJoin(this);\n            if (!cachingSelf) {\n                var o = this.getAbsoluteTransform(top).getMatrix();\n                context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n                context._applyOpacity(this);\n                context._applyGlobalCompositeOperation(this);\n            }\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            drawFunc.call(this, context, this);\n        }\n        context.restore();\n        return this;\n    }\n    drawHit(can, top, skipDragCheck = false) {\n        if (!this.shouldDrawHit(top, skipDragCheck)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || layer.hitCanvas, context = canvas && canvas.getContext(), drawFunc = this.hitFunc() || this.sceneFunc(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (!this.colorKey) {\n            Util_Util.warn(\'Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()\');\n        }\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        context._applyLineJoin(this);\n        const selfCache = this === top;\n        if (!selfCache) {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n        drawFunc.call(this, context, this);\n        context.restore();\n        return this;\n    }\n    drawHitFromCache(alphaThreshold = 0) {\n        var cachedCanvas = this._getCanvasCache(), sceneCanvas = this._getCachedSceneCanvas(), hitCanvas = cachedCanvas.hit, hitContext = hitCanvas.getContext(), hitWidth = hitCanvas.getWidth(), hitHeight = hitCanvas.getHeight(), hitImageData, hitData, len, rgbColorKey, i, alpha;\n        hitContext.clear();\n        hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n        try {\n            hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n            hitData = hitImageData.data;\n            len = hitData.length;\n            rgbColorKey = Util_Util._hexToRgb(this.colorKey);\n            for (i = 0; i < len; i += 4) {\n                alpha = hitData[i + 3];\n                if (alpha > alphaThreshold) {\n                    hitData[i] = rgbColorKey.r;\n                    hitData[i + 1] = rgbColorKey.g;\n                    hitData[i + 2] = rgbColorKey.b;\n                    hitData[i + 3] = 255;\n                }\n                else {\n                    hitData[i + 3] = 0;\n                }\n            }\n            hitContext.putImageData(hitImageData, 0, 0);\n        }\n        catch (e) {\n            Util_Util.error(\'Unable to draw hit graph from cached scene canvas. \' + e.message);\n        }\n        return this;\n    }\n    hasPointerCapture(pointerId) {\n        return hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        releaseCapture(pointerId, this);\n    }\n}\nShape.prototype._fillFunc = _fillFunc;\nShape.prototype._strokeFunc = _strokeFunc;\nShape.prototype._fillFuncHit = _fillFuncHit;\nShape.prototype._strokeFuncHit = _strokeFuncHit;\nShape.prototype._centroid = false;\nShape.prototype.nodeType = \'Shape\';\n_registerNode(Shape);\nShape.prototype.eventListeners = {};\nShape.prototype.on.call(Shape.prototype, \'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva\', _clearHasShadowCache);\nShape.prototype.on.call(Shape.prototype, \'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva\', _clearGetShadowRGBACache);\nShape.prototype.on.call(Shape.prototype, \'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva\', _clearFillPatternCache);\nShape.prototype.on.call(Shape.prototype, \'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva\', _clearLinearGradientCache);\nShape.prototype.on.call(Shape.prototype, \'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva\', _clearRadialGradientCache);\nFactory.addGetterSetter(Shape, \'stroke\', undefined, getStringOrGradientValidator());\nFactory.addGetterSetter(Shape, \'strokeWidth\', 2, getNumberValidator());\nFactory.addGetterSetter(Shape, \'fillAfterStrokeEnabled\', false);\nFactory.addGetterSetter(Shape, \'hitStrokeWidth\', \'auto\', getNumberOrAutoValidator());\nFactory.addGetterSetter(Shape, \'strokeHitEnabled\', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, \'perfectDrawEnabled\', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, \'shadowForStrokeEnabled\', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, \'lineJoin\');\nFactory.addGetterSetter(Shape, \'lineCap\');\nFactory.addGetterSetter(Shape, \'sceneFunc\');\nFactory.addGetterSetter(Shape, \'hitFunc\');\nFactory.addGetterSetter(Shape, \'dash\');\nFactory.addGetterSetter(Shape, \'dashOffset\', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, \'shadowColor\', undefined, getStringValidator());\nFactory.addGetterSetter(Shape, \'shadowBlur\', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, \'shadowOpacity\', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, \'shadowOffset\', [\'x\', \'y\']);\nFactory.addGetterSetter(Shape, \'shadowOffsetX\', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, \'shadowOffsetY\', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, \'fillPatternImage\');\nFactory.addGetterSetter(Shape, \'fill\', undefined, getStringOrGradientValidator());\nFactory.addGetterSetter(Shape, \'fillPatternX\', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, \'fillPatternY\', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, \'fillLinearGradientColorStops\');\nFactory.addGetterSetter(Shape, \'strokeLinearGradientColorStops\');\nFactory.addGetterSetter(Shape, \'fillRadialGradientStartRadius\', 0);\nFactory.addGetterSetter(Shape, \'fillRadialGradientEndRadius\', 0);\nFactory.addGetterSetter(Shape, \'fillRadialGradientColorStops\');\nFactory.addGetterSetter(Shape, \'fillPatternRepeat\', \'repeat\');\nFactory.addGetterSetter(Shape, \'fillEnabled\', true);\nFactory.addGetterSetter(Shape, \'strokeEnabled\', true);\nFactory.addGetterSetter(Shape, \'shadowEnabled\', true);\nFactory.addGetterSetter(Shape, \'dashEnabled\', true);\nFactory.addGetterSetter(Shape, \'strokeScaleEnabled\', true);\nFactory.addGetterSetter(Shape, \'fillPriority\', \'color\');\nFactory.addComponentsGetterSetter(Shape, \'fillPatternOffset\', [\'x\', \'y\']);\nFactory.addGetterSetter(Shape, \'fillPatternOffsetX\', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, \'fillPatternOffsetY\', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, \'fillPatternScale\', [\'x\', \'y\']);\nFactory.addGetterSetter(Shape, \'fillPatternScaleX\', 1, getNumberValidator());\nFactory.addGetterSetter(Shape, \'fillPatternScaleY\', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, \'fillLinearGradientStartPoint\', [\n    \'x\',\n    \'y\',\n]);\nFactory.addComponentsGetterSetter(Shape, \'strokeLinearGradientStartPoint\', [\n    \'x\',\n    \'y\',\n]);\nFactory.addGetterSetter(Shape, \'fillLinearGradientStartPointX\', 0);\nFactory.addGetterSetter(Shape, \'strokeLinearGradientStartPointX\', 0);\nFactory.addGetterSetter(Shape, \'fillLinearGradientStartPointY\', 0);\nFactory.addGetterSetter(Shape, \'strokeLinearGradientStartPointY\', 0);\nFactory.addComponentsGetterSetter(Shape, \'fillLinearGradientEndPoint\', [\n    \'x\',\n    \'y\',\n]);\nFactory.addComponentsGetterSetter(Shape, \'strokeLinearGradientEndPoint\', [\n    \'x\',\n    \'y\',\n]);\nFactory.addGetterSetter(Shape, \'fillLinearGradientEndPointX\', 0);\nFactory.addGetterSetter(Shape, \'strokeLinearGradientEndPointX\', 0);\nFactory.addGetterSetter(Shape, \'fillLinearGradientEndPointY\', 0);\nFactory.addGetterSetter(Shape, \'strokeLinearGradientEndPointY\', 0);\nFactory.addComponentsGetterSetter(Shape, \'fillRadialGradientStartPoint\', [\n    \'x\',\n    \'y\',\n]);\nFactory.addGetterSetter(Shape, \'fillRadialGradientStartPointX\', 0);\nFactory.addGetterSetter(Shape, \'fillRadialGradientStartPointY\', 0);\nFactory.addComponentsGetterSetter(Shape, \'fillRadialGradientEndPoint\', [\n    \'x\',\n    \'y\',\n]);\nFactory.addGetterSetter(Shape, \'fillRadialGradientEndPointX\', 0);\nFactory.addGetterSetter(Shape, \'fillRadialGradientEndPointY\', 0);\nFactory.addGetterSetter(Shape, \'fillPatternRotation\', 0);\nFactory.backCompat(Shape, {\n    dashArray: \'dash\',\n    getDashArray: \'getDash\',\n    setDashArray: \'getDash\',\n    drawFunc: \'sceneFunc\',\n    getDrawFunc: \'getSceneFunc\',\n    setDrawFunc: \'setSceneFunc\',\n    drawHitFunc: \'hitFunc\',\n    getDrawHitFunc: \'getHitFunc\',\n    setDrawHitFunc: \'setHitFunc\',\n});\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Layer.js\n\n\n\n\n\n\n\n\nvar Layer_HASH = \'#\', BEFORE_DRAW = \'beforeDraw\', DRAW = \'draw\', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nclass Layer extends Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new SceneCanvas();\n        this.hitCanvas = new HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on(\'visibleChange.konva\', this._checkVisibility);\n        this._checkVisibility();\n        this.on(\'imageSmoothingEnabledChange.konva\', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util_Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== \'Group\' && type !== \'Shape\') {\n            Util_Util["throw"](\'You may only add groups and shapes to a layer.\');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = \'block\';\n        }\n        else {\n            this.canvas._canvas.style.display = \'none\';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util_Util.warn(\'Can not change width of layer. Use "stage.width(value)" function instead.\');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util_Util.warn(\'Can not change height of layer. Use "stage.height(value)" function instead.\');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util_Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util_Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = shapes[Layer_HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util_Util.warn(\'hitGraphEnabled method is deprecated. Please use layer.listening() instead.\');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util_Util.warn(\'hitGraphEnabled method is deprecated. Please use layer.listening() instead.\');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent[\'content\']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n}\nLayer.prototype.nodeType = \'Layer\';\n_registerNode(Layer);\nFactory.addGetterSetter(Layer, \'imageSmoothingEnabled\', true);\nFactory.addGetterSetter(Layer, \'clearBeforeDraw\', true);\nFactory.addGetterSetter(Layer, \'hitGraphEnabled\', true, getBooleanValidator());\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/FastLayer.js\n\n\n\nclass FastLayer extends Layer {\n    constructor(attrs) {\n        super(attrs);\n        this.listening(false);\n        Util_Util.warn(\'Konva.Fast layer is deprecated. Please use "new Konva.Layer({ listening: false })" instead.\');\n    }\n}\nFastLayer.prototype.nodeType = \'FastLayer\';\n_registerNode(FastLayer);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Group.js\n\n\n\nclass Group extends Container {\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== \'Group\' && type !== \'Shape\') {\n            Util_Util["throw"](\'You may only add groups and shapes to groups.\');\n        }\n    }\n}\nGroup.prototype.nodeType = \'Group\';\n_registerNode(Group);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Animation.js\n\n\nvar now = (function () {\n    if (glob.performance && glob.performance.now) {\n        return function () {\n            return glob.performance.now();\n        };\n    }\n    return function () {\n        return new Date().getTime();\n    };\n})();\nclass Animation {\n    constructor(func, layers) {\n        this.id = Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now(),\n            frameRate: 0,\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        var lays = [];\n        if (!layers) {\n            lays = [];\n        }\n        else if (layers.length > 0) {\n            lays = layers;\n        }\n        else {\n            lays = [layers];\n        }\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        var layers = this.layers, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            if (layers[n]._id === layer._id) {\n                return false;\n            }\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        var a = Animation, animations = a.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === this.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = now();\n        Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        var id = anim.id, animations = this.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    }\n    static _runFrames() {\n        var layerHash = {}, animations = this.animations, anim, layers, func, n, i, layersLen, layer, key, needRedraw;\n        for (n = 0; n < animations.length; n++) {\n            anim = animations[n];\n            layers = anim.layers;\n            func = anim.func;\n            anim._updateFrameObject(now());\n            layersLen = layers.length;\n            if (func) {\n                needRedraw = func.call(anim, anim.frame) !== false;\n            }\n            else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (i = 0; i < layersLen; i++) {\n                layer = layers[i];\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n        for (key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        var Anim = Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            Util_Util.requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            Util_Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Tween.js\n\n\n\n\nvar blacklist = {\n    node: 1,\n    duration: 1,\n    easing: 1,\n    onFinish: 1,\n    yoyo: 1,\n}, PAUSED = 1, PLAYING = 2, REVERSING = 3, Tween_idCounter = 0, colorAttrs = [\'fill\', \'stroke\', \'shadowColor\'];\nclass TweenEngine {\n    constructor(prop, propFunc, func, begin, finish, duration, yoyo) {\n        this.prop = prop;\n        this.propFunc = propFunc;\n        this.begin = begin;\n        this._pos = begin;\n        this.duration = duration;\n        this._change = 0;\n        this.prevPos = 0;\n        this.yoyo = yoyo;\n        this._time = 0;\n        this._position = 0;\n        this._startTime = 0;\n        this._finish = 0;\n        this.func = func;\n        this._change = finish - this.begin;\n        this.pause();\n    }\n    fire(str) {\n        var handler = this[str];\n        if (handler) {\n            handler();\n        }\n    }\n    setTime(t) {\n        if (t > this.duration) {\n            if (this.yoyo) {\n                this._time = this.duration;\n                this.reverse();\n            }\n            else {\n                this.finish();\n            }\n        }\n        else if (t < 0) {\n            if (this.yoyo) {\n                this._time = 0;\n                this.play();\n            }\n            else {\n                this.reset();\n            }\n        }\n        else {\n            this._time = t;\n            this.update();\n        }\n    }\n    getTime() {\n        return this._time;\n    }\n    setPosition(p) {\n        this.prevPos = this._pos;\n        this.propFunc(p);\n        this._pos = p;\n    }\n    getPosition(t) {\n        if (t === undefined) {\n            t = this._time;\n        }\n        return this.func(t, this.begin, this._change, this.duration);\n    }\n    play() {\n        this.state = PLAYING;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire(\'onPlay\');\n    }\n    reverse() {\n        this.state = REVERSING;\n        this._time = this.duration - this._time;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire(\'onReverse\');\n    }\n    seek(t) {\n        this.pause();\n        this._time = t;\n        this.update();\n        this.fire(\'onSeek\');\n    }\n    reset() {\n        this.pause();\n        this._time = 0;\n        this.update();\n        this.fire(\'onReset\');\n    }\n    finish() {\n        this.pause();\n        this._time = this.duration;\n        this.update();\n        this.fire(\'onFinish\');\n    }\n    update() {\n        this.setPosition(this.getPosition(this._time));\n        this.fire(\'onUpdate\');\n    }\n    onEnterFrame() {\n        var t = this.getTimer() - this._startTime;\n        if (this.state === PLAYING) {\n            this.setTime(t);\n        }\n        else if (this.state === REVERSING) {\n            this.setTime(this.duration - t);\n        }\n    }\n    pause() {\n        this.state = PAUSED;\n        this.fire(\'onPause\');\n    }\n    getTimer() {\n        return new Date().getTime();\n    }\n}\nclass Tween {\n    constructor(config) {\n        var that = this, node = config.node, nodeId = node._id, duration, easing = config.easing || Easings.Linear, yoyo = !!config.yoyo, key;\n        if (typeof config.duration === \'undefined\') {\n            duration = 0.3;\n        }\n        else if (config.duration === 0) {\n            duration = 0.001;\n        }\n        else {\n            duration = config.duration;\n        }\n        this.node = node;\n        this._id = Tween_idCounter++;\n        var layers = node.getLayer() ||\n            (node instanceof Global_Konva.Stage ? node.getLayers() : null);\n        if (!layers) {\n            Util_Util.error(\'Tween constructor have `node` that is not in a layer. Please add node into layer first.\');\n        }\n        this.anim = new Animation(function () {\n            that.tween.onEnterFrame();\n        }, layers);\n        this.tween = new TweenEngine(key, function (i) {\n            that._tweenFunc(i);\n        }, easing, 0, 1, duration * 1000, yoyo);\n        this._addListeners();\n        if (!Tween.attrs[nodeId]) {\n            Tween.attrs[nodeId] = {};\n        }\n        if (!Tween.attrs[nodeId][this._id]) {\n            Tween.attrs[nodeId][this._id] = {};\n        }\n        if (!Tween.tweens[nodeId]) {\n            Tween.tweens[nodeId] = {};\n        }\n        for (key in config) {\n            if (blacklist[key] === undefined) {\n                this._addAttr(key, config[key]);\n            }\n        }\n        this.reset();\n        this.onFinish = config.onFinish;\n        this.onReset = config.onReset;\n        this.onUpdate = config.onUpdate;\n    }\n    _addAttr(key, end) {\n        var node = this.node, nodeId = node._id, start, diff, tweenId, n, len, trueEnd, trueStart, endRGBA;\n        tweenId = Tween.tweens[nodeId][key];\n        if (tweenId) {\n            delete Tween.attrs[nodeId][tweenId][key];\n        }\n        start = node.getAttr(key);\n        if (Util_Util._isArray(end)) {\n            diff = [];\n            len = Math.max(end.length, start.length);\n            if (key === \'points\' && end.length !== start.length) {\n                if (end.length > start.length) {\n                    trueStart = start;\n                    start = Util_Util._prepareArrayForTween(start, end, node.closed());\n                }\n                else {\n                    trueEnd = end;\n                    end = Util_Util._prepareArrayForTween(end, start, node.closed());\n                }\n            }\n            if (key.indexOf(\'fill\') === 0) {\n                for (n = 0; n < len; n++) {\n                    if (n % 2 === 0) {\n                        diff.push(end[n] - start[n]);\n                    }\n                    else {\n                        var startRGBA = Util_Util.colorToRGBA(start[n]);\n                        endRGBA = Util_Util.colorToRGBA(end[n]);\n                        start[n] = startRGBA;\n                        diff.push({\n                            r: endRGBA.r - startRGBA.r,\n                            g: endRGBA.g - startRGBA.g,\n                            b: endRGBA.b - startRGBA.b,\n                            a: endRGBA.a - startRGBA.a,\n                        });\n                    }\n                }\n            }\n            else {\n                for (n = 0; n < len; n++) {\n                    diff.push(end[n] - start[n]);\n                }\n            }\n        }\n        else if (colorAttrs.indexOf(key) !== -1) {\n            start = Util_Util.colorToRGBA(start);\n            endRGBA = Util_Util.colorToRGBA(end);\n            diff = {\n                r: endRGBA.r - start.r,\n                g: endRGBA.g - start.g,\n                b: endRGBA.b - start.b,\n                a: endRGBA.a - start.a,\n            };\n        }\n        else {\n            diff = end - start;\n        }\n        Tween.attrs[nodeId][this._id][key] = {\n            start: start,\n            diff: diff,\n            end: end,\n            trueEnd: trueEnd,\n            trueStart: trueStart,\n        };\n        Tween.tweens[nodeId][key] = this._id;\n    }\n    _tweenFunc(i) {\n        var node = this.node, attrs = Tween.attrs[node._id][this._id], key, attr, start, diff, newVal, n, len, end;\n        for (key in attrs) {\n            attr = attrs[key];\n            start = attr.start;\n            diff = attr.diff;\n            end = attr.end;\n            if (Util_Util._isArray(start)) {\n                newVal = [];\n                len = Math.max(start.length, end.length);\n                if (key.indexOf(\'fill\') === 0) {\n                    for (n = 0; n < len; n++) {\n                        if (n % 2 === 0) {\n                            newVal.push((start[n] || 0) + diff[n] * i);\n                        }\n                        else {\n                            newVal.push(\'rgba(\' +\n                                Math.round(start[n].r + diff[n].r * i) +\n                                \',\' +\n                                Math.round(start[n].g + diff[n].g * i) +\n                                \',\' +\n                                Math.round(start[n].b + diff[n].b * i) +\n                                \',\' +\n                                (start[n].a + diff[n].a * i) +\n                                \')\');\n                        }\n                    }\n                }\n                else {\n                    for (n = 0; n < len; n++) {\n                        newVal.push((start[n] || 0) + diff[n] * i);\n                    }\n                }\n            }\n            else if (colorAttrs.indexOf(key) !== -1) {\n                newVal =\n                    \'rgba(\' +\n                        Math.round(start.r + diff.r * i) +\n                        \',\' +\n                        Math.round(start.g + diff.g * i) +\n                        \',\' +\n                        Math.round(start.b + diff.b * i) +\n                        \',\' +\n                        (start.a + diff.a * i) +\n                        \')\';\n            }\n            else {\n                newVal = start + diff * i;\n            }\n            node.setAttr(key, newVal);\n        }\n    }\n    _addListeners() {\n        this.tween.onPlay = () => {\n            this.anim.start();\n        };\n        this.tween.onReverse = () => {\n            this.anim.start();\n        };\n        this.tween.onPause = () => {\n            this.anim.stop();\n        };\n        this.tween.onFinish = () => {\n            var node = this.node;\n            var attrs = Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueEnd) {\n                node.setAttr(\'points\', attrs.points.trueEnd);\n            }\n            if (this.onFinish) {\n                this.onFinish.call(this);\n            }\n        };\n        this.tween.onReset = () => {\n            var node = this.node;\n            var attrs = Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueStart) {\n                node.points(attrs.points.trueStart);\n            }\n            if (this.onReset) {\n                this.onReset();\n            }\n        };\n        this.tween.onUpdate = () => {\n            if (this.onUpdate) {\n                this.onUpdate.call(this);\n            }\n        };\n    }\n    play() {\n        this.tween.play();\n        return this;\n    }\n    reverse() {\n        this.tween.reverse();\n        return this;\n    }\n    reset() {\n        this.tween.reset();\n        return this;\n    }\n    seek(t) {\n        this.tween.seek(t * 1000);\n        return this;\n    }\n    pause() {\n        this.tween.pause();\n        return this;\n    }\n    finish() {\n        this.tween.finish();\n        return this;\n    }\n    destroy() {\n        var nodeId = this.node._id, thisId = this._id, attrs = Tween.tweens[nodeId], key;\n        this.pause();\n        for (key in attrs) {\n            delete Tween.tweens[nodeId][key];\n        }\n        delete Tween.attrs[nodeId][thisId];\n    }\n}\nTween.attrs = {};\nTween.tweens = {};\nNode.prototype.to = function (params) {\n    var onFinish = params.onFinish;\n    params.node = this;\n    params.onFinish = function () {\n        this.destroy();\n        if (onFinish) {\n            onFinish();\n        }\n    };\n    var tween = new Tween(params);\n    tween.play();\n};\nconst Easings = {\n    BackEaseIn(t, b, c, d) {\n        var s = 1.70158;\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    BackEaseOut(t, b, c, d) {\n        var s = 1.70158;\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    BackEaseInOut(t, b, c, d) {\n        var s = 1.70158;\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n        }\n        return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    },\n    ElasticEaseIn(t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d) === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * 0.3;\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        return (-(a *\n            Math.pow(2, 10 * (t -= 1)) *\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b);\n    },\n    ElasticEaseOut(t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d) === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * 0.3;\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        return (a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) +\n            c +\n            b);\n    },\n    ElasticEaseInOut(t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d / 2) === 2) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * (0.3 * 1.5);\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        if (t < 1) {\n            return (-0.5 *\n                (a *\n                    Math.pow(2, 10 * (t -= 1)) *\n                    Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n                b);\n        }\n        return (a *\n            Math.pow(2, -10 * (t -= 1)) *\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n            0.5 +\n            c +\n            b);\n    },\n    BounceEaseOut(t, b, c, d) {\n        if ((t /= d) < 1 / 2.75) {\n            return c * (7.5625 * t * t) + b;\n        }\n        else if (t < 2 / 2.75) {\n            return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n        }\n        else if (t < 2.5 / 2.75) {\n            return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n        }\n        else {\n            return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n        }\n    },\n    BounceEaseIn(t, b, c, d) {\n        return c - Easings.BounceEaseOut(d - t, 0, c, d) + b;\n    },\n    BounceEaseInOut(t, b, c, d) {\n        if (t < d / 2) {\n            return Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n        }\n        else {\n            return Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n        }\n    },\n    EaseIn(t, b, c, d) {\n        return c * (t /= d) * t + b;\n    },\n    EaseOut(t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n    },\n    EaseInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * t * t + b;\n        }\n        return (-c / 2) * (--t * (t - 2) - 1) + b;\n    },\n    StrongEaseIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n    },\n    StrongEaseOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    StrongEaseInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * t * t * t * t * t + b;\n        }\n        return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\n    },\n    Linear(t, b, c, d) {\n        return (c * t) / d + b;\n    },\n};\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/_CoreInternals.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst _CoreInternals_Konva = Util_Util._assign(Global_Konva, {\n    Util: Util_Util,\n    Transform: Transform,\n    Node: Node,\n    Container: Container,\n    Stage: Stage,\n    stages: stages,\n    Layer: Layer,\n    FastLayer: FastLayer,\n    Group: Group,\n    DD: DD,\n    Shape: Shape,\n    shapes: shapes,\n    Animation: Animation,\n    Tween: Tween,\n    Easings: Easings,\n    Context: Context,\n    Canvas: Canvas,\n});\n/* harmony default export */ const _CoreInternals = ((/* unused pure expression or super */ null && (_CoreInternals_Konva)));\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Arc.js\n\n\n\n\n\nclass Arc extends Shape {\n    _sceneFunc(context) {\n        var angle = Global_Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = Global_Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), 3 * Math.PI / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: Math.round(boundLeft),\n            y: Math.round(clockwise ? -1 * boundBottom : boundTop),\n            width: Math.round(boundRight - boundLeft),\n            height: Math.round(boundBottom - boundTop)\n        };\n    }\n}\nArc.prototype._centroid = true;\nArc.prototype.className = \'Arc\';\nArc.prototype._attrsAffectingSize = [\'innerRadius\', \'outerRadius\'];\n_registerNode(Arc);\nFactory.addGetterSetter(Arc, \'innerRadius\', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, \'outerRadius\', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, \'angle\', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, \'clockwise\', false, getBooleanValidator());\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Line.js\n\n\n\n\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n    var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\n    return [p1x, p1y, p2x, p2y];\n}\nfunction expandPoints(p, tension) {\n    var len = p.length, allPoints = [], n, cp;\n    for (n = 2; n < len - 2; n += 2) {\n        cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n        if (isNaN(cp[0])) {\n            continue;\n        }\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n    }\n    return allPoints;\n}\nclass Line extends Shape {\n    constructor(config) {\n        super(config);\n        this.on(\'pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva\', function () {\n            this._clearCache(\'tensionPoints\');\n        });\n    }\n    _sceneFunc(context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    }\n    getTensionPoints() {\n        return this._getCache(\'tensionPoints\', this._getTensionPoints);\n    }\n    _getTensionPoints() {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return expandPoints(this.points(), this.tension());\n        }\n    }\n    _getTensionPointsClosed() {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1],\n        ]);\n        return tp;\n    }\n    getWidth() {\n        return this.getSelfRect().width;\n    }\n    getHeight() {\n        return this.getSelfRect().height;\n    }\n    getSelfRect() {\n        var points = this.points();\n        if (points.length < 4) {\n            return {\n                x: points[0] || 0,\n                y: points[1] || 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (this.tension() !== 0) {\n            points = [\n                points[0],\n                points[1],\n                ...this._getTensionPoints(),\n                points[points.length - 2],\n                points[points.length - 1],\n            ];\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n}\nLine.prototype.className = \'Line\';\nLine.prototype._attrsAffectingSize = [\'points\', \'bezier\', \'tension\'];\n_registerNode(Line);\nFactory.addGetterSetter(Line, \'closed\', false);\nFactory.addGetterSetter(Line, \'bezier\', false);\nFactory.addGetterSetter(Line, \'tension\', 0, getNumberValidator());\nFactory.addGetterSetter(Line, \'points\', [], getNumberArrayValidator());\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Path.js\n\n\n\nclass Path extends Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = 0;\n        for (var i = 0; i < this.dataArray.length; ++i) {\n            this.pathLength += this.dataArray[i].pathLength;\n        }\n        this.on(\'dataChange.konva\', function () {\n            this.dataArray = Path.parsePathData(this.data());\n            this.pathLength = 0;\n            for (var i = 0; i < this.dataArray.length; ++i) {\n                this.pathLength += this.dataArray[i].pathLength;\n            }\n        });\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case \'L\':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case \'M\':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case \'C\':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case \'Q\':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case \'A\':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case \'z\':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === \'A\') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === \'C\') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: Math.round(minX),\n            y: Math.round(minY),\n            width: Math.round(maxX - minX),\n            height: Math.round(maxY - minY),\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        var point, i = 0, ii = this.dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > this.dataArray[i].pathLength) {\n            length -= this.dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = this.dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        if (length < 0.01) {\n            point = this.dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        var cp = this.dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case \'L\':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case \'C\':\n                return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case \'Q\':\n                return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case \'A\':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) {\n            fromX = P1x;\n        }\n        if (fromY === undefined) {\n            fromY = P1y;\n        }\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\n        if (P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise,\n            };\n        }\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise,\n            };\n        }\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\n            if (P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise,\n            };\n        }\n        return pt;\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            \'m\',\n            \'M\',\n            \'l\',\n            \'L\',\n            \'v\',\n            \'V\',\n            \'h\',\n            \'H\',\n            \'z\',\n            \'Z\',\n            \'c\',\n            \'C\',\n            \'q\',\n            \'Q\',\n            \'t\',\n            \'T\',\n            \'s\',\n            \'S\',\n            \'a\',\n            \'A\',\n        ];\n        cs = cs.replace(new RegExp(\' \', \'g\'), \',\');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], \'g\'), \'|\' + cc[n]);\n        }\n        var arr = cs.split(\'|\');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === \'00\') {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case \'l\':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \'L\';\n                        points.push(cpx, cpy);\n                        break;\n                    case \'L\':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case \'m\':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = \'M\';\n                        if (ca.length > 2 && ca[ca.length - 1].command === \'z\') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === \'M\') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = \'l\';\n                        break;\n                    case \'M\':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = \'M\';\n                        points.push(cpx, cpy);\n                        c = \'L\';\n                        break;\n                    case \'h\':\n                        cpx += p.shift();\n                        cmd = \'L\';\n                        points.push(cpx, cpy);\n                        break;\n                    case \'H\':\n                        cpx = p.shift();\n                        cmd = \'L\';\n                        points.push(cpx, cpy);\n                        break;\n                    case \'v\':\n                        cpy += p.shift();\n                        cmd = \'L\';\n                        points.push(cpx, cpy);\n                        break;\n                    case \'V\':\n                        cpy = p.shift();\n                        cmd = \'L\';\n                        points.push(cpx, cpy);\n                        break;\n                    case \'C\':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case \'c\':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \'C\';\n                        points.push(cpx, cpy);\n                        break;\n                    case \'S\':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === \'C\') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = \'C\';\n                        points.push(cpx, cpy);\n                        break;\n                    case \'s\':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === \'C\') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \'C\';\n                        points.push(cpx, cpy);\n                        break;\n                    case \'Q\':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case \'q\':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \'Q\';\n                        points.push(cpx, cpy);\n                        break;\n                    case \'T\':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === \'Q\') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = \'Q\';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case \'t\':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === \'Q\') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \'Q\';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case \'A\':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = \'A\';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case \'a\':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \'A\';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === \'z\' || c === \'Z\') {\n                ca.push({\n                    command: \'z\',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case \'L\':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case \'C\':\n                len = 0.0;\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case \'Q\':\n                len = 0.0;\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case \'A\':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nPath.prototype.className = \'Path\';\nPath.prototype._attrsAffectingSize = [\'data\'];\n_registerNode(Path);\nFactory.addGetterSetter(Path, \'data\');\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Arrow.js\n\n\n\n\n\nclass Arrow extends Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        var PI2 = Math.PI * 2;\n        var points = this.points();\n        var tp = points;\n        var fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) {\n            tp = this.getTensionPoints();\n        }\n        var length = this.pointerLength();\n        var n = points.length;\n        var dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1],\n            ];\n            const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], \'C\', lp);\n            const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        }\n        else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        var width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            }\n            else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n    }\n    __fillStroke(ctx) {\n        var isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = true;\n        }\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2,\n        };\n    }\n}\nArrow.prototype.className = \'Arrow\';\n_registerNode(Arrow);\nFactory.addGetterSetter(Arrow, \'pointerLength\', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, \'pointerWidth\', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, \'pointerAtBeginning\', false);\nFactory.addGetterSetter(Arrow, \'pointerAtEnding\', true);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Circle.js\n\n\n\n\nclass Circle extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        if (this.radius() !== width / 2) {\n            this.radius(width / 2);\n        }\n    }\n    setHeight(height) {\n        if (this.radius() !== height / 2) {\n            this.radius(height / 2);\n        }\n    }\n}\nCircle.prototype._centroid = true;\nCircle.prototype.className = \'Circle\';\nCircle.prototype._attrsAffectingSize = [\'radius\'];\n_registerNode(Circle);\nFactory.addGetterSetter(Circle, \'radius\', 0, getNumberValidator());\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Ellipse.js\n\n\n\n\nclass Ellipse extends Shape {\n    _sceneFunc(context) {\n        var rx = this.radiusX(), ry = this.radiusY();\n        context.beginPath();\n        context.save();\n        if (rx !== ry) {\n            context.scale(1, ry / rx);\n        }\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\n        context.restore();\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radiusX() * 2;\n    }\n    getHeight() {\n        return this.radiusY() * 2;\n    }\n    setWidth(width) {\n        this.radiusX(width / 2);\n    }\n    setHeight(height) {\n        this.radiusY(height / 2);\n    }\n}\nEllipse.prototype.className = \'Ellipse\';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = [\'radiusX\', \'radiusY\'];\n_registerNode(Ellipse);\nFactory.addComponentsGetterSetter(Ellipse, \'radius\', [\'x\', \'y\']);\nFactory.addGetterSetter(Ellipse, \'radiusX\', 0, getNumberValidator());\nFactory.addGetterSetter(Ellipse, \'radiusY\', 0, getNumberValidator());\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Image.js\n\n\n\n\n\nclass Image_Image extends Shape {\n    constructor(attrs) {\n        super(attrs);\n        this.on(\'imageChange.konva\', () => {\n            this._setImageLoad();\n        });\n        this._setImageLoad();\n    }\n    _setImageLoad() {\n        const image = this.image();\n        if (image && image.complete) {\n            return;\n        }\n        if (image && image.readyState === 4) {\n            return;\n        }\n        if (image && image[\'addEventListener\']) {\n            image[\'addEventListener\'](\'load\', () => {\n                this._requestDraw();\n            });\n        }\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _sceneFunc(context) {\n        const width = this.getWidth();\n        const height = this.getHeight();\n        const image = this.attrs.image;\n        let params;\n        if (image) {\n            const cropWidth = this.attrs.cropWidth;\n            const cropHeight = this.attrs.cropHeight;\n            if (cropWidth && cropHeight) {\n                params = [\n                    image,\n                    this.cropX(),\n                    this.cropY(),\n                    cropWidth,\n                    cropHeight,\n                    0,\n                    0,\n                    width,\n                    height,\n                ];\n            }\n            else {\n                params = [image, 0, 0, width, height];\n            }\n        }\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            context.drawImage.apply(context, params);\n        }\n    }\n    _hitFunc(context) {\n        var width = this.width(), height = this.height();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        var _a, _b;\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n    }\n    getHeight() {\n        var _a, _b;\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n    }\n    static fromURL(url, callback, onError = null) {\n        var img = Util_Util.createImageElement();\n        img.onload = function () {\n            var image = new Image_Image({\n                image: img,\n            });\n            callback(image);\n        };\n        img.onerror = onError;\n        img.crossOrigin = \'Anonymous\';\n        img.src = url;\n    }\n}\nImage_Image.prototype.className = \'Image\';\n_registerNode(Image_Image);\nFactory.addGetterSetter(Image_Image, \'image\');\nFactory.addComponentsGetterSetter(Image_Image, \'crop\', [\'x\', \'y\', \'width\', \'height\']);\nFactory.addGetterSetter(Image_Image, \'cropX\', 0, getNumberValidator());\nFactory.addGetterSetter(Image_Image, \'cropY\', 0, getNumberValidator());\nFactory.addGetterSetter(Image_Image, \'cropWidth\', 0, getNumberValidator());\nFactory.addGetterSetter(Image_Image, \'cropHeight\', 0, getNumberValidator());\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Label.js\n\n\n\n\n\nvar ATTR_CHANGE_LIST = [\n    \'fontFamily\',\n    \'fontSize\',\n    \'fontStyle\',\n    \'padding\',\n    \'lineHeight\',\n    \'text\',\n    \'width\',\n    \'height\',\n], CHANGE_KONVA = \'Change.konva\', NONE = \'none\', UP = \'up\', RIGHT = \'right\', DOWN = \'down\', LEFT = \'left\', attrChangeListLen = ATTR_CHANGE_LIST.length;\nclass Label extends Group {\n    constructor(config) {\n        super(config);\n        this.on(\'add.konva\', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find(\'Text\')[0];\n    }\n    getTag() {\n        return this.find(\'Tag\')[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nLabel.prototype.className = \'Label\';\n_registerNode(Label);\nclass Tag extends Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === \'number\') {\n            topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nTag.prototype.className = \'Tag\';\n_registerNode(Tag);\nFactory.addGetterSetter(Tag, \'pointerDirection\', NONE);\nFactory.addGetterSetter(Tag, \'pointerWidth\', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, \'pointerHeight\', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, \'cornerRadius\', 0, getNumberOrArrayOfNumbersValidator(4));\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Rect.js\n\n\n\n\nclass Rect extends Shape {\n    _sceneFunc(context) {\n        var cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            let topLeft = 0;\n            let topRight = 0;\n            let bottomLeft = 0;\n            let bottomRight = 0;\n            if (typeof cornerRadius === \'number\') {\n                topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n            }\n            else {\n                topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n                topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n                bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n                bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n            }\n            context.moveTo(topLeft, 0);\n            context.lineTo(width - topRight, 0);\n            context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n            context.lineTo(width, height - bottomRight);\n            context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n            context.lineTo(bottomLeft, height);\n            context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n            context.lineTo(0, topLeft);\n            context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n}\nRect.prototype.className = \'Rect\';\n_registerNode(Rect);\nFactory.addGetterSetter(Rect, \'cornerRadius\', 0, getNumberOrArrayOfNumbersValidator(4));\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/RegularPolygon.js\n\n\n\n\nclass RegularPolygon extends Shape {\n    _sceneFunc(context) {\n        const points = this._getPoints();\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for (var n = 1; n < points.length; n++) {\n            context.lineTo(points[n].x, points[n].y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    _getPoints() {\n        const sides = this.attrs.sides;\n        const radius = this.attrs.radius || 0;\n        const points = [];\n        for (var n = 0; n < sides; n++) {\n            points.push({\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\n            });\n        }\n        return points;\n    }\n    getSelfRect() {\n        const points = this._getPoints();\n        var minX = points[0].x;\n        var maxX = points[0].y;\n        var minY = points[0].x;\n        var maxY = points[0].y;\n        points.forEach((point) => {\n            minX = Math.min(minX, point.x);\n            maxX = Math.max(maxX, point.x);\n            minY = Math.min(minY, point.y);\n            maxY = Math.max(maxY, point.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nRegularPolygon.prototype.className = \'RegularPolygon\';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = [\'radius\'];\n_registerNode(RegularPolygon);\nFactory.addGetterSetter(RegularPolygon, \'radius\', 0, getNumberValidator());\nFactory.addGetterSetter(RegularPolygon, \'sides\', 0, getNumberValidator());\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Ring.js\n\n\n\n\nvar PIx2 = Math.PI * 2;\nclass Ring extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.innerRadius(), 0, PIx2, false);\n        context.moveTo(this.outerRadius(), 0);\n        context.arc(0, 0, this.outerRadius(), PIx2, 0, true);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nRing.prototype.className = \'Ring\';\nRing.prototype._centroid = true;\nRing.prototype._attrsAffectingSize = [\'innerRadius\', \'outerRadius\'];\n_registerNode(Ring);\nFactory.addGetterSetter(Ring, \'innerRadius\', 0, getNumberValidator());\nFactory.addGetterSetter(Ring, \'outerRadius\', 0, getNumberValidator());\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Sprite.js\n\n\n\n\n\nclass Sprite extends Shape {\n    constructor(config) {\n        super(config);\n        this._updated = true;\n        this.anim = new Animation(() => {\n            var updated = this._updated;\n            this._updated = false;\n            return updated;\n        });\n        this.on(\'animationChange.konva\', function () {\n            this.frameIndex(0);\n        });\n        this.on(\'frameIndexChange.konva\', function () {\n            this._updated = true;\n        });\n        this.on(\'frameRateChange.konva\', function () {\n            if (!this.anim.isRunning()) {\n                return;\n            }\n            clearInterval(this.interval);\n            this._setInterval();\n        });\n    }\n    _sceneFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (offsets) {\n                var offset = offsets[anim], ix2 = index * 2;\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n            }\n            else {\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\n            }\n        }\n    }\n    _hitFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\n        context.beginPath();\n        if (offsets) {\n            var offset = offsets[anim];\n            var ix2 = index * 2;\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n        }\n        else {\n            context.rect(0, 0, width, height);\n        }\n        context.closePath();\n        context.fillShape(this);\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _setInterval() {\n        var that = this;\n        this.interval = setInterval(function () {\n            that._updateIndex();\n        }, 1000 / this.frameRate());\n    }\n    start() {\n        if (this.isRunning()) {\n            return;\n        }\n        var layer = this.getLayer();\n        this.anim.setLayers(layer);\n        this._setInterval();\n        this.anim.start();\n    }\n    stop() {\n        this.anim.stop();\n        clearInterval(this.interval);\n    }\n    isRunning() {\n        return this.anim.isRunning();\n    }\n    _updateIndex() {\n        var index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\n        if (index < len - 1) {\n            this.frameIndex(index + 1);\n        }\n        else {\n            this.frameIndex(0);\n        }\n    }\n}\nSprite.prototype.className = \'Sprite\';\n_registerNode(Sprite);\nFactory.addGetterSetter(Sprite, \'animation\');\nFactory.addGetterSetter(Sprite, \'animations\');\nFactory.addGetterSetter(Sprite, \'frameOffsets\');\nFactory.addGetterSetter(Sprite, \'image\');\nFactory.addGetterSetter(Sprite, \'frameIndex\', 0, getNumberValidator());\nFactory.addGetterSetter(Sprite, \'frameRate\', 17, getNumberValidator());\nFactory.backCompat(Sprite, {\n    index: \'frameIndex\',\n    getIndex: \'getFrameIndex\',\n    setIndex: \'setFrameIndex\',\n});\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Star.js\n\n\n\n\nclass Star extends Shape {\n    _sceneFunc(context) {\n        var innerRadius = this.innerRadius(), outerRadius = this.outerRadius(), numPoints = this.numPoints();\n        context.beginPath();\n        context.moveTo(0, 0 - outerRadius);\n        for (var n = 1; n < numPoints * 2; n++) {\n            var radius = n % 2 === 0 ? outerRadius : innerRadius;\n            var x = radius * Math.sin((n * Math.PI) / numPoints);\n            var y = -1 * radius * Math.cos((n * Math.PI) / numPoints);\n            context.lineTo(x, y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nStar.prototype.className = \'Star\';\nStar.prototype._centroid = true;\nStar.prototype._attrsAffectingSize = [\'innerRadius\', \'outerRadius\'];\n_registerNode(Star);\nFactory.addGetterSetter(Star, \'numPoints\', 5, getNumberValidator());\nFactory.addGetterSetter(Star, \'innerRadius\', 0, getNumberValidator());\nFactory.addGetterSetter(Star, \'outerRadius\', 0, getNumberValidator());\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Text.js\n\n\n\n\n\nfunction stringToArray(string) {\n    return Array.from(string);\n}\nvar AUTO = \'auto\', CENTER = \'center\', JUSTIFY = \'justify\', Text_CHANGE_KONVA = \'Change.konva\', CONTEXT_2D = \'2d\', DASH = \'-\', Text_LEFT = \'left\', TEXT = \'text\', TEXT_UPPER = \'Text\', TOP = \'top\', BOTTOM = \'bottom\', MIDDLE = \'middle\', NORMAL = \'normal\', PX_SPACE = \'px \', Text_SPACE = \' \', Text_RIGHT = \'right\', WORD = \'word\', CHAR = \'char\', Text_NONE = \'none\', ELLIPSIS = \'…\', Text_ATTR_CHANGE_LIST = [\n    \'fontFamily\',\n    \'fontSize\',\n    \'fontStyle\',\n    \'fontVariant\',\n    \'padding\',\n    \'align\',\n    \'verticalAlign\',\n    \'lineHeight\',\n    \'text\',\n    \'width\',\n    \'height\',\n    \'wrap\',\n    \'ellipsis\',\n    \'letterSpacing\',\n], Text_attrChangeListLen = Text_ATTR_CHANGE_LIST.length;\nfunction normalizeFontFamily(fontFamily) {\n    return fontFamily\n        .split(\',\')\n        .map((family) => {\n        family = family.trim();\n        const hasSpace = family.indexOf(\' \') >= 0;\n        const hasQuotes = family.indexOf(\'"\') >= 0 || family.indexOf("\'") >= 0;\n        if (hasSpace && !hasQuotes) {\n            family = `"${family}"`;\n        }\n        return family;\n    })\n        .join(\', \');\n}\nvar Text_dummyContext;\nfunction Text_getDummyContext() {\n    if (Text_dummyContext) {\n        return Text_dummyContext;\n    }\n    Text_dummyContext = Util_Util.createCanvasElement().getContext(CONTEXT_2D);\n    return Text_dummyContext;\n}\nfunction Text_fillFunc(context) {\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction Text_strokeFunc(context) {\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction checkDefaultFill(config) {\n    config = config || {};\n    if (!config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops &&\n        !config.fillPatternImage) {\n        config.fill = config.fill || \'black\';\n    }\n    return config;\n}\nclass Text extends Shape {\n    constructor(config) {\n        super(checkDefaultFill(config));\n        this._partialTextX = 0;\n        this._partialTextY = 0;\n        for (var n = 0; n < Text_attrChangeListLen; n++) {\n            this.on(Text_ATTR_CHANGE_LIST[n] + Text_CHANGE_KONVA, this._setTextData);\n        }\n        this._setTextData();\n    }\n    _sceneFunc(context) {\n        var textArr = this.textArr, textArrLen = textArr.length;\n        if (!this.text()) {\n            return;\n        }\n        var padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, verticalAlign = this.verticalAlign(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf(\'underline\') !== -1, shouldLineThrough = textDecoration.indexOf(\'line-through\') !== -1, n;\n        var translateY = 0;\n        var translateY = lineHeightPx / 2;\n        var lineTranslateX = 0;\n        var lineTranslateY = 0;\n        context.setAttr(\'font\', this._getContextFont());\n        context.setAttr(\'textBaseline\', MIDDLE);\n        context.setAttr(\'textAlign\', Text_LEFT);\n        if (verticalAlign === MIDDLE) {\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n        }\n        else if (verticalAlign === BOTTOM) {\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n        }\n        context.translate(padding, alignY + padding);\n        for (n = 0; n < textArrLen; n++) {\n            var lineTranslateX = 0;\n            var lineTranslateY = 0;\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = n !== textArrLen - 1, spacesNumber, oneWord, lineWidth;\n            context.save();\n            if (align === Text_RIGHT) {\n                lineTranslateX += totalWidth - width - padding * 2;\n            }\n            else if (align === CENTER) {\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\n            }\n            if (shouldUnderline) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\n                spacesNumber = text.split(\' \').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\n                context.lineWidth = fontSize / 15;\n                context.strokeStyle = fill;\n                context.stroke();\n                context.restore();\n            }\n            if (shouldLineThrough) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY);\n                spacesNumber = text.split(\' \').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\n                context.lineWidth = fontSize / 15;\n                context.strokeStyle = fill;\n                context.stroke();\n                context.restore();\n            }\n            if (letterSpacing !== 0 || align === JUSTIFY) {\n                spacesNumber = text.split(\' \').length - 1;\n                var array = stringToArray(text);\n                for (var li = 0; li < array.length; li++) {\n                    var letter = array[li];\n                    if (letter === \' \' && n !== textArrLen - 1 && align === JUSTIFY) {\n                        lineTranslateX += (totalWidth - padding * 2 - width) / spacesNumber;\n                    }\n                    this._partialTextX = lineTranslateX;\n                    this._partialTextY = translateY + lineTranslateY;\n                    this._partialText = letter;\n                    context.fillStrokeShape(this);\n                    lineTranslateX += this.measureSize(letter).width + letterSpacing;\n                }\n            }\n            else {\n                this._partialTextX = lineTranslateX;\n                this._partialTextY = translateY + lineTranslateY;\n                this._partialText = text;\n                context.fillStrokeShape(this);\n            }\n            context.restore();\n            if (textArrLen > 1) {\n                translateY += lineHeightPx;\n            }\n        }\n    }\n    _hitFunc(context) {\n        var width = this.getWidth(), height = this.getHeight();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    setText(text) {\n        var str = Util_Util._isString(text)\n            ? text\n            : text === null || text === undefined\n                ? \'\'\n                : text + \'\';\n        this._setAttr(TEXT, str);\n        return this;\n    }\n    getWidth() {\n        var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n    }\n    getHeight() {\n        var isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\n        return isAuto\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\n                this.padding() * 2\n            : this.attrs.height;\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util_Util.warn(\'text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.\');\n        return this.textHeight;\n    }\n    measureSize(text) {\n        var _context = Text_getDummyContext(), fontSize = this.fontSize(), metrics;\n        _context.save();\n        _context.font = this._getContextFont();\n        metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: fontSize,\n        };\n    }\n    _getContextFont() {\n        return (this.fontStyle() +\n            Text_SPACE +\n            this.fontVariant() +\n            Text_SPACE +\n            (this.fontSize() + PX_SPACE) +\n            normalizeFontFamily(this.fontFamily()));\n    }\n    _addTextLine(line) {\n        if (this.align() === JUSTIFY) {\n            line = line.trim();\n        }\n        var width = this._getTextWidth(line);\n        return this.textArr.push({ text: line, width: width });\n    }\n    _getTextWidth(text) {\n        var letterSpacing = this.letterSpacing();\n        var length = text.length;\n        return (Text_getDummyContext().measureText(text).width +\n            (length ? letterSpacing * (length - 1) : 0));\n    }\n    _setTextData() {\n        var lines = this.text().split(\'\\n\'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== Text_NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis();\n        this.textArr = [];\n        Text_getDummyContext().font = this._getContextFont();\n        var additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\n        for (var i = 0, max = lines.length; i < max; ++i) {\n            var line = lines[i];\n            var lineWidth = this._getTextWidth(line);\n            if (fixedWidth && lineWidth > maxWidth) {\n                while (line.length > 0) {\n                    var low = 0, high = line.length, match = \'\', matchWidth = 0;\n                    while (low < high) {\n                        var mid = (low + high) >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\n                        if (substrWidth <= maxWidth) {\n                            low = mid + 1;\n                            match = substr;\n                            matchWidth = substrWidth;\n                        }\n                        else {\n                            high = mid;\n                        }\n                    }\n                    if (match) {\n                        if (wrapAtWord) {\n                            var wrapIndex;\n                            var nextChar = line[match.length];\n                            var nextIsSpaceOrDash = nextChar === Text_SPACE || nextChar === DASH;\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                                wrapIndex = match.length;\n                            }\n                            else {\n                                wrapIndex =\n                                    Math.max(match.lastIndexOf(Text_SPACE), match.lastIndexOf(DASH)) +\n                                        1;\n                            }\n                            if (wrapIndex > 0) {\n                                low = wrapIndex;\n                                match = match.slice(0, low);\n                                matchWidth = this._getTextWidth(match);\n                            }\n                        }\n                        match = match.trimRight();\n                        this._addTextLine(match);\n                        textWidth = Math.max(textWidth, matchWidth);\n                        currentHeightPx += lineHeightPx;\n                        if (!shouldWrap ||\n                            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)) {\n                            var lastLine = this.textArr[this.textArr.length - 1];\n                            if (lastLine) {\n                                if (shouldAddEllipsis) {\n                                    var haveSpace = this._getTextWidth(lastLine.text + ELLIPSIS) < maxWidth;\n                                    if (!haveSpace) {\n                                        lastLine.text = lastLine.text.slice(0, lastLine.text.length - 3);\n                                    }\n                                    this.textArr.splice(this.textArr.length - 1, 1);\n                                    this._addTextLine(lastLine.text + ELLIPSIS);\n                                }\n                            }\n                            break;\n                        }\n                        line = line.slice(low);\n                        line = line.trimLeft();\n                        if (line.length > 0) {\n                            lineWidth = this._getTextWidth(line);\n                            if (lineWidth <= maxWidth) {\n                                this._addTextLine(line);\n                                currentHeightPx += lineHeightPx;\n                                textWidth = Math.max(textWidth, lineWidth);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                this._addTextLine(line);\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n            }\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n                break;\n            }\n        }\n        this.textHeight = fontSize;\n        this.textWidth = textWidth;\n    }\n    getStrokeScaleEnabled() {\n        return true;\n    }\n}\nText.prototype._fillFunc = Text_fillFunc;\nText.prototype._strokeFunc = Text_strokeFunc;\nText.prototype.className = TEXT_UPPER;\nText.prototype._attrsAffectingSize = [\n    \'text\',\n    \'fontSize\',\n    \'padding\',\n    \'wrap\',\n    \'lineHeight\',\n    \'letterSpacing\',\n];\n_registerNode(Text);\nFactory.overWriteSetter(Text, \'width\', getNumberOrAutoValidator());\nFactory.overWriteSetter(Text, \'height\', getNumberOrAutoValidator());\nFactory.addGetterSetter(Text, \'fontFamily\', \'Arial\');\nFactory.addGetterSetter(Text, \'fontSize\', 12, getNumberValidator());\nFactory.addGetterSetter(Text, \'fontStyle\', NORMAL);\nFactory.addGetterSetter(Text, \'fontVariant\', NORMAL);\nFactory.addGetterSetter(Text, \'padding\', 0, getNumberValidator());\nFactory.addGetterSetter(Text, \'align\', Text_LEFT);\nFactory.addGetterSetter(Text, \'verticalAlign\', TOP);\nFactory.addGetterSetter(Text, \'lineHeight\', 1, getNumberValidator());\nFactory.addGetterSetter(Text, \'wrap\', WORD);\nFactory.addGetterSetter(Text, \'ellipsis\', false, getBooleanValidator());\nFactory.addGetterSetter(Text, \'letterSpacing\', 0, getNumberValidator());\nFactory.addGetterSetter(Text, \'text\', \'\', getStringValidator());\nFactory.addGetterSetter(Text, \'textDecoration\', \'\');\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/TextPath.js\n\n\n\n\n\n\n\nvar TextPath_EMPTY_STRING = \'\', TextPath_NORMAL = \'normal\';\nfunction TextPath_fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n}\nfunction TextPath_strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n}\nclass TextPath extends Shape {\n    constructor(config) {\n        super(config);\n        this.dummyCanvas = Util_Util.createCanvasElement();\n        this.dataArray = [];\n        this.dataArray = Path.parsePathData(this.attrs.data);\n        this.on(\'dataChange.konva\', function () {\n            this.dataArray = Path.parsePathData(this.attrs.data);\n            this._setTextData();\n        });\n        this.on(\'textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva fontSizeChange.konva\', this._setTextData);\n        this._setTextData();\n    }\n    _sceneFunc(context) {\n        context.setAttr(\'font\', this._getContextFont());\n        context.setAttr(\'textBaseline\', this.textBaseline());\n        context.setAttr(\'textAlign\', \'left\');\n        context.save();\n        var textDecoration = this.textDecoration();\n        var fill = this.fill();\n        var fontSize = this.fontSize();\n        var glyphInfo = this.glyphInfo;\n        if (textDecoration === \'underline\') {\n            context.beginPath();\n        }\n        for (var i = 0; i < glyphInfo.length; i++) {\n            context.save();\n            var p0 = glyphInfo[i].p0;\n            context.translate(p0.x, p0.y);\n            context.rotate(glyphInfo[i].rotation);\n            this.partialText = glyphInfo[i].text;\n            context.fillStrokeShape(this);\n            if (textDecoration === \'underline\') {\n                if (i === 0) {\n                    context.moveTo(0, fontSize / 2 + 1);\n                }\n                context.lineTo(fontSize, fontSize / 2 + 1);\n            }\n            context.restore();\n        }\n        if (textDecoration === \'underline\') {\n            context.strokeStyle = fill;\n            context.lineWidth = fontSize / 20;\n            context.stroke();\n        }\n        context.restore();\n    }\n    _hitFunc(context) {\n        context.beginPath();\n        var glyphInfo = this.glyphInfo;\n        if (glyphInfo.length >= 1) {\n            var p0 = glyphInfo[0].p0;\n            context.moveTo(p0.x, p0.y);\n        }\n        for (var i = 0; i < glyphInfo.length; i++) {\n            var p1 = glyphInfo[i].p1;\n            context.lineTo(p1.x, p1.y);\n        }\n        context.setAttr(\'lineWidth\', this.fontSize());\n        context.setAttr(\'strokeStyle\', this.colorKey);\n        context.stroke();\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util_Util.warn(\'text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.\');\n        return this.textHeight;\n    }\n    setText(text) {\n        return Text.prototype.setText.call(this, text);\n    }\n    _getContextFont() {\n        return Text.prototype._getContextFont.call(this);\n    }\n    _getTextSize(text) {\n        var dummyCanvas = this.dummyCanvas;\n        var _context = dummyCanvas.getContext(\'2d\');\n        _context.save();\n        _context.font = this._getContextFont();\n        var metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: parseInt(this.attrs.fontSize, 10),\n        };\n    }\n    _setTextData() {\n        var that = this;\n        var size = this._getTextSize(this.attrs.text);\n        var letterSpacing = this.letterSpacing();\n        var align = this.align();\n        var kerningFunc = this.kerningFunc();\n        this.textWidth = size.width;\n        this.textHeight = size.height;\n        var textFullWidth = Math.max(this.textWidth + ((this.attrs.text || \'\').length - 1) * letterSpacing, 0);\n        this.glyphInfo = [];\n        var fullPathWidth = 0;\n        for (var l = 0; l < that.dataArray.length; l++) {\n            if (that.dataArray[l].pathLength > 0) {\n                fullPathWidth += that.dataArray[l].pathLength;\n            }\n        }\n        var offset = 0;\n        if (align === \'center\') {\n            offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);\n        }\n        if (align === \'right\') {\n            offset = Math.max(0, fullPathWidth - textFullWidth);\n        }\n        var charArr = stringToArray(this.text());\n        var spacesNumber = this.text().split(\' \').length - 1;\n        var p0, p1, pathCmd;\n        var pIndex = -1;\n        var currentT = 0;\n        var getNextPathSegment = function () {\n            currentT = 0;\n            var pathData = that.dataArray;\n            for (var j = pIndex + 1; j < pathData.length; j++) {\n                if (pathData[j].pathLength > 0) {\n                    pIndex = j;\n                    return pathData[j];\n                }\n                else if (pathData[j].command === \'M\') {\n                    p0 = {\n                        x: pathData[j].points[0],\n                        y: pathData[j].points[1],\n                    };\n                }\n            }\n            return {};\n        };\n        var findSegmentToFitCharacter = function (c) {\n            var glyphWidth = that._getTextSize(c).width + letterSpacing;\n            if (c === \' \' && align === \'justify\') {\n                glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n            }\n            var currLen = 0;\n            var attempts = 0;\n            p1 = undefined;\n            while (Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&\n                attempts < 20) {\n                attempts++;\n                var cumulativePathLength = currLen;\n                while (pathCmd === undefined) {\n                    pathCmd = getNextPathSegment();\n                    if (pathCmd &&\n                        cumulativePathLength + pathCmd.pathLength < glyphWidth) {\n                        cumulativePathLength += pathCmd.pathLength;\n                        pathCmd = undefined;\n                    }\n                }\n                if (pathCmd === {} || p0 === undefined) {\n                    return undefined;\n                }\n                var needNewSegment = false;\n                switch (pathCmd.command) {\n                    case \'L\':\n                        if (Path.getLineLength(p0.x, p0.y, pathCmd.points[0], pathCmd.points[1]) > glyphWidth) {\n                            p1 = Path.getPointOnLine(glyphWidth, p0.x, p0.y, pathCmd.points[0], pathCmd.points[1], p0.x, p0.y);\n                        }\n                        else {\n                            pathCmd = undefined;\n                        }\n                        break;\n                    case \'A\':\n                        var start = pathCmd.points[4];\n                        var dTheta = pathCmd.points[5];\n                        var end = pathCmd.points[4] + dTheta;\n                        if (currentT === 0) {\n                            currentT = start + 0.00000001;\n                        }\n                        else if (glyphWidth > currLen) {\n                            currentT += ((Math.PI / 180.0) * dTheta) / Math.abs(dTheta);\n                        }\n                        else {\n                            currentT -= ((Math.PI / 360.0) * dTheta) / Math.abs(dTheta);\n                        }\n                        if ((dTheta < 0 && currentT < end) ||\n                            (dTheta >= 0 && currentT > end)) {\n                            currentT = end;\n                            needNewSegment = true;\n                        }\n                        p1 = Path.getPointOnEllipticalArc(pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], currentT, pathCmd.points[6]);\n                        break;\n                    case \'C\':\n                        if (currentT === 0) {\n                            if (glyphWidth > pathCmd.pathLength) {\n                                currentT = 0.00000001;\n                            }\n                            else {\n                                currentT = glyphWidth / pathCmd.pathLength;\n                            }\n                        }\n                        else if (glyphWidth > currLen) {\n                            currentT += (glyphWidth - currLen) / pathCmd.pathLength / 2;\n                        }\n                        else {\n                            currentT = Math.max(currentT - (currLen - glyphWidth) / pathCmd.pathLength / 2, 0);\n                        }\n                        if (currentT > 1.0) {\n                            currentT = 1.0;\n                            needNewSegment = true;\n                        }\n                        p1 = Path.getPointOnCubicBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], pathCmd.points[4], pathCmd.points[5]);\n                        break;\n                    case \'Q\':\n                        if (currentT === 0) {\n                            currentT = glyphWidth / pathCmd.pathLength;\n                        }\n                        else if (glyphWidth > currLen) {\n                            currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n                        }\n                        else {\n                            currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n                        }\n                        if (currentT > 1.0) {\n                            currentT = 1.0;\n                            needNewSegment = true;\n                        }\n                        p1 = Path.getPointOnQuadraticBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3]);\n                        break;\n                }\n                if (p1 !== undefined) {\n                    currLen = Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n                }\n                if (needNewSegment) {\n                    needNewSegment = false;\n                    pathCmd = undefined;\n                }\n            }\n        };\n        var testChar = \'C\';\n        var glyphWidth = that._getTextSize(testChar).width + letterSpacing;\n        var lettersInOffset = offset / glyphWidth - 1;\n        for (var k = 0; k < lettersInOffset; k++) {\n            findSegmentToFitCharacter(testChar);\n            if (p0 === undefined || p1 === undefined) {\n                break;\n            }\n            p0 = p1;\n        }\n        for (var i = 0; i < charArr.length; i++) {\n            findSegmentToFitCharacter(charArr[i]);\n            if (p0 === undefined || p1 === undefined) {\n                break;\n            }\n            var width = Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n            var kern = 0;\n            if (kerningFunc) {\n                try {\n                    kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\n                }\n                catch (e) {\n                    kern = 0;\n                }\n            }\n            p0.x += kern;\n            p1.x += kern;\n            this.textWidth += kern;\n            var midpoint = Path.getPointOnLine(kern + width / 2.0, p0.x, p0.y, p1.x, p1.y);\n            var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);\n            this.glyphInfo.push({\n                transposeX: midpoint.x,\n                transposeY: midpoint.y,\n                text: charArr[i],\n                rotation: rotation,\n                p0: p0,\n                p1: p1,\n            });\n            p0 = p1;\n        }\n    }\n    getSelfRect() {\n        if (!this.glyphInfo.length) {\n            return {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        var points = [];\n        this.glyphInfo.forEach(function (info) {\n            points.push(info.p0.x);\n            points.push(info.p0.y);\n            points.push(info.p1.x);\n            points.push(info.p1.y);\n        });\n        var minX = points[0] || 0;\n        var maxX = points[0] || 0;\n        var minY = points[1] || 0;\n        var maxY = points[1] || 0;\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        var fontSize = this.fontSize();\n        return {\n            x: minX - fontSize / 2,\n            y: minY - fontSize / 2,\n            width: maxX - minX + fontSize,\n            height: maxY - minY + fontSize,\n        };\n    }\n}\nTextPath.prototype._fillFunc = TextPath_fillFunc;\nTextPath.prototype._strokeFunc = TextPath_strokeFunc;\nTextPath.prototype._fillFuncHit = TextPath_fillFunc;\nTextPath.prototype._strokeFuncHit = TextPath_strokeFunc;\nTextPath.prototype.className = \'TextPath\';\nTextPath.prototype._attrsAffectingSize = [\'text\', \'fontSize\', \'data\'];\n_registerNode(TextPath);\nFactory.addGetterSetter(TextPath, \'data\');\nFactory.addGetterSetter(TextPath, \'fontFamily\', \'Arial\');\nFactory.addGetterSetter(TextPath, \'fontSize\', 12, getNumberValidator());\nFactory.addGetterSetter(TextPath, \'fontStyle\', TextPath_NORMAL);\nFactory.addGetterSetter(TextPath, \'align\', \'left\');\nFactory.addGetterSetter(TextPath, \'letterSpacing\', 0, getNumberValidator());\nFactory.addGetterSetter(TextPath, \'textBaseline\', \'middle\');\nFactory.addGetterSetter(TextPath, \'fontVariant\', TextPath_NORMAL);\nFactory.addGetterSetter(TextPath, \'text\', TextPath_EMPTY_STRING);\nFactory.addGetterSetter(TextPath, \'textDecoration\', null);\nFactory.addGetterSetter(TextPath, \'kerningFunc\', null);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Transformer.js\n\n\n\n\n\n\n\n\n\nvar EVENTS_NAME = \'tr-konva\';\nvar Transformer_ATTR_CHANGE_LIST = [\n    \'resizeEnabledChange\',\n    \'rotateAnchorOffsetChange\',\n    \'rotateEnabledChange\',\n    \'enabledAnchorsChange\',\n    \'anchorSizeChange\',\n    \'borderEnabledChange\',\n    \'borderStrokeChange\',\n    \'borderStrokeWidthChange\',\n    \'borderDashChange\',\n    \'anchorStrokeChange\',\n    \'anchorStrokeWidthChange\',\n    \'anchorFillChange\',\n    \'anchorCornerRadiusChange\',\n    \'ignoreStrokeChange\',\n]\n    .map((e) => e + `.${EVENTS_NAME}`)\n    .join(\' \');\nvar NODES_RECT = \'nodesRect\';\nvar Transformer_TRANSFORM_CHANGE_STR = [\n    \'widthChange\',\n    \'heightChange\',\n    \'scaleXChange\',\n    \'scaleYChange\',\n    \'skewXChange\',\n    \'skewYChange\',\n    \'rotationChange\',\n    \'offsetXChange\',\n    \'offsetYChange\',\n    \'transformsEnabledChange\',\n    \'strokeWidthChange\',\n];\nvar ANGLES = {\n    \'top-left\': -45,\n    \'top-center\': 0,\n    \'top-right\': 45,\n    \'middle-right\': -90,\n    \'middle-left\': 90,\n    \'bottom-left\': -135,\n    \'bottom-center\': 180,\n    \'bottom-right\': 135,\n};\nconst TOUCH_DEVICE = "ontouchstart" in Global_Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === \'rotater\') {\n        return \'crosshair\';\n    }\n    rad += Util_Util.degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util_Util.radToDeg(rad) % 360) + 360) % 360;\n    if (Util_Util._inRange(angle, 315 + 22.5, 360) || Util_Util._inRange(angle, 0, 22.5)) {\n        return \'ns-resize\';\n    }\n    else if (Util_Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return \'nesw-resize\';\n    }\n    else if (Util_Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return \'ew-resize\';\n    }\n    else if (Util_Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return \'nwse-resize\';\n    }\n    else if (Util_Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return \'ns-resize\';\n    }\n    else if (Util_Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return \'nesw-resize\';\n    }\n    else if (Util_Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return \'ew-resize\';\n    }\n    else if (Util_Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return \'nwse-resize\';\n    }\n    else {\n        Util_Util.error(\'Transformer has unknown angle for cursor detection: \' + angle);\n        return \'pointer\';\n    }\n}\nvar ANCHORS_NAMES = [\n    \'top-left\',\n    \'top-center\',\n    \'top-right\',\n    \'middle-right\',\n    \'middle-left\',\n    \'bottom-left\',\n    \'bottom-center\',\n    \'bottom-right\',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    const x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    const y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return Object.assign(Object.assign({}, shape), { rotation: shape.rotation + angleRad, x,\n        y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    const center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    let snapped = newRotationRad;\n    for (let i = 0; i < snaps.length; i++) {\n        const angle = Global_Konva.getAngle(snaps[i]);\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nclass Transformer extends Group {\n    constructor(config) {\n        super(config);\n        this._transforming = false;\n        this._createElements();\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this.update = this.update.bind(this);\n        this.on(Transformer_ATTR_CHANGE_LIST, this.update);\n        if (this.getNode()) {\n            this.update();\n        }\n    }\n    attachTo(node) {\n        this.setNode(node);\n        return this;\n    }\n    setNode(node) {\n        Util_Util.warn(\'tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.\');\n        return this.setNodes([node]);\n    }\n    getNode() {\n        return this._nodes && this._nodes[0];\n    }\n    _getEventNamespace() {\n        return EVENTS_NAME + this._id;\n    }\n    setNodes(nodes = []) {\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        this._nodes = nodes;\n        if (nodes.length === 1 && this.useSingleNodeRotation()) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach((node) => {\n            const onChange = () => {\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n                    this.rotation(this.nodes()[0].getAbsoluteRotation());\n                }\n                this._resetTransformCache();\n                if (!this._transforming && !this.isDragging()) {\n                    this.update();\n                }\n            };\n            const additionalEvents = node._attrsAffectingSize\n                .map((prop) => prop + \'Change.\' + this._getEventNamespace())\n                .join(\' \');\n            node.on(additionalEvents, onChange);\n            node.on(Transformer_TRANSFORM_CHANGE_STR.map((e) => e + `.${this._getEventNamespace()}`).join(\' \'), onChange);\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n            this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne(\'.top-left\');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    }\n    _proxyDrag(node) {\n        let lastPos;\n        node.on(`dragstart.${this._getEventNamespace()}`, (e) => {\n            lastPos = node.getAbsolutePosition();\n            if (!this.isDragging() && node !== this.findOne(\'.back\')) {\n                this.startDrag(e, false);\n            }\n        });\n        node.on(`dragmove.${this._getEventNamespace()}`, (e) => {\n            if (!lastPos) {\n                return;\n            }\n            const abs = node.getAbsolutePosition();\n            const dx = abs.x - lastPos.x;\n            const dy = abs.y - lastPos.y;\n            this.nodes().forEach((otherNode) => {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                const otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    }\n    getNodes() {\n        return this._nodes || [];\n    }\n    getActiveAnchor() {\n        return this._movingAnchorName;\n    }\n    detach() {\n        if (this._nodes) {\n            this._nodes.forEach((node) => {\n                node.off(\'.\' + this._getEventNamespace());\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    }\n    _resetTransformCache() {\n        this._clearCache(NODES_RECT);\n        this._clearCache(\'transform\');\n        this._clearSelfAndDescendantCache(\'absoluteTransform\');\n    }\n    _getNodeRect() {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n    __getNodeShape(node, rot = this.rotation(), relative) {\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        const rotation = (Global_Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        const box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Global_Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    }\n    __getNodeRect() {\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        const totalPoints = [];\n        this.nodes().map((node) => {\n            const box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        const tr = new Transform();\n        tr.rotate(-Global_Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        const p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Global_Konva.getAngle(this.rotation()),\n        };\n    }\n    getX() {\n        return this._getNodeRect().x;\n    }\n    getY() {\n        return this._getNodeRect().y;\n    }\n    getWidth() {\n        return this._getNodeRect().width;\n    }\n    getHeight() {\n        return this._getNodeRect().height;\n    }\n    _createElements() {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor(\'rotater\');\n    }\n    _createAnchor(name) {\n        var anchor = new Rect({\n            stroke: \'rgb(0, 161, 255)\',\n            fill: \'white\',\n            strokeWidth: 1,\n            name: name + \' _anchor\',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : \'auto\',\n        });\n        var self = this;\n        anchor.on(\'mousedown touchstart\', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on(\'dragstart\', (e) => {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on(\'dragend\', (e) => {\n            e.cancelBubble = true;\n        });\n        anchor.on(\'mouseenter\', () => {\n            var rad = Global_Konva.getAngle(this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = cursor);\n            this._cursorChange = true;\n        });\n        anchor.on(\'mouseout\', () => {\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = \'\');\n            this._cursorChange = false;\n        });\n        this.add(anchor);\n    }\n    _createBack() {\n        var back = new Shape({\n            name: \'back\',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc(ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: (ctx, shape) => {\n                if (!this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on(\'dragstart\', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on(\'dragmove\', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on(\'dragend\', (e) => {\n            e.cancelBubble = true;\n        });\n        this.on(\'dragmove\', (e) => {\n            this.update();\n        });\n    }\n    _handleMouseDown(e) {\n        this._movingAnchorName = e.target.name().split(\' \')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        if (typeof window !== \'undefined\') {\n            window.addEventListener(\'mousemove\', this._handleMouseMove);\n            window.addEventListener(\'touchmove\', this._handleMouseMove);\n            window.addEventListener(\'mouseup\', this._handleMouseUp, true);\n            window.addEventListener(\'touchend\', this._handleMouseUp, true);\n        }\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire(\'transformstart\', { evt: e, target: this.getNode() });\n        this._nodes.forEach((target) => {\n            target._fire(\'transformstart\', { evt: e, target });\n        });\n    }\n    _handleMouseMove(e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne(\'.\' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        const pp = stage.getPointerPosition();\n        let newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        const oldAbs = anchorNode.getAbsolutePosition();\n        if (this.anchorDragBoundFunc()) {\n            newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n        }\n        anchorNode.setAbsolutePosition(newNodePos);\n        const newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === \'rotater\') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Global_Konva.getAngle(this.rotation());\n            const newRotation = oldRotation + delta;\n            const tol = Global_Konva.getAngle(this.rotationSnapTolerance());\n            const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            const diff = snappedRot - attrs.rotation;\n            const shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var keepProportion = this.keepRatio() || e.shiftKey;\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === \'top-left\') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne(\'.bottom-right\').x(),\n                        y: this.findOne(\'.bottom-right\').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne(\'.top-left\').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne(\'.top-left\').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne(\'.top-left\').x(comparePoint.x - x);\n                this.findOne(\'.top-left\').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === \'top-center\') {\n            this.findOne(\'.top-left\').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === \'top-right\') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne(\'.bottom-left\').x(),\n                        y: this.findOne(\'.bottom-left\').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne(\'.top-right\').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne(\'.top-right\').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne(\'.top-right\').x(comparePoint.x + x);\n                this.findOne(\'.top-right\').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne(\'.top-left\').y(pos.y);\n            this.findOne(\'.bottom-right\').x(pos.x);\n        }\n        else if (this._movingAnchorName === \'middle-left\') {\n            this.findOne(\'.top-left\').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === \'middle-right\') {\n            this.findOne(\'.bottom-right\').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === \'bottom-left\') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne(\'.top-right\').x(),\n                        y: this.findOne(\'.top-right\').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne(\'.top-left\').x(pos.x);\n            this.findOne(\'.bottom-right\').y(pos.y);\n        }\n        else if (this._movingAnchorName === \'bottom-center\') {\n            this.findOne(\'.bottom-right\').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === \'bottom-right\') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne(\'.top-left\').x(),\n                        y: this.findOne(\'.top-left\').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne(\'.bottom-right\').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne(\'.bottom-right\').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne(\'.bottom-right\').x(comparePoint.x + x);\n                this.findOne(\'.bottom-right\').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error(\'Wrong position argument of selection resizer: \' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne(\'.top-left\');\n            var bottomRight = this.findOne(\'.bottom-right\');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne(\'.top-left\').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne(\'.bottom-right\').x() - this.findOne(\'.top-left\').x();\n        var height = this.findOne(\'.bottom-right\').y() - this.findOne(\'.top-left\').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Global_Konva.getAngle(this.rotation()),\n        }, e);\n    }\n    _handleMouseUp(e) {\n        this._removeEvents(e);\n    }\n    getAbsoluteTransform() {\n        return this.getTransform();\n    }\n    _removeEvents(e) {\n        if (this._transforming) {\n            this._transforming = false;\n            if (typeof window !== \'undefined\') {\n                window.removeEventListener(\'mousemove\', this._handleMouseMove);\n                window.removeEventListener(\'touchmove\', this._handleMouseMove);\n                window.removeEventListener(\'mouseup\', this._handleMouseUp, true);\n                window.removeEventListener(\'touchend\', this._handleMouseUp, true);\n            }\n            var node = this.getNode();\n            this._fire(\'transformend\', { evt: e, target: node });\n            if (node) {\n                this._nodes.forEach((target) => {\n                    target._fire(\'transformend\', { evt: e, target });\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    }\n    _fitNodesInto(newAttrs, evt) {\n        var oldAttrs = this._getNodeRect();\n        const minSize = 1;\n        if (Util_Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util_Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        const allowNegativeScale = this.flipEnabled();\n        var t = new Transform();\n        t.rotate(Global_Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf(\'left\') >= 0) {\n            const offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace(\'left\', \'right\');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf(\'right\') >= 0) {\n            const offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace(\'right\', \'left\');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf(\'top\') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace(\'top\', \'bottom\');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf(\'bottom\') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace(\'bottom\', \'top\');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util_Util.warn(\'boundBoxFunc returned falsy. You should return new bound rect from it!\');\n            }\n        }\n        const baseSize = 10000000;\n        const oldTr = new Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        const newTr = new Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        const delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach((node) => {\n            var _a;\n            const parentTransform = node.getParent().getAbsoluteTransform();\n            const localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            const newLocalTransform = new Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            const attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            this._fire(\'transform\', { evt: evt, target: node });\n            node._fire(\'transform\', { evt: evt, target: node });\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util_Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    }\n    forceUpdate() {\n        this._resetTransformCache();\n        this.update();\n    }\n    _batchChangeChild(selector, attrs) {\n        const anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    }\n    update() {\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation(Util_Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        this.find(\'._anchor\').forEach((node) => {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: this.anchorStroke(),\n                strokeWidth: this.anchorStrokeWidth(),\n                fill: this.anchorFill(),\n                cornerRadius: this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild(\'.top-left\', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\'top-left\') >= 0,\n        });\n        this._batchChangeChild(\'.top-center\', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\'top-center\') >= 0,\n        });\n        this._batchChangeChild(\'.top-right\', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\'top-right\') >= 0,\n        });\n        this._batchChangeChild(\'.middle-left\', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\'middle-left\') >= 0,\n        });\n        this._batchChangeChild(\'.middle-right\', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\'middle-right\') >= 0,\n        });\n        this._batchChangeChild(\'.bottom-left\', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\'bottom-left\') >= 0,\n        });\n        this._batchChangeChild(\'.bottom-center\', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\'bottom-center\') >= 0,\n        });\n        this._batchChangeChild(\'.bottom-right\', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\'bottom-right\') >= 0,\n        });\n        this._batchChangeChild(\'.rotater\', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util_Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild(\'.back\', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n    isTransforming() {\n        return this._transforming;\n    }\n    stopTransform() {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne(\'.\' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    }\n    destroy() {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content && (this.getStage().content.style.cursor = \'\');\n        }\n        Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    }\n    toObject() {\n        return Node.prototype.toObject.call(this);\n    }\n}\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_Util.warn(\'enabledAnchors value should be an array\');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_Util.warn(\'Unknown anchor name: \' +\n                    name +\n                    \'. Available names are: \' +\n                    ANCHORS_NAMES.join(\', \'));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = \'Transformer\';\n_registerNode(Transformer);\nFactory.addGetterSetter(Transformer, \'enabledAnchors\', ANCHORS_NAMES, validateAnchors);\nFactory.addGetterSetter(Transformer, \'flipEnabled\', true, getBooleanValidator());\nFactory.addGetterSetter(Transformer, \'resizeEnabled\', true);\nFactory.addGetterSetter(Transformer, \'anchorSize\', 10, getNumberValidator());\nFactory.addGetterSetter(Transformer, \'rotateEnabled\', true);\nFactory.addGetterSetter(Transformer, \'rotationSnaps\', []);\nFactory.addGetterSetter(Transformer, \'rotateAnchorOffset\', 50, getNumberValidator());\nFactory.addGetterSetter(Transformer, \'rotationSnapTolerance\', 5, getNumberValidator());\nFactory.addGetterSetter(Transformer, \'borderEnabled\', true);\nFactory.addGetterSetter(Transformer, \'anchorStroke\', \'rgb(0, 161, 255)\');\nFactory.addGetterSetter(Transformer, \'anchorStrokeWidth\', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, \'anchorFill\', \'white\');\nFactory.addGetterSetter(Transformer, \'anchorCornerRadius\', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, \'borderStroke\', \'rgb(0, 161, 255)\');\nFactory.addGetterSetter(Transformer, \'borderStrokeWidth\', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, \'borderDash\');\nFactory.addGetterSetter(Transformer, \'keepRatio\', true);\nFactory.addGetterSetter(Transformer, \'centeredScaling\', false);\nFactory.addGetterSetter(Transformer, \'ignoreStroke\', false);\nFactory.addGetterSetter(Transformer, \'padding\', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, \'node\');\nFactory.addGetterSetter(Transformer, \'nodes\');\nFactory.addGetterSetter(Transformer, \'boundBoxFunc\');\nFactory.addGetterSetter(Transformer, \'anchorDragBoundFunc\');\nFactory.addGetterSetter(Transformer, \'shouldOverdrawWholeArea\', false);\nFactory.addGetterSetter(Transformer, \'useSingleNodeRotation\', true);\nFactory.backCompat(Transformer, {\n    lineEnabled: \'borderEnabled\',\n    rotateHandlerOffset: \'rotateAnchorOffset\',\n    enabledHandlers: \'enabledAnchors\',\n});\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/shapes/Wedge.js\n\n\n\n\n\nclass Wedge extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.radius(), 0, Global_Konva.getAngle(this.angle()), this.clockwise());\n        context.lineTo(0, 0);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nWedge.prototype.className = \'Wedge\';\nWedge.prototype._centroid = true;\nWedge.prototype._attrsAffectingSize = [\'radius\'];\n_registerNode(Wedge);\nFactory.addGetterSetter(Wedge, \'radius\', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, \'angle\', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, \'clockwise\', false);\nFactory.backCompat(Wedge, {\n    angleDeg: \'angle\',\n    getAngleDeg: \'getAngle\',\n    setAngleDeg: \'setAngle\',\n});\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Blur.js\n\n\n\nfunction BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n}\nvar mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259,\n];\nvar shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n];\nfunction filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data, width = imageData.width, height = imageData.height;\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n    var div = radius + radius + 1, widthMinus1 = width - 1, heightMinus1 = height - 1, radiusPlus1 = radius + 1, sumFactor = (radiusPlus1 * (radiusPlus1 + 1)) / 2, stackStart = new BlurStack(), stackEnd = null, stack = stackStart, stackIn = null, stackOut = null, mul_sum = mul_table[radius], shg_sum = shg_table[radius];\n    for (i = 1; i < div; i++) {\n        stack = stack.next = new BlurStack();\n        if (i === radiusPlus1) {\n            stackEnd = stack;\n        }\n    }\n    stack.next = stackStart;\n    yw = yi = 0;\n    for (y = 0; y < height; y++) {\n        r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        for (i = 1; i < radiusPlus1; i++) {\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n        }\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (x = 0; x < width; x++) {\n            pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa !== 0) {\n                pa = 255 / pa;\n                pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n            r_in_sum += stackIn.r = pixels[p];\n            g_in_sum += stackIn.g = pixels[p + 1];\n            b_in_sum += stackIn.b = pixels[p + 2];\n            a_in_sum += stackIn.a = pixels[p + 3];\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n            a_sum += a_in_sum;\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += 4;\n        }\n        yw += width;\n    }\n    for (x = 0; x < width; x++) {\n        g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        yp = width;\n        for (i = 1; i <= radius; i++) {\n            yi = (yp + x) << 2;\n            r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n            if (i < heightMinus1) {\n                yp += width;\n            }\n        }\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (y = 0; y < height; y++) {\n            p = yi << 2;\n            pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa > 0) {\n                pa = 255 / pa;\n                pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p =\n                (x +\n                    ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width) <<\n                    2;\n            r_sum += r_in_sum += stackIn.r = pixels[p];\n            g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n            b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n            a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += width;\n        }\n    }\n}\nconst Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n    if (radius > 0) {\n        filterGaussBlurRGBA(imageData, radius);\n    }\n};\nFactory.addGetterSetter(Node, \'blurRadius\', 0, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Brighten.js\n\n\n\nconst Brighten = function (imageData) {\n    var brightness = this.brightness() * 255, data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n    }\n};\nFactory.addGetterSetter(Node, \'brightness\', 0, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Contrast.js\n\n\n\nconst Contrast = function (imageData) {\n    var adjust = Math.pow((this.contrast() + 100) / 100, 2);\n    var data = imageData.data, nPixels = data.length, red = 150, green = 150, blue = 150, i;\n    for (i = 0; i < nPixels; i += 4) {\n        red = data[i];\n        green = data[i + 1];\n        blue = data[i + 2];\n        red /= 255;\n        red -= 0.5;\n        red *= adjust;\n        red += 0.5;\n        red *= 255;\n        green /= 255;\n        green -= 0.5;\n        green *= adjust;\n        green += 0.5;\n        green *= 255;\n        blue /= 255;\n        blue -= 0.5;\n        blue *= adjust;\n        blue += 0.5;\n        blue *= 255;\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n        data[i] = red;\n        data[i + 1] = green;\n        data[i + 2] = blue;\n    }\n};\nFactory.addGetterSetter(Node, \'contrast\', 0, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Emboss.js\n\n\n\n\nconst Emboss = function (imageData) {\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    switch (direction) {\n        case \'top-left\':\n            dirY = -1;\n            dirX = -1;\n            break;\n        case \'top\':\n            dirY = -1;\n            dirX = 0;\n            break;\n        case \'top-right\':\n            dirY = -1;\n            dirX = 1;\n            break;\n        case \'right\':\n            dirY = 0;\n            dirX = 1;\n            break;\n        case \'bottom-right\':\n            dirY = 1;\n            dirX = 1;\n            break;\n        case \'bottom\':\n            dirY = 1;\n            dirX = 0;\n            break;\n        case \'bottom-left\':\n            dirY = 1;\n            dirX = -1;\n            break;\n        case \'left\':\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            Util_Util.error(\'Unknown emboss direction: \' + direction);\n    }\n    do {\n        var offsetY = (y - 1) * w4;\n        var otherY = dirY;\n        if (y + otherY < 1) {\n            otherY = 0;\n        }\n        if (y + otherY > h) {\n            otherY = 0;\n        }\n        var offsetYOther = (y - 1 + otherY) * w * 4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var otherX = dirX;\n            if (x + otherX < 1) {\n                otherX = 0;\n            }\n            if (x + otherX > w) {\n                otherX = 0;\n            }\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            var dR = data[offset] - data[offsetOther];\n            var dG = data[offset + 1] - data[offsetOther + 1];\n            var dB = data[offset + 2] - data[offsetOther + 2];\n            var dif = dR;\n            var absDif = dif > 0 ? dif : -dif;\n            var absG = dG > 0 ? dG : -dG;\n            var absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) {\n                dif = dG;\n            }\n            if (absB > absDif) {\n                dif = dB;\n            }\n            dif *= strength;\n            if (blend) {\n                var r = data[offset] + dif;\n                var g = data[offset + 1] + dif;\n                var b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            }\n            else {\n                var grey = greyLevel - dif;\n                if (grey < 0) {\n                    grey = 0;\n                }\n                else if (grey > 255) {\n                    grey = 255;\n                }\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        } while (--x);\n    } while (--y);\n};\nFactory.addGetterSetter(Node, \'embossStrength\', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, \'embossWhiteLevel\', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, \'embossDirection\', \'top-left\', null, Factory.afterSetFilter);\nFactory.addGetterSetter(Node, \'embossBlend\', false, null, Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Enhance.js\n\n\n\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) {\n        return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n        return toMin;\n    }\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nconst Enhance = function (imageData) {\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n        return;\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        r = data[i + 0];\n        if (r < rMin) {\n            rMin = r;\n        }\n        else if (r > rMax) {\n            rMax = r;\n        }\n        g = data[i + 1];\n        if (g < gMin) {\n            gMin = g;\n        }\n        else if (g > gMax) {\n            gMax = g;\n        }\n        b = data[i + 2];\n        if (b < bMin) {\n            bMin = b;\n        }\n        else if (b > bMax) {\n            bMax = b;\n        }\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    }\n    else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\nFactory.addGetterSetter(Node, \'enhance\', 0, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Grayscale.js\nconst Grayscale = function (imageData) {\n    var data = imageData.data, len = data.length, i, brightness;\n    for (i = 0; i < len; i += 4) {\n        brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n        data[i] = brightness;\n        data[i + 1] = brightness;\n        data[i + 2] = brightness;\n    }\n};\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/HSL.js\n\n\n\nFactory.addGetterSetter(Node, \'hue\', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, \'saturation\', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, \'luminance\', 0, getNumberValidator(), Factory.afterSetFilter);\nconst HSL = function (imageData) {\n    var data = imageData.data, nPixels = data.length, v = 1, s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, l = this.luminance() * 127, i;\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b + l;\n        data[i + 1] = gr * r + gg * g + gb * b + l;\n        data[i + 2] = br * r + bg * g + bb * b + l;\n        data[i + 3] = a;\n    }\n};\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/HSV.js\n\n\n\nconst HSV = function (imageData) {\n    var data = imageData.data, nPixels = data.length, v = Math.pow(2, this.value()), s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, i;\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b;\n        data[i + 1] = gr * r + gg * g + gb * b;\n        data[i + 2] = br * r + bg * g + bb * b;\n        data[i + 3] = a;\n    }\n};\nFactory.addGetterSetter(Node, \'hue\', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, \'saturation\', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, \'value\', 0, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Invert.js\nconst Invert = function (imageData) {\n    var data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n    }\n};\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Kaleidoscope.js\n\n\n\n\nvar ToPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta;\n    var conversion = ((360 / tSize) * Math.PI) / 180, sin, cos;\n    for (theta = 0; theta < tSize; theta += 1) {\n        sin = Math.sin(theta * conversion);\n        cos = Math.cos(theta * conversion);\n        for (radius = 0; radius < rSize; radius += 1) {\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\n            i = (y * xSize + x) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (theta + radius * xSize) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nvar FromPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\n    var x1, y1;\n    for (x = 0; x < xSize; x += 1) {\n        for (y = 0; y < ySize; y += 1) {\n            dx = x - xMid;\n            dy = y - yMid;\n            radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\n            theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\n            theta = (theta * tSize) / 360;\n            x1 = Math.floor(theta);\n            y1 = Math.floor(radius);\n            i = (y1 * xSize + x1) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (y * xSize + x) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nconst Kaleidoscope = function (imageData) {\n    var xSize = imageData.width, ySize = imageData.height;\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor((xSize * (angle % 360)) / 360);\n    if (power < 1) {\n        return;\n    }\n    var tempCanvas = Util_Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas\n        .getContext(\'2d\')\n        .getImageData(0, 0, xSize, ySize);\n    ToPolar(imageData, scratchData, {\n        polarCenterX: xSize / 2,\n        polarCenterY: ySize / 2,\n    });\n    var minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n        minSectionSize = minSectionSize * 2;\n        power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n    var xStart = 0, xEnd = sectionSize, xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n        xStart = sectionSize;\n        xEnd = 0;\n        xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n        for (x = xStart; x !== xEnd; x += xDelta) {\n            xoff = Math.round(x + offset) % xSize;\n            srcPos = (xSize * y + xoff) * 4;\n            r = scratchData.data[srcPos + 0];\n            g = scratchData.data[srcPos + 1];\n            b = scratchData.data[srcPos + 2];\n            a = scratchData.data[srcPos + 3];\n            dstPos = (xSize * y + x) * 4;\n            scratchData.data[dstPos + 0] = r;\n            scratchData.data[dstPos + 1] = g;\n            scratchData.data[dstPos + 2] = b;\n            scratchData.data[dstPos + 3] = a;\n        }\n    }\n    for (y = 0; y < ySize; y += 1) {\n        sectionSize = Math.floor(minSectionSize);\n        for (i = 0; i < power; i += 1) {\n            for (x = 0; x < sectionSize + 1; x += 1) {\n                srcPos = (xSize * y + x) * 4;\n                r = scratchData.data[srcPos + 0];\n                g = scratchData.data[srcPos + 1];\n                b = scratchData.data[srcPos + 2];\n                a = scratchData.data[srcPos + 3];\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n                scratchData.data[dstPos + 0] = r;\n                scratchData.data[dstPos + 1] = g;\n                scratchData.data[dstPos + 2] = b;\n                scratchData.data[dstPos + 3] = a;\n            }\n            sectionSize *= 2;\n        }\n    }\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n};\nFactory.addGetterSetter(Node, \'kaleidoscopePower\', 2, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, \'kaleidoscopeAngle\', 0, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Mask.js\n\n\n\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2],\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nconst Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nFactory.addGetterSetter(Node, \'threshold\', 0, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Noise.js\n\n\n\nconst Noise = function (imageData) {\n    var amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2, i;\n    for (i = 0; i < nPixels; i += 4) {\n        data[i + 0] += half - 2 * half * Math.random();\n        data[i + 1] += half - 2 * half * Math.random();\n        data[i + 2] += half - 2 * half * Math.random();\n    }\n};\nFactory.addGetterSetter(Node, \'noise\', 0.2, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Pixelate.js\n\n\n\n\nconst Pixelate = function (imageData) {\n    var pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\n    if (pixelSize <= 0) {\n        Util_Util.error(\'pixelSize value can not be <= 0\');\n        return;\n    }\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\n        for (yBin = 0; yBin < nBinsY; yBin += 1) {\n            red = 0;\n            green = 0;\n            blue = 0;\n            alpha = 0;\n            xBinStart = xBin * pixelSize;\n            xBinEnd = xBinStart + pixelSize;\n            yBinStart = yBin * pixelSize;\n            yBinEnd = yBinStart + pixelSize;\n            pixelsInBin = 0;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    red += data[i + 0];\n                    green += data[i + 1];\n                    blue += data[i + 2];\n                    alpha += data[i + 3];\n                    pixelsInBin += 1;\n                }\n            }\n            red = red / pixelsInBin;\n            green = green / pixelsInBin;\n            blue = blue / pixelsInBin;\n            alpha = alpha / pixelsInBin;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    data[i + 0] = red;\n                    data[i + 1] = green;\n                    data[i + 2] = blue;\n                    data[i + 3] = alpha;\n                }\n            }\n        }\n    }\n};\nFactory.addGetterSetter(Node, \'pixelSize\', 8, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Posterize.js\n\n\n\nconst Posterize = function (imageData) {\n    var levels = Math.round(this.levels() * 254) + 1, data = imageData.data, len = data.length, scale = 255 / levels, i;\n    for (i = 0; i < len; i += 1) {\n        data[i] = Math.floor(data[i] / scale) * scale;\n    }\n};\nFactory.addGetterSetter(Node, \'levels\', 0.5, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/RGB.js\n\n\n\nconst RGB = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\n    for (i = 0; i < nPixels; i += 4) {\n        brightness =\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n        data[i] = brightness * red;\n        data[i + 1] = brightness * green;\n        data[i + 2] = brightness * blue;\n        data[i + 3] = data[i + 3];\n    }\n};\nFactory.addGetterSetter(Node, \'red\', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, \'green\', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, \'blue\', 0, RGBComponent, Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/RGBA.js\n\n\n\nconst RGBA = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\n    for (i = 0; i < nPixels; i += 4) {\n        ia = 1 - alpha;\n        data[i] = red * alpha + data[i] * ia;\n        data[i + 1] = green * alpha + data[i + 1] * ia;\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\n    }\n};\nFactory.addGetterSetter(Node, \'red\', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, \'green\', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, \'blue\', 0, RGBComponent, Factory.afterSetFilter);\nFactory.addGetterSetter(Node, \'alpha\', 1, function (val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return val;\n    }\n});\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Sepia.js\nconst Sepia = function (imageData) {\n    var data = imageData.data, nPixels = data.length, i, r, g, b;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        data[i + 0] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);\n        data[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);\n        data[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);\n    }\n};\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Solarize.js\nconst Solarize = function (imageData) {\n    var data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    do {\n        var offsetY = (y - 1) * w4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var r = data[offset];\n            var g = data[offset + 1];\n            var b = data[offset + 2];\n            if (r > 127) {\n                r = 255 - r;\n            }\n            if (g > 127) {\n                g = 255 - g;\n            }\n            if (b > 127) {\n                b = 255 - b;\n            }\n            data[offset] = r;\n            data[offset + 1] = g;\n            data[offset + 2] = b;\n        } while (--x);\n    } while (--y);\n};\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/filters/Threshold.js\n\n\n\nconst Threshold = function (imageData) {\n    var level = this.threshold() * 255, data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 1) {\n        data[i] = data[i] < level ? 0 : 255;\n    }\n};\nFactory.addGetterSetter(Node, \'threshold\', 0.5, getNumberValidator(), Factory.afterSetFilter);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/_FullInternals.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst _FullInternals_Konva = _CoreInternals_Konva.Util._assign(_CoreInternals_Konva, {\n    Arc: Arc,\n    Arrow: Arrow,\n    Circle: Circle,\n    Ellipse: Ellipse,\n    Image: Image_Image,\n    Label: Label,\n    Tag: Tag,\n    Line: Line,\n    Path: Path,\n    Rect: Rect,\n    RegularPolygon: RegularPolygon,\n    Ring: Ring,\n    Sprite: Sprite,\n    Star: Star,\n    Text: Text,\n    TextPath: TextPath,\n    Transformer: Transformer,\n    Wedge: Wedge,\n    Filters: {\n        Blur: Blur,\n        Brighten: Brighten,\n        Contrast: Contrast,\n        Emboss: Emboss,\n        Enhance: Enhance,\n        Grayscale: Grayscale,\n        HSL: HSL,\n        HSV: HSV,\n        Invert: Invert,\n        Kaleidoscope: Kaleidoscope,\n        Mask: Mask,\n        Noise: Noise,\n        Pixelate: Pixelate,\n        Posterize: Posterize,\n        RGB: RGB,\n        RGBA: RGBA,\n        Sepia: Sepia,\n        Solarize: Solarize,\n        Threshold: Threshold,\n    },\n});\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/index.js\n\n/* harmony default export */ const lib = (_FullInternals_Konva);\n\n;// CONCATENATED MODULE: ./node_modules/konva/lib/Core.js\n\n\n/* harmony default export */ const Core = (_CoreInternals_Konva);\n\n// EXTERNAL MODULE: ./node_modules/react-reconciler/index.js\nvar react_reconciler = __webpack_require__(76525);\nvar react_reconciler_default = /*#__PURE__*/__webpack_require__.n(react_reconciler);\n;// CONCATENATED MODULE: ./node_modules/react-konva/es/makeUpdates.js\n\n\nvar propsToSkip = {\n  children: true,\n  ref: true,\n  key: true,\n  style: true,\n  forwardedRef: true,\n  unstable_applyCache: true,\n  unstable_applyDrawHitFromCache: true\n};\n\nvar zIndexWarningShowed = false;\nvar dragWarningShowed = false;\n\nvar EVENTS_NAMESPACE = \'.react-konva-event\';\n\nvar useStrictMode = false;\nfunction toggleStrictMode(value) {\n  useStrictMode = value;\n}\n\nvar DRAGGABLE_WARNING = \'ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.\\nPosition of a node will be changed during drag&drop, so you should update state of the react app as well.\\nConsider to add onDragMove or onDragEnd events.\\nFor more info see: https://github.com/konvajs/react-konva/issues/256\\n\';\n\nvar Z_INDEX_WARNING = \'ReactKonva: You are using "zIndex" attribute for a Konva node.\\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\\nFor more info see: https://github.com/konvajs/react-konva/issues/194\\n\';\n\nvar EMPTY_PROPS = {};\n\nfunction applyNodeProps(instance, props) {\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_PROPS;\n\n  if (props === oldProps) {\n    console.error(\'same props\');\n  }\n  // don\'t use zIndex in react-konva\n  if (!zIndexWarningShowed && \'zIndex\' in props) {\n    console.warn(Z_INDEX_WARNING);\n    zIndexWarningShowed = true;\n  }\n\n  // check correct draggable usage\n  if (!dragWarningShowed && props.draggable) {\n    var hasPosition = props.x !== undefined || props.y !== undefined;\n    var hasEvents = props.onDragEnd || props.onDragMove;\n    if (hasPosition && !hasEvents) {\n      console.warn(DRAGGABLE_WARNING);\n      dragWarningShowed = true;\n    }\n  }\n\n  // check old props\n  // we need to unset properties that are not in new props\n  // and remove all events\n  for (var key in oldProps) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === \'on\';\n    var propChanged = oldProps[key] !== props[key];\n\n    // if that is a changed event, we need to remvoe it\n    if (isEvent && propChanged) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === \'content\') {\n        eventName = \'content\' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      instance.off(eventName, oldProps[key]);\n    }\n    var toRemove = !props.hasOwnProperty(key);\n    if (toRemove) {\n      instance.setAttr(key, undefined);\n    }\n  }\n\n  var strictUpdate = useStrictMode || props._useStrictMode;\n  var updatedProps = {};\n  var hasUpdates = false;\n\n  var newEvents = {};\n\n  for (var key in props) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === \'on\';\n    var toAdd = oldProps[key] !== props[key];\n    if (isEvent && toAdd) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === \'content\') {\n        eventName = \'content\' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      // check that event is not undefined\n      if (props[key]) {\n        newEvents[eventName] = props[key];\n      }\n    }\n    if (!isEvent && (props[key] !== oldProps[key] || strictUpdate && props[key] !== instance.getAttr(key))) {\n      hasUpdates = true;\n      updatedProps[key] = props[key];\n    }\n  }\n\n  if (hasUpdates) {\n    instance.setAttrs(updatedProps);\n    updatePicture(instance);\n  }\n\n  // subscribe to events AFTER we set attrs\n  // we need it to fix https://github.com/konvajs/react-konva/issues/471\n  // settings attrs may add events. Like "draggable: true" will add "mousedown" listener\n  for (var eventName in newEvents) {\n    instance.on(eventName + EVENTS_NAMESPACE, newEvents[eventName]);\n  }\n}\n\nfunction updatePicture(node) {\n  if (!Global_Konva.autoDrawEnabled) {\n    var drawingNode = node.getLayer() || node.getStage();\n    drawingNode && drawingNode.batchDraw();\n  }\n}\n// EXTERNAL MODULE: ./node_modules/scheduler/index.js\nvar scheduler = __webpack_require__(63840);\n;// CONCATENATED MODULE: ./node_modules/react-konva/es/ReactKonvaHostConfig.js\n\n\n\n\n\nvar NO_CONTEXT = {};\nvar UPDATE_SIGNAL = {};\n\n// for react-spring capability\nCore.Node.prototype._applyProps = applyNodeProps;\n\nfunction appendInitialChild(parentInstance, child) {\n  if (typeof child === \'string\') {\n    // Noop for string children of Text (eg <Text>foo</Text>)\n    console.error(\'Do not use plain text as child of Konva.Node. You are using text: \' + child);\n    return;\n  }\n\n  parentInstance.add(child);\n\n  updatePicture(parentInstance);\n}\n\nfunction createInstance(type, props, internalInstanceHandle) {\n  var NodeClass = Core[type];\n  if (!NodeClass) {\n    console.error(\'Konva has no node with the type \' + type + \'. Group will be used instead. If you use minimal version of react-konva, just import required nodes into Konva: "import "konva/lib/shapes/\' + type + \'"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html\');\n    NodeClass = Core.Group;\n  }\n\n  // we need to split props into events and non events\n  // we we can pass non events into constructor directly\n  // that way the performance should be better\n  // we we apply change "applyNodeProps"\n  // then it will trigger change events on first run\n  // but we don\'t need them!\n  var propsWithoutEvents = {};\n  var propsWithOnlyEvents = {};\n\n  for (var key in props) {\n    var isEvent = key.slice(0, 2) === \'on\';\n    if (isEvent) {\n      propsWithOnlyEvents[key] = props[key];\n    } else {\n      propsWithoutEvents[key] = props[key];\n    }\n  }\n\n  var instance = new NodeClass(propsWithoutEvents);\n\n  applyNodeProps(instance, propsWithOnlyEvents);\n\n  return instance;\n}\n\nfunction createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n  console.error(\'Text components are not supported for now in ReactKonva. Your text is: "\' + text + \'"\');\n}\n\nfunction finalizeInitialChildren(domElement, type, props) {\n  return false;\n}\n\nfunction getPublicInstance(instance) {\n  return instance;\n}\n\nfunction prepareForCommit() {\n  return null;\n}\n\nfunction preparePortalMount() {\n  return null;\n}\n\nfunction prepareUpdate(domElement, type, oldProps, newProps) {\n  return UPDATE_SIGNAL;\n}\n\nfunction resetAfterCommit() {\n  // Noop\n}\n\nfunction resetTextContent(domElement) {\n  // Noop\n}\n\nfunction shouldDeprioritizeSubtree(type, props) {\n  return false;\n}\n\nfunction getRootHostContext() {\n  return NO_CONTEXT;\n}\n\nfunction getChildHostContext() {\n  return NO_CONTEXT;\n}\n\nvar scheduleTimeout = setTimeout;\nvar cancelTimeout = clearTimeout;\nvar noTimeout = -1;\n// export const schedulePassiveEffects = scheduleDeferredCallback;\n// export const cancelPassiveEffects = cancelDeferredCallback;\n\nfunction shouldSetTextContent(type, props) {\n  return false;\n}\n\n// The Konva renderer is secondary to the React DOM renderer.\nvar isPrimaryRenderer = false;\nvar warnsIfNotActing = true;\nvar supportsMutation = true;\n\nfunction appendChild(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n\n  updatePicture(parentInstance);\n}\n\nfunction appendChildToContainer(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n  updatePicture(parentInstance);\n}\n\nfunction insertBefore(parentInstance, child, beforeChild) {\n  // child._remove() will not stop dragging\n  // but child.remove() will stop it, but we don\'t need it\n  // removing will reset zIndexes\n  child._remove();\n  parentInstance.add(child);\n  child.setZIndex(beforeChild.getZIndex());\n  updatePicture(parentInstance);\n}\n\nfunction insertInContainerBefore(parentInstance, child, beforeChild) {\n  insertBefore(parentInstance, child, beforeChild);\n}\n\nfunction removeChild(parentInstance, child) {\n  child.destroy();\n  child.off(EVENTS_NAMESPACE);\n  updatePicture(parentInstance);\n}\n\nfunction removeChildFromContainer(parentInstance, child) {\n  child.destroy();\n  child.off(EVENTS_NAMESPACE);\n  updatePicture(parentInstance);\n}\n\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  console.error(\'Text components are not yet supported in ReactKonva. You text is: "\' + newText + \'"\');\n}\n\nfunction commitMount(instance, type, newProps) {\n  // Noop\n}\n\nfunction commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n  applyNodeProps(instance, newProps, oldProps);\n}\n\nfunction hideInstance(instance) {\n  instance.hide();\n  updatePicture(instance);\n}\n\nfunction hideTextInstance(textInstance) {\n  // Noop\n}\n\nfunction unhideInstance(instance, props) {\n  if (props.visible == null || props.visible) {\n    instance.show();\n  }\n}\n\nfunction unhideTextInstance(textInstance, text) {\n  // Noop\n}\n\nfunction clearContainer(container) {\n  // Noop\n}\n;// CONCATENATED MODULE: ./node_modules/react-konva/es/ReactKonvaCore.js\n/**\n * Based on ReactArt.js\n * Copyright (c) 2017-present Lavrenov Anton.\n * All rights reserved.\n *\n * MIT\n */\n\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\n\nfunction usePrevious(value) {\n  var ref = react.useRef();\n  react.useLayoutEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar StageWrap = function StageWrap(props) {\n  var container = react.useRef();\n  var stage = react.useRef();\n  var fiberRef = react.useRef();\n\n  var oldProps = usePrevious(props);\n\n  var _setRef = function _setRef(stage) {\n    var forwardedRef = props.forwardedRef;\n\n    if (!forwardedRef) {\n      return;\n    }\n    if (typeof forwardedRef === \'function\') {\n      forwardedRef(stage);\n    } else {\n      forwardedRef.current = stage;\n    }\n  };\n\n  react.useLayoutEffect(function () {\n    stage.current = new Core.Stage({\n      width: props.width,\n      height: props.height,\n      container: container.current\n    });\n\n    _setRef(stage.current);\n\n    fiberRef.current = KonvaRenderer.createContainer(stage.current);\n    KonvaRenderer.updateContainer(props.children, fiberRef.current);\n\n    return function () {\n      if (!Core.isBrowser) {\n        return;\n      }\n      _setRef(null);\n      KonvaRenderer.updateContainer(null, fiberRef.current, null);\n      stage.current.destroy();\n    };\n  }, []);\n\n  react.useLayoutEffect(function () {\n    _setRef(stage.current);\n    applyNodeProps(stage.current, props, oldProps);\n    KonvaRenderer.updateContainer(props.children, fiberRef.current, null);\n  });\n\n  return react.createElement(\'div\', {\n    ref: container,\n    accessKey: props.accessKey,\n    className: props.className,\n    role: props.role,\n    style: props.style,\n    tabIndex: props.tabIndex,\n    title: props.title\n  });\n};\n\nvar ReactKonvaCore_Layer = \'Layer\';\nvar ReactKonvaCore_FastLayer = \'FastLayer\';\nvar ReactKonvaCore_Group = \'Group\';\nvar ReactKonvaCore_Label = \'Label\';\nvar ReactKonvaCore_Rect = \'Rect\';\nvar ReactKonvaCore_Circle = \'Circle\';\nvar ReactKonvaCore_Ellipse = \'Ellipse\';\nvar ReactKonvaCore_Wedge = \'Wedge\';\nvar ReactKonvaCore_Line = \'Line\';\nvar ReactKonvaCore_Sprite = \'Sprite\';\nvar ReactKonvaCore_Image = \'Image\';\nvar ReactKonvaCore_Text = \'Text\';\nvar ReactKonvaCore_TextPath = \'TextPath\';\nvar ReactKonvaCore_Star = \'Star\';\nvar ReactKonvaCore_Ring = \'Ring\';\nvar ReactKonvaCore_Arc = \'Arc\';\nvar ReactKonvaCore_Tag = \'Tag\';\nvar ReactKonvaCore_Path = \'Path\';\nvar ReactKonvaCore_RegularPolygon = \'RegularPolygon\';\nvar ReactKonvaCore_Arrow = \'Arrow\';\nvar ReactKonvaCore_Shape = \'Shape\';\nvar ReactKonvaCore_Transformer = \'Transformer\';\n\nvar KonvaRenderer = react_reconciler_default()(ReactKonvaHostConfig_namespaceObject);\n\nKonvaRenderer.injectIntoDevTools({\n  findHostInstanceByFiber: function findHostInstanceByFiber() {\n    return null;\n  },\n  bundleType:  false ? 0 : 0,\n  version: react.version,\n  rendererPackageName: \'react-konva\'\n});\n\nvar ReactKonvaCore_Stage = react.forwardRef(function (props, ref) {\n  return react.createElement(StageWrap, _extends({}, props, { forwardedRef: ref }));\n});\n\nvar ReactKonvaCore_useStrictMode = toggleStrictMode;\n;// CONCATENATED MODULE: ./node_modules/react-konva/es/ReactKonva.js\n/**\n * Based on ReactArt.js\n * Copyright (c) 2017-present Lavrenov Anton.\n * All rights reserved.\n *\n * MIT\n */\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getDimensionsMinimalRatio.js\nvar getDimensionsMinimalRatio=function(a,b,c,d){return Math.min(a/c,b/d)||1};/* harmony default export */ const utils_getDimensionsMinimalRatio = (getDimensionsMinimalRatio);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/constants.js\nvar ROOT_CONTAINER_CLASS_NAME="FIE_root";var DESIGN_LAYER_ID="FIE_design-layer";var TRANSFORMERS_LAYER_ID="FIE_transformers-layer";var IMAGE_NODE_ID="FIE_original-image";var NODES_TRANSFORMER_ID="FIE_nodes-transformer";var WATERMARK_ANNOTATION_ID="watermark";var TRANSLATIONS_GRID_UUID="353297d2-40b4-4684-a875-45a2178a8157";var TABS_IDS={FINETUNE:"Finetune",FILTERS:"Filters",ADJUST:"Adjust",WATERMARK:"Watermark",ANNOTATE:"Annotate",RESIZE:"Resize"};var TOOLS_IDS={CROP:"Crop",ROTATE:"Rotate",FLIP_X:"Flip_X",FLIP_Y:"Flip_Y",BRIGHTNESS:"Brightness",CONTRAST:"Contrast",HSV:"HueSaturationValue",WARMTH:"Warmth",BLUR:"Blur",THRESHOLD:"Threshold",POSTERIZE:"Posterize",PIXELATE:"Pixelate",NOISE:"Noise",FILTERS:"Filters",RECT:"Rect",ELLIPSE:"Ellipse",POLYGON:"Polygon",TEXT:"Text",LINE:"Line",IMAGE:"Image",ARROW:"Arrow",WATERMARK:"Watermark",PEN:"Pen",RESIZE:"Resize"};var FLIP_DIRECTIONS={X:"X",Y:"Y"};var DEFAULT_ZOOM_FACTOR=1;var SUPPORTED_IMAGE_TYPES=["png","jpeg","jpg","webp"];var POSSIBLE_IMAGE_TYPES=[].concat(SUPPORTED_IMAGE_TYPES,["svg","gif","avif","apng"]);var DEFAULT_IMAGE_TYPE=SUPPORTED_IMAGE_TYPES[0];var POINTER_ICONS={DEFAULT:"default",DRAW:"crosshair",SELECT:"pointer",MOVE:"move",DRAG:"GRAB"};var DEFAULT_ENABLED_ANCHORS=(/* unused pure expression or super */ null && (["top-left","top-center","top-right","middle-right","middle-left","bottom-left","bottom-center","bottom-right"]));var ORIGINAL_CROP="original";var CUSTOM_CROP="custom";var ELLIPSE_CROP="ellipse";var POSITIONS={TOP_LEFT:"top-left",TOP_CENTER:"top-center",TOP_RIGHT:"top-right",MIDDLE_LEFT:"middle-left",MIDDLE_CENTER:"middle-center",MIDDLE_RIGHT:"middle-right",BOTTOM_LEFT:"bottom-left",BOTTOM_CENTER:"bottom-center",BOTTOM_RIGHT:"bottom-right"};var MIN_CROP={WIDTH:14,HEIGHT:14};var CLOSING_REASONS={AFTER_SAVE:"after-saving",CLOSE_BUTTON:"close-button-clicked",BACK_BUTTON:"back-button-clicked"};var FEEDBACK_STATUSES={WARNING:"warning",ERROR:"error"};\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/cropImage.js\nvar cropImage=function(a,b){var c=!!(2<arguments.length&&arguments[2]!==void 0)&&arguments[2];b.ratio!==ELLIPSE_CROP||c?a.rect(b.x,b.y,b.width,b.height):a.ellipse(b.x+b.width/2,b.y+b.height/2,b.width/2,b.height/2,0,0,2*Math.PI)};/* harmony default export */ const utils_cropImage = (cropImage);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/addFilter.js\nfunction addFilter_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function addFilter_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?addFilter_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):addFilter_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var ADD_FILTER="ADD_FILTER";var addFilter=function(a,b){return addFilter_objectSpread(addFilter_objectSpread({},a),{},{isDesignState:!b.dismissHistory,filter:b.filter||null})};/* harmony default export */ const actions_addFilter = (addFilter);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/hideLoader.js\nfunction hideLoader_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function hideLoader_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?hideLoader_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):hideLoader_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var HIDE_LOADER="HIDE_LOADER";var hideLoader=function(a){return hideLoader_objectSpread(hideLoader_objectSpread({},a),{},{isLoadingGlobally:!1})};/* harmony default export */ const actions_hideLoader = (hideLoader);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\nvar arrayWithHoles = __webpack_require__(83878);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js\nvar iterableToArray = __webpack_require__(59199);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\nvar unsupportedIterableToArray = __webpack_require__(40181);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\nvar nonIterableRest = __webpack_require__(25267);\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toArray.js\n\n\n\n\nfunction _toArray(arr) {\n  return (0,arrayWithHoles/* default */.Z)(arr) || (0,iterableToArray/* default */.Z)(arr) || (0,unsupportedIterableToArray/* default */.Z)(arr) || (0,nonIterableRest/* default */.Z)();\n}\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/context/defaultConfig.js\nvar _theme$annotationsCom;/* harmony default export */ const defaultConfig = (_theme$annotationsCom={theme:{palette:{"bg-primary-active":"#ECF3FF"},typography:{fontFamily:"Roboto, Arial"}},annotationsCommon:{fill:"#000000",stroke:"#000000",strokeWidth:0,shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:"#000000",shadowOpacity:1,opacity:1}},(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.TEXT,{text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit.",fontFamily:"Arial",fonts:[{label:"Arial",value:"Arial"},"Tahoma","Sans-serif",{label:"Comic Sans",value:"Comic-sans"}],fontSize:14,letterSpacing:0,lineHeight:1,align:"left",fontStyle:"normal",onFontChange:void 0}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.IMAGE,{fill:void 0}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.RECT,{cornerRadius:0}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.ELLIPSE,{}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.POLYGON,{sides:3}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.PEN,{strokeWidth:1,tension:.5,lineCap:"round"}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.LINE,{lineCap:"butt",strokeWidth:1}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.ARROW,{strokeWidth:6,lineCap:"butt",pointerLength:void 0,pointerWidth:void 0}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.WATERMARK,{gallery:[]}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,TOOLS_IDS.CROP,{minWidth:MIN_CROP.WIDTH,minHeight:MIN_CROP.HEIGHT,width:null,height:null,maxWidth:null,maxHeight:null,ratio:"original",ratioTitleKey:void 0,noPresets:!1,autoResize:!1,presetsItems:[],presetsFolders:[]}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"tabsIds",[]),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"defaultTabId",TABS_IDS.ADJUST),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"defaultToolId",TOOLS_IDS.CROP),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"onClose",void 0),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"onSave",void 0),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"onBeforeSave",void 0),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"closeAfterSave",!1),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"defaultSavedImageName",void 0),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"defaultSavedImageType",null),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"forceToPngInEllipticalCrop",!1),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"useBackendTranslations",!0),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"translations",null),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"language","en"),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"avoidChangesNotSavedAlertOnLeave",!1),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"loadableDesignState",null),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"moreSaveOptions",[]),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"savingPixelRatio",8),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"previewPixelRatio",window?window.devicePixelRatio||1:1),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"showBackButton",!1),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"useCloudimage",!1),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"cloudimage",{token:"",dontPrefixUrl:!1,domain:"cloudimg.io",version:"",loadableQuery:"",secureProtocol:!0,imageSealing:{enable:!1,salt:"",charCount:10,includeParams:[]}}),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"observePluginContainerSize",!1),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"showCanvasOnly",!1),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"getCurrentImgDataFnRef",void 0),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"onModify",void 0),(0,defineProperty/* default */.Z)(_theme$annotationsCom,"useZoomPresetsMenu",!0),_theme$annotationsCom);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/BlackAndWhite.js\nfunction BlackAndWhite(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=(b[d]+b[d+1]+b[d+2])/3>100,f=e?255:0;b[d]=f,b[d+1]=f,b[d+2]=f}}/* harmony default export */ const filters_BlackAndWhite = (BlackAndWhite);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/BaseFilters.js\nvar BaseFilters={brightness:function brightness(a,b){var c=b;return c=1<c?1:c,c=-1>c?-1:c,c=~~(255*c),[a[0]+c,a[1]+c,a[2]+c]},contrast:function contrast(a,b){var c=b;c*=255;var d=259*(c+255)/(255*(259-c));return[d*(a[0]-128)+128,d*(a[1]-128)+128,d*(a[2]-128)+128]},saturation:function saturation(a,c){var d=c;d=-1>d?-1:d;var e=a[0],f=a[1],g=a[2],b=.2989*e+.587*f+.114*g;return[-b*d+e*(1+d),-b*d+f*(1+d),-b*d+g*(1+d)]},grayscale:function grayscale(a){var c=a[0],d=a[1],e=a[2];return[,,,].fill(.2126*c+.7152*d+.0722*e)},sepia:function sepia(a,c){var d=a[0],e=a[1],f=a[2];return[d*(1-.607*c)+.769*e*c+.189*f*c,.349*d*c+e*(1-.314*c)+.168*f*c,.272*d*c+.534*e*c+f*(1-.869*c)]},adjustRGB:function adjustRGB(a,b){return[a[0]*b[0],a[1]*b[1],a[2]*b[2]]},colorFilter:function colorFilter(a,c){var d=a[0],e=a[1],f=a[2],b=c[3];return[d-(d-c[0])*b,e-(e-c[1])*b,f-(f-c[2])*b]}};/* harmony default export */ const filters_BaseFilters = (BaseFilters);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Clarendon.js\nvar BRIGHTNESS_CONST=.1,CONTRAST_CONST=.1,SATURATION_CONST=.15;function Clarendon(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],BRIGHTNESS_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],CONTRAST_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],SATURATION_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Clarendon = (Clarendon);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Gingham.js\nvar SEPIA_CONST=.04,Gingham_CONTRAST_CONST=-.15;function Gingham(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.sepia([b[d],b[d+1],b[d+2]],SEPIA_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Gingham_CONTRAST_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Gingham = (Gingham);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Moon.js\nvar Moon_BRIGHTNESS_CONST=.1;function Moon(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.grayscale([b[d],b[d+1],b[d+2]]),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Moon_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Moon = (Moon);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Lark.js\nvar Lark_BRIGHTNESS_CONST=.08,ADJUST_RGB_CONST=[1,1.03,1.05],Lark_SATURATION_CONST=.12;function Lark(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Lark_BRIGHTNESS_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.adjustRGB([b[d],b[d+1],b[d+2]],ADJUST_RGB_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Lark_SATURATION_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Lark = (Lark);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Reyes.js\nvar Reyes_SEPIA_CONST=.4,Reyes_BRIGHTNESS_CONST=.13,Reyes_CONTRAST_CONST=-.05;function Reyes(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.sepia([b[d],b[d+1],b[d+2]],Reyes_SEPIA_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Reyes_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Reyes_CONTRAST_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Reyes = (Reyes);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Juno.js\nvar Juno_ADJUST_RGB_CONST=[1.01,1.04,1],Juno_SATURATION_CONST=.3;function Juno(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.adjustRGB([b[d],b[d+1],b[d+2]],Juno_ADJUST_RGB_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Juno_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Juno = (Juno);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Slumber.js\nvar Slumber_BRIGHTNESS_CONST=.1,Slumber_SATURATION_CONST=-.5;function Slumber(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Slumber_BRIGHTNESS_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Slumber_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Slumber = (Slumber);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Crema.js\nvar Crema_ADJUST_RGB_CONST=[1.04,1,1.02],Crema_SATURATION_CONST=-.05;function Crema(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.adjustRGB([b[d],b[d+1],b[d+2]],Crema_ADJUST_RGB_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Crema_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Crema = (Crema);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Ludwig.js\nvar Ludwig_BRIGHTNESS_CONST=.05,Ludwig_SATURATION_CONST=-.03;function Ludwig(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Ludwig_BRIGHTNESS_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Ludwig_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Ludwig = (Ludwig);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Aden.js\nvar COLOR_FILTER_CONST=[228,130,225,.13],Aden_SATURATION_CONST=-.2;function Aden(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Aden_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Aden = (Aden);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Perpetua.js\nvar Perpetua_ADJUST_RGB_CONST=[1.05,1.1,1];function Perpetua(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.adjustRGB([b[d],b[d+1],b[d+2]],Perpetua_ADJUST_RGB_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2]}}/* harmony default export */ const filters_Perpetua = (Perpetua);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Amaro.js\nvar Amaro_SATURATION_CONST=.3,Amaro_BRIGHTNESS_CONST=.15;function Amaro(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Amaro_SATURATION_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Amaro_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Amaro = (Amaro);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Mayfair.js\nvar Mayfair_COLOR_FILTER_CONST=[230,115,108,.05],Mayfair_SATURATION_CONST=.15;function Mayfair(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Mayfair_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Mayfair_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Mayfair = (Mayfair);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Rise.js\nvar Rise_COLOR_FILTER_CONST=[255,170,0,.1],Rise_BRIGHTNESS_CONST=.09,Rise_SATURATION_CONST=.1;function Rise(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Rise_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Rise_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Rise_SATURATION_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Rise = (Rise);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Hudson.js\nvar Hudson_ADJUST_RGB_CONST=[1,1,1.25],Hudson_CONTRAST_CONST=.1,Hudson_BRIGHTNESS_CONST=.15;function Hudson(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.adjustRGB([b[d],b[d+1],b[d+2]],Hudson_ADJUST_RGB_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Hudson_CONTRAST_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Hudson_BRIGHTNESS_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Hudson = (Hudson);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Valencia.js\nvar Valencia_COLOR_FILTER_CONST=[255,225,80,.08],Valencia_SATURATION_CONST=.1,Valencia_CONTRAST_CONST=.05;function Valencia(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Valencia_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Valencia_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Valencia_CONTRAST_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Valencia = (Valencia);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/XPro2.js\nvar XPro2_COLOR_FILTER_CONST=[255,255,0,.07],XPro2_SATURATION_CONST=.2,XPro2_CONTRAST_CONST=.15;function XPro2(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],XPro2_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],XPro2_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],XPro2_CONTRAST_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_XPro2 = (XPro2);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Sierra.js\nvar Sierra_CONTRAST_CONST=-.15,Sierra_SATURATION_CONST=.1;function Sierra(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Sierra_CONTRAST_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Sierra_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Sierra = (Sierra);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Willow.js\nvar Willow_COLOR_FILTER_CONST=[100,28,210,.03],Willow_BRIGHTNESS_CONST=.1;function Willow(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.grayscale([b[d],b[d+1],b[d+2]]),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Willow_COLOR_FILTER_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Willow_BRIGHTNESS_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Willow = (Willow);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/LoFi.js\nvar LoFi_CONTRAST_CONST=.15,LoFi_SATURATION_CONST=.2;function LoFi(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],LoFi_CONTRAST_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],LoFi_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_LoFi = (LoFi);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Hefe.js\nvar Hefe_CONTRAST_CONST=.1,Hefe_SATURATION_CONST=.15;function Hefe(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Hefe_CONTRAST_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Hefe_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Hefe = (Hefe);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Nashville.js\nvar Nashville_COLOR_FILTER_CONST=[220,115,188,.12],Nashville_CONTRAST_CONST=-.05;function Nashville(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Nashville_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Nashville_CONTRAST_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Nashville = (Nashville);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Stinson.js\nvar Stinson_BRIGHTNESS_CONST=.1,Stinson_SEPIA_CONST=.3;function Stinson(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Stinson_BRIGHTNESS_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.sepia([b[d],b[d+1],b[d+2]],Stinson_SEPIA_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Stinson = (Stinson);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Vesper.js\nvar Vesper_COLOR_FILTER_CONST=[255,225,0,.05],Vesper_BRIGHTNESS_CONST=.06,Vesper_CONTRAST_CONST=.06;function Vesper(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Vesper_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Vesper_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Vesper_CONTRAST_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Vesper = (Vesper);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Earlybird.js\nvar Earlybird_COLOR_FILTER_CONST=[255,165,40,.2];function Earlybird(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Earlybird_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2]}}/* harmony default export */ const filters_Earlybird = (Earlybird);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Brannan.js\nvar Brannan_CONTRAST_CONST=.2,Brannan_COLOR_FILTER_CONST=[140,10,185,.1];function Brannan(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Brannan_CONTRAST_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Brannan_COLOR_FILTER_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Brannan = (Brannan);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Sutro.js\nvar Sutro_BRIGHTNESS_CONST=-.1,Sutro_SATURATION_CONST=-.1;function Sutro(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Sutro_BRIGHTNESS_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Sutro_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Sutro = (Sutro);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Toaster.js\nvar Toaster_SEPIA_CONST=.1,Toaster_COLOR_FILTER_CONST=[255,145,0,.2];function Toaster(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.sepia([b[d],b[d+1],b[d+2]],Toaster_SEPIA_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Toaster_COLOR_FILTER_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Toaster = (Toaster);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Walden.js\nvar Walden_BRIGHTNESS_CONST=.1,Walden_COLOR_FILTER_CONST=[255,255,0,.2];function Walden(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Walden_BRIGHTNESS_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Walden_COLOR_FILTER_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Walden = (Walden);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/NinteenSeventySeven.js\nvar NinteenSeventySeven_COLOR_FILTER_CONST=[255,25,0,.15],NinteenSeventySeven_BRIGHTNESS_CONST=.1;function NinteenSeventySeven(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],NinteenSeventySeven_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],NinteenSeventySeven_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_NinteenSeventySeven = (NinteenSeventySeven);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Kelvin.js\nvar Kelvin_COLOR_FILTER_CONST=[255,140,0,.1],Kelvin_ADJUST_RGB_CONST=[1.15,1.05,1],Kelvin_SATURATION_CONST=.35;function Kelvin(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Kelvin_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.adjustRGB([b[d],b[d+1],b[d+2]],Kelvin_ADJUST_RGB_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Kelvin_SATURATION_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Kelvin = (Kelvin);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Maven.js\nvar Maven_COLOR_FILTER_CONST=[225,240,0,.1],Maven_SATURATION_CONST=.25,Maven_CONTRAST_CONST=.05;function Maven(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Maven_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Maven_SATURATION_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2];var j=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Maven_CONTRAST_CONST),k=(0,slicedToArray/* default */.Z)(j,3);b[d]=k[0],b[d+1]=k[1],b[d+2]=k[2]}}/* harmony default export */ const filters_Maven = (Maven);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Ginza.js\nvar Ginza_SEPIA_CONST=.06,Ginza_BRIGHTNESS_CONST=.1;function Ginza(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.sepia([b[d],b[d+1],b[d+2]],Ginza_SEPIA_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Ginza_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Ginza = (Ginza);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Skyline.js\nvar Skyline_SATURATION_CONST=.35,Skyline_BRIGHTNESS_CONST=.1;function Skyline(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.saturation([b[d],b[d+1],b[d+2]],Skyline_SATURATION_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Skyline_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Skyline = (Skyline);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Dogpatch.js\nvar Dogpatch_CONTRAST_CONST=.15,Dogpatch_BRIGHTNESS_CONST=.1;function Dogpatch(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Dogpatch_CONTRAST_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Dogpatch_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Dogpatch = (Dogpatch);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Brooklyn.js\nvar Brooklyn_COLOR_FILTER_CONST=[25,240,252,.05],Brooklyn_SEPIA_CONST=.3;function Brooklyn(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Brooklyn_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.sepia([b[d],b[d+1],b[d+2]],Brooklyn_SEPIA_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Brooklyn = (Brooklyn);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Helena.js\nvar Helena_COLOR_FILTER_CONST=[208,208,86,.2],Helena_CONTRAST_CONST=.15;function Helena(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Helena_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Helena_CONTRAST_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Helena = (Helena);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Ashby.js\nvar Ashby_COLOR_FILTER_CONST=[255,160,25,.1],Ashby_BRIGHTNESS_CONST=.1;function Ashby(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Ashby_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.brightness([b[d],b[d+1],b[d+2]],Ashby_BRIGHTNESS_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Ashby = (Ashby);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/Charmes.js\nvar Charmes_COLOR_FILTER_CONST=[255,50,80,.12],Charmes_CONTRAST_CONST=.05;function Charmes(a){for(var b=a.data,c=b.length,d=0;d<c;d+=4){var e=filters_BaseFilters.colorFilter([b[d],b[d+1],b[d+2]],Charmes_COLOR_FILTER_CONST),f=(0,slicedToArray/* default */.Z)(e,3);b[d]=f[0],b[d+1]=f[1],b[d+2]=f[2];var g=filters_BaseFilters.contrast([b[d],b[d+1],b[d+2]],Charmes_CONTRAST_CONST),h=(0,slicedToArray/* default */.Z)(g,3);b[d]=h[0],b[d+1]=h[1],b[d+2]=h[2]}}/* harmony default export */ const filters_Charmes = (Charmes);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/filters/index.js\n\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/filterStrToClass.js\nvar filterStrToClass=function(a){return a?filters_namespaceObject[a]||lib.Filters[a]:null};/* harmony default export */ const utils_filterStrToClass = (filterStrToClass);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/finetunes/Warmth.js\nfunction Warmth(a){for(var b=this.warmth(),c=a.data,d=c.length,e=0;e<d;e+=4)c[e]+=b,c[e+2]-=b}/* harmony default export */ const finetunes_Warmth = (Warmth);Factory.addGetterSetter(lib.Image,"warmth",0,getNumberValidator(),Factory.afterSetFilter);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/finetunes/CustomThreshold.js\nfunction CustomThreshold(a){for(var b=this.threshold(),c=a.data,d=c.length,e=0;e<d;e+=4)0===b||(c[e]=c[e]>=b?255:0,c[e+1]=c[e+1]>=b?255:0,c[e+2]=c[e+2]>=b?255:0)}/* harmony default export */ const finetunes_CustomThreshold = (CustomThreshold);Factory.addGetterSetter(lib.Image,"threshold",0,getNumberValidator,Factory.afterSetFilter);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/custom/finetunes/index.js\n\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/finetunesStrsToClasses.js\nvar finetunesStrsToClasses=function(a){return Array.isArray(a)&&0<a.length?a.map(function(a){return lib.Filters[a]||finetunes_namespaceObject[a]}):[]};/* harmony default export */ const utils_finetunesStrsToClasses = (finetunesStrsToClasses);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/context/getInitialAppState.js\nfunction getInitialAppState_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function getInitialAppState_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?getInitialAppState_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):getInitialAppState_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var getInitialAppState=function(){var a,b,c=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},d=getInitialAppState_objectSpread({},c.loadableDesignState);return Array.isArray(d.finetunes)&&(d.finetunes=utils_finetunesStrsToClasses(d.finetunes)),d.filter&&(d.filter=utils_filterStrToClass(d.filter)),getInitialAppState_objectSpread(getInitialAppState_objectSpread({imgSrc:"string"==typeof c.source?c.source:(null===(a=c.source)||void 0===a?void 0:a.src)||"",finetunes:[],finetunesProps:{},filter:null,adjustments:{crop:{ratio:c[TOOLS_IDS.CROP].ratio,ratioTitleKey:null!==(b=c[TOOLS_IDS.CROP].ratioTitleKey)&&void 0!==b?b:c[TOOLS_IDS.CROP].ratio,width:null,height:null,x:0,y:0},isFlippedX:!1,isFlippedY:!1,rotation:0},annotations:{},resize:{},shownImageDimensions:{}},d),{},{pointerCssIcon:POINTER_ICONS.DEFAULT,canvasScale:1,zoom:{factor:DEFAULT_ZOOM_FACTOR,x:null,y:null},isLoadingGlobally:!0,selectionsIds:[],tabId:c.defaultTabId||null,toolId:c.defaultToolId||null,feedback:{},pastDesignStates:[],futureDesignStates:[],isResetted:!0,haveNotSavedChanges:!1,latestColor:void 0})};/* harmony default export */ const context_getInitialAppState = (getInitialAppState);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/extractCurrentDesignState.js\nvar extractCurrentDesignState=function(a){var b=context_getInitialAppState(defaultConfig);return{imgSrc:a.imgSrc||b.imgSrc,finetunes:a.finetunes||b.finetunes,finetunesProps:a.finetunesProps||b.finetunesProps,filter:a.filter||b.filter,adjustments:a.adjustments||b.adjustments,annotations:a.annotations||b.annotations,resize:a.resize||b.resize}};/* harmony default export */ const utils_extractCurrentDesignState = (extractCurrentDesignState);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/redo.js\nfunction redo_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function redo_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?redo_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):redo_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var REDO="REDO";var redo=function(a){if(a.futureDesignStates&&0<a.futureDesignStates.length){var b=utils_extractCurrentDesignState(a),c=_toArray(a.futureDesignStates),d=c[0],e=c.slice(1),f=[b].concat((0,toConsumableArray/* default */.Z)(a.pastDesignStates||[]));return redo_objectSpread(redo_objectSpread(redo_objectSpread({},a),d),{},{selectionsIds:[],pastDesignStates:f,futureDesignStates:e,hasUndo:!0,hasRedo:0<e.length,haveNotSavedChanges:!0})}return a};/* harmony default export */ const actions_redo = (redo);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/reset.js\nfunction reset_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function reset_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?reset_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):reset_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var RESET="RESET";var reset_reset=function(a){var b=utils_extractCurrentDesignState({imgSrc:a.imgSrc});return reset_objectSpread(reset_objectSpread(reset_objectSpread({},a),b),{},{selectionsIds:[],isResetted:!0,pastDesignStates:[],futureDesignStates:[],hasUndo:!1,hasRedo:!1,haveNotSavedChanges:!1})};/* harmony default export */ const actions_reset = (reset_reset);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setFeedback.js\nfunction setFeedback_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setFeedback_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setFeedback_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setFeedback_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_FEEDBACK="SET_FEEDBACK";var setFeedback=function(a,b){return setFeedback_objectSpread(setFeedback_objectSpread({},a),{},{isLoadingGlobally:!1,feedback:b.feedback||{}})};/* harmony default export */ const actions_setFeedback = (setFeedback);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/showLoader.js\nfunction showLoader_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function showLoader_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?showLoader_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):showLoader_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SHOW_LOADER="SHOW_LOADER";var showLoader=function(a){return showLoader_objectSpread(showLoader_objectSpread({},a),{},{isLoadingGlobally:!0})};/* harmony default export */ const actions_showLoader = (showLoader);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/utils/functions/intrinsic-component.js\n\n\n/**\n * Wrapper around React\'s `forwardRef` function, which adds a `displayName` to each component\n * created using it\n */\nfunction intrinsicComponent(render, displayName) {\n  var component = /*#__PURE__*/(0,react.forwardRef)(render); // eslint-disable-next-line immutable/no-mutation\n\n  component.displayName = displayName || render.name;\n  return component;\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/brightness.js\n\n\nvar _excluded = ["color", "stroke", "size"];\n\n\nvar Brightness = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? \'currentColor\' : _ref$stroke,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M23.54 1.53186C23.54 0.96198 24.002 0.5 24.5719 0.5C25.1417 0.5 25.6037 0.961981 25.6037 1.53186V5.82108C25.6037 6.39096 25.1417 6.85294 24.5719 6.85294C24.002 6.85294 23.54 6.39096 23.54 5.82108V1.53186ZM23.54 43.1985C23.54 42.6287 24.002 42.1667 24.5719 42.1667C25.1417 42.1667 25.6037 42.6287 25.6037 43.1985V47.4877C25.6037 48.0576 25.1417 48.5196 24.5719 48.5196C24.002 48.5196 23.54 48.0576 23.54 47.4877V43.1985ZM47.4876 23.5397C48.0574 23.5397 48.5194 24.0017 48.5194 24.5716C48.5194 25.1415 48.0574 25.6034 47.4876 25.6034H43.1983C42.6285 25.6034 42.1665 25.1415 42.1665 24.5716C42.1665 24.0017 42.6285 23.5397 43.1984 23.5397H47.4876ZM5.8209 23.5397C6.39078 23.5397 6.85276 24.0017 6.85276 24.5716C6.85276 25.1415 6.39078 25.6034 5.82089 25.6034H1.53168C0.961798 25.6034 0.499817 25.1415 0.499817 24.5716C0.499817 24.0017 0.961797 23.5397 1.53168 23.5397H5.8209ZM41.6177 39.8976C42.0207 40.3006 42.0207 40.9539 41.6177 41.3569C41.2147 41.7599 40.5614 41.7599 40.1584 41.3569L37.1255 38.324C36.7225 37.921 36.7225 37.2677 37.1255 36.8647C37.5285 36.4617 38.1818 36.4617 38.5848 36.8647L41.6177 39.8976ZM12.1551 10.4347C12.558 10.8377 12.558 11.491 12.1551 11.894C11.7521 12.297 11.0988 12.297 10.6958 11.894L7.66285 8.86105C7.25989 8.45808 7.25989 7.80474 7.66286 7.40178C8.06582 6.99881 8.71916 6.99881 9.12213 7.40178L12.1551 10.4347ZM9.12179 41.617C8.71882 42.0199 8.06548 42.0199 7.66251 41.617C7.25955 41.214 7.25955 40.5607 7.66251 40.1577L10.6954 37.1248C11.0984 36.7218 11.7518 36.7218 12.1547 37.1248C12.5577 37.5277 12.5577 38.1811 12.1547 38.584L9.12179 41.617ZM38.5862 12.1549C38.1832 12.5579 37.5299 12.5579 37.1269 12.1549C36.724 11.752 36.724 11.0986 37.1269 10.6957L40.1599 7.66274C40.5628 7.25977 41.2162 7.25977 41.6191 7.66274C42.0221 8.06571 42.0221 8.71905 41.6191 9.12201L38.5862 12.1549ZM38.7161 24.5098C38.7161 32.3555 32.3559 38.7157 24.5102 38.7157C16.6645 38.7157 10.3043 32.3555 10.3043 24.5098C10.3043 16.6641 16.6645 10.3039 24.5102 10.3039C32.3559 10.3039 38.7161 16.6641 38.7161 24.5098ZM24.5102 36.652C31.2161 36.652 36.6524 31.2157 36.6524 24.5098C36.6524 17.8039 31.2161 12.3676 24.5102 12.3676C17.8043 12.3676 12.3681 17.8039 12.3681 24.5098C12.3681 31.2157 17.8043 36.652 24.5102 36.652Z",\n    fill: color,\n    stroke: stroke\n  }));\n});\n/* harmony default export */ const brightness = ((/* unused pure expression or super */ null && (Brightness)));\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/intrinsic-component.js\n\n\n/**\n * Wrapper around React\'s `forwardRef` function, which adds a `displayName` to each component\n * created using it\n */\nfunction intrinsic_component_intrinsicComponent(render, displayName) {\n  var component = /*#__PURE__*/(0,react.forwardRef)(render); // eslint-disable-next-line immutable/no-mutation\n\n  component.displayName = displayName || render.name;\n  return component;\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/label/types/type.js\nvar Type = {\n  Default: \'default\',\n  Localization: \'localization\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/generate-class-names.js\n\nfunction generateClassNames(componentName, subClassNames) {\n  var generateClassName = function generateClassName(subClassName) {\n    return "Sfx".concat(componentName).concat(subClassName ? "-".concat(subClassName) : \'\');\n  };\n\n  var classNameArray = [];\n\n  if (subClassNames) {\n    if (Array.isArray(subClassNames)) {\n      classNameArray.push.apply(classNameArray, (0,toConsumableArray/* default */.Z)(subClassNames.filter(function (subClassName) {\n        return typeof subClassName === \'string\';\n      }).map(function (subClassName) {\n        return generateClassName(subClassName);\n      })));\n    } else if (typeof subClassNames === \'string\') {\n      classNameArray.push(generateClassName(subClassNames));\n    }\n  }\n\n  if (classNameArray.length === 0) {\n    classNameArray.push(generateClassName());\n  }\n\n  return classNameArray.join(\' \');\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/apply-display-names.js\n\n\n/**\n * If you are using a namespace for your styled components, this can come in handy giving each\n * styled component in this namespace a displayName which gives better debugging experience\n */\nfunction applyDisplayNames(styledObject) {\n  return Object.keys(styledObject).reduce(function (newStyledObject, styledComponentName) {\n    var styledComponent = styledObject[styledComponentName];\n    styledComponent.displayName = "".concat(styledComponentName);\n    return Object.assign(newStyledObject, (0,defineProperty/* default */.Z)({}, styledComponentName, styledComponent));\n  }, {});\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/label/label.mixin.js\n\n // import { Type } from \'./types\';\n// export const sizeInputMixin = {\n//   [Size.Sm]: css`\n//     height: 24px;\n//   `,\n//   [Size.Md]: css`\n//     height: 30px;\n//   `,\n// };\n\nvar errorMixin = function errorMixin(_ref) {\n  var palette = _ref.theme.palette;\n  return Ce(["color:", " !important;"], palette[Color.Error]);\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/label/label.styles.js\n\n\n\n\nvar baseClassName = \'Label\';\nvar label_styles_Label = /*#__PURE__*/styled_components_browser_esm.label.attrs({\n  className: generateClassNames(baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-16k2ql4-0"\n})(function (_ref) {\n  var _ref$error = _ref.error,\n      error = _ref$error === void 0 ? false : _ref$error,\n      htmlFor = _ref.htmlFor,\n      theme = _ref.theme;\n  return Ce(["display:flex;align-items:center;color:", ";font-style:normal;font-weight:normal;font-size:12px;line-height:14px;cursor:", ";", ";"], theme.palette[Color.TextSecondary], htmlFor && \'pointer\', error && errorMixin);\n});\nvar Icon = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(baseClassName, \'Icon\')\n}).withConfig({\n  componentId: "sc-16k2ql4-1"\n})(function (_ref2) {\n  var _ref2$error = _ref2.error,\n      error = _ref2$error === void 0 ? false : _ref2$error,\n      palette = _ref2.theme.palette,\n      _ref2$$end = _ref2.$end,\n      $end = _ref2$$end === void 0 ? false : _ref2$$end;\n  return Ce(["display:flex;", ";color:", ";", ""], $end ? \'margin-left: 4px\' : \'margin-right: 4px\', palette[Color.IconsPrimary], error ? "color: ".concat(palette[Color.Error], ";") : \'\');\n});\nvar label_styles_Styled = applyDisplayNames({\n  Label: label_styles_Label,\n  Icon: Icon\n});\n/* harmony default export */ const label_styles = (label_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/label/label.component.js\n\n\nvar label_component_excluded = ["children", "iconStart", "iconEnd", "error", "type"];\n\n\n\n\n\nvar label_component_Label = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      iconStart = _ref.iconStart,\n      iconEnd = _ref.iconEnd,\n      error = _ref.error,\n      type = _ref.type,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, label_component_excluded);\n\n  var renderIcon = function renderIcon(icon, end) {\n    return /*#__PURE__*/react.createElement(label_styles.Icon, {\n      error: Boolean(error),\n      $end: end\n    }, typeof icon === \'function\' ? icon() : icon);\n  };\n\n  return /*#__PURE__*/react.createElement(label_styles.Label, (0,esm_extends/* default */.Z)({\n    ref: ref,\n    error: error,\n    type: type\n  }, rest), iconStart && renderIcon(iconStart, false), children, iconEnd && renderIcon(iconEnd, true));\n});\nlabel_component_Label.defaultProps = {\n  type: Type.Default,\n  error: false\n};\nvar propTypes = {\n  type: prop_types_default().oneOf(objectValues(Type)),\n  iconStart: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]),\n  iconEnd: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]),\n  error: (prop_types_default()).bool,\n  htmlFor: (prop_types_default()).string\n};\nlabel_component_Label.propTypes = propTypes;\n/* harmony default export */ const label_component = (label_component_Label);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/ToolsBar/ToolsBar.styled.js\nvar StyledToolsBar=styled_components_browser_esm.div.withConfig({componentId:"sc-dwg14p-0"})(["padding:8px 1px 0;width:fit-content;margin:0 auto;max-width:99.5%;max-height:92px;[data-phone=\'true\'] &{padding:0;margin-top:8px;max-height:initial;}"]),StyledToolsBarItems=styled_components_browser_esm.div.withConfig({componentId:"sc-dwg14p-1"})(["display:flex;align-items:center;overflow-x:auto;[data-phone=\'true\'] &{background:",";}"],function(a){var b=a.theme;return b.palette["bg-primary"]}),StyledToolsBarItemButton=styled_components_browser_esm.div.withConfig({componentId:"sc-dwg14p-2"})(function(a){var b=a.theme;return"\\n    display: flex;\\n    border-radius: 2px;\\n    align-items: center;\\n    justify-content: center;\\n    padding: 8px;\\n\\n    &:not(:last-child) {\\n      margin-right: 8px;\\n    }\\n\\n    &,\\n    * {\\n      cursor: pointer;\\n    }\\n\\n    &:hover {\\n      background: ".concat(b.palette["bg-primary-active"],";\\n    }\\n\\n    &[aria-selected=\'true\'] {\\n      background: ").concat(b.palette["bg-primary-active"],";\\n\\n      * {\\n        color: ").concat(b.palette["accent-primary-active"],";\\n      }\\n    }\\n  ")}),StyledToolsBarItemButtonLabel=styled_components_browser_esm(label_component).withConfig({componentId:"sc-dwg14p-3"})(["margin-left:6px;"]),StyledToolsBarItemOptionsWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-dwg14p-4"})(["position:relative;width:100%;transition:max-height 100ms ease-in-out;display:flex;justify-content:center;align-items:center;",";"],function(a){return"\\n      max-height: ".concat(a.hasChildren?"40px":0,";\\n      margin: ").concat(a.hasChildren?"0 auto 8px":0,";\\n    ")});\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/ToolsBar/ToolsBarItemButton.js\nvar ToolsBarItemButton=function(a){var b=a.id,c=a.label,d=a.onClick,e=a.Icon,f=a.isSelected,g=a.children,h=a.className,i=(0,react.useCallback)(function(a){d(b,a)},[]);return react.createElement(StyledToolsBarItemButton,{className:h,onClick:i,"aria-selected":f},react.createElement(e,{size:16}),c&&react.createElement(StyledToolsBarItemButtonLabel,null,c),g)};ToolsBarItemButton.defaultProps={isSelected:!1,id:void 0,children:null,label:""};/* harmony default export */ const ToolsBar_ToolsBarItemButton = ((0,react.memo)(ToolsBarItemButton));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Brightness/Brightness.js\nvar Brightness_Brightness=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_brightness-tool-button",id:TOOLS_IDS.BRIGHTNESS,label:d("brightnessTool"),Icon:Brightness,onClick:b,isSelected:c})};Brightness_Brightness.defaultProps={isSelected:!1};/* harmony default export */ const tools_Brightness_Brightness = (Brightness_Brightness);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/context/AppContext.js\nvar AppContext=(0,react.createContext)({});/* harmony default export */ const context_AppContext = (AppContext);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/theme/hooks/use-theme.js\n\nfunction useTheme() {\n  return Ze();\n}\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/context/defaultTranslations.js\n/* harmony default export */ const defaultTranslations = ({name:"Name",save:"Save",saveAs:"Save as",back:"Back",loading:"Loading...",resetOperations:"Reset/delete all operations",changesLoseConfirmation:"All changes will be lost",changesLoseConfirmationHint:"Are you sure you want to continue?",cancel:"Cancel",continue:"Continue",undoTitle:"Undo last operation",redoTitle:"Redo last operation",showImageTitle:"Show original image",zoomInTitle:"Zoom in",zoomOutTitle:"Zoom out",toggleZoomMenuTitle:"Toggle zoom menu",adjustTab:"Adjust",finetuneTab:"Finetune",filtersTab:"Filters",watermarkTab:"Watermark",annotateTab:"Draw",resize:"Resize",resizeTab:"Resize",invalidImageError:"Invalid image provided.",uploadImageError:"Error while uploading the image.",areNotImages:"are not images",isNotImage:"is not image",toBeUploaded:"to be uploaded",cropTool:"Crop",original:"Original",custom:"Custom",square:"Square",landscape:"Landscape",portrait:"Portrait",ellipse:"Ellipse",classicTv:"Classic TV",cinemascope:"Cinemascope",arrowTool:"Arrow",blurTool:"Blur",brightnessTool:"Brightness",contrastTool:"Contrast",ellipseTool:"Ellipse",unFlipX:"Un-Flip X",flipX:"Flip X",unFlipY:"Un-Flip Y",flipY:"Flip Y",hsvTool:"HSV",hue:"Hue",saturation:"Saturation",value:"Value",imageTool:"Image",importing:"Importing...",addImage:"+ Add image",lineTool:"Line",penTool:"Pen",polygonTool:"Polygon",sides:"Sides",rectangleTool:"Rectangle",cornerRadius:"Corner Radius",resizeWidthTitle:"Width in pixels",resizeHeightTitle:"Height in pixels",toggleRatioLockTitle:"Toggle ratio lock",reset:"Reset",resetSize:"Reset to original image size",rotateTool:"Rotate",textTool:"Text",textSpacings:"Text spacings",textAlignment:"Text alignment",fontFamily:"Font family",size:"Size",letterSpacing:"Letter Spacing",lineHeight:"Line height",warmthTool:"Warmth",addWatermark:"+ Add watermark",addWatermarkTitle:"Choose the watermark type",uploadWatermark:"Upload watermark",addWatermarkAsText:"Add as text",padding:"Padding",shadow:"Shadow",horizontal:"Horizontal",vertical:"Vertical",blur:"Blur",opacity:"Opacity",position:"Position",stroke:"Stroke",saveAsModalLabel:"Save the image as",extension:"Extension",nameIsRequired:"Name is required.",quality:"Quality",imageDimensionsHoverTitle:"Saved image size (width x height)",cropSizeLowerThanResizedWarning:"Note, the selected crop area is lower than the applied resize which might cause quality decrease",actualSize:"Actual size (100%)",fitSize:"Fit size"});\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/translator.js\nfunction translator_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function translator_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?translator_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):translator_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var backendTranslations={},activatedTranslations=translator_objectSpread({},defaultTranslations),hardcodedErrorMsg="Error while loading translations from backend.";var updateTranslations=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"en";return Object.assign(activatedTranslations,backendTranslations[null===b||void 0===b?void 0:b.toLowerCase()]||{},a)};var sendMissingTranslationsToBackend=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:[];return new Promise(function(b,c){var d=new XMLHttpRequest;d.responseType="json",d.onload=function(){if(200<=d.status&&300>d.status)b(d.response);else{var a;console.warn("Error in sending translation key to backend ".concat(null===(a=d.response)||void 0===a?void 0:a.hint,", ").concat(d.status)),c()}},d.onerror=function(){var a;console.warn("Error in sending translation key to backend ".concat(null===(a=d.response)||void 0===a?void 0:a.hint,", ").concat(d.status)),c()};d.open("POST","https://i18n.ultrafast.io/import/request-translations?grid_uuid=".concat(TRANSLATIONS_GRID_UUID)),d.send(JSON.stringify({grid_uuid:TRANSLATIONS_GRID_UUID,translations_requests:a}))})};var getBackendTranslations=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:"en",b=1<arguments.length?arguments[1]:void 0;return new Promise(function(c,d){var e=a.toLowerCase(),f=new XMLHttpRequest;f.responseType="json",f.onload=function(){if(200<=f.status&&300>f.status){(f.response||[]).forEach(function(a){backendTranslations[e]=translator_objectSpread(translator_objectSpread({},backendTranslations[e]),{},(0,defineProperty/* default */.Z)({},a.translation_key,a.translations[e]))});var i=[];Object.keys(defaultTranslations).forEach(function(a){var b;a&&!(null!==(b=backendTranslations[e])&&void 0!==b&&b[a])&&i.push({key:a,lang:e,default:defaultTranslations[a]})}),0<i.length&&sendMissingTranslationsToBackend(i),updateTranslations(b,e),c(activatedTranslations)}else{var a,g,h;console.error("Status code: ".concat(f.status)),console.error((null===(a=f.response)||void 0===a?void 0:a.msg)||(null===(g=f.response)||void 0===g?void 0:g.msg)||(null===(h=f.response)||void 0===h?void 0:h.details)||hardcodedErrorMsg),d()}},f.onerror=function(){console.error("Status code ".concat(f.status,", error: ").concat(hardcodedErrorMsg)),d()},f.open("GET","https://i18n.ultrafast.io/api/export?grid=".concat(TRANSLATIONS_GRID_UUID)),f.send()})};var translate=function(a){return activatedTranslations[a]||a||""};\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/context/appReducer.js\nvar appReducer=function(a,b){return actions[b.type]?actions[b.type](a,b.payload)||a:a};/* harmony default export */ const context_appReducer = (appReducer);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/context/AppProvider.js\nfunction AppProvider_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function AppProvider_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?AppProvider_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):AppProvider_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var isFieMounted=!0,AppProvider=function(a){var b=a.children,c=a.config,d=void 0===c?{}:c,e=hooks_useAppReducer(context_appReducer,context_getInitialAppState(d),d),f=(0,slicedToArray/* default */.Z)(e,2),g=f[0],h=f[1];(0,react.useEffect)(function(){return isFieMounted=!0,function(){isFieMounted=!1}},[]);var i=(0,react.useCallback)(function(){isFieMounted&&h.apply(void 0,arguments)},[h]);(0,react.useEffect)(function(){updateTranslations(d.translations,d.language)},[d.useBackendTranslations,d.language,d.translations]);var j=useTheme(),k=(0,react.useMemo)(function(){return AppProvider_objectSpread(AppProvider_objectSpread({},g),{},{config:d,theme:j,dispatch:i,t:translate})},[d,g]);return react.createElement(context_AppContext.Provider,{value:k},b)};AppProvider.defaultProps={config:{}};/* harmony default export */ const context_AppProvider = (AppProvider);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/context/AppProviderOverridenValue.js\nvar AppProviderOverridenValue=function(a){var b=a.children,c=a.overridingValue;return react.createElement(context_AppContext.Provider,{value:c},b)};/* harmony default export */ const context_AppProviderOverridenValue = (AppProviderOverridenValue);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/context/index.js\n/* harmony default export */ const context = (context_AppContext);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useStore.js\nvar useStore=function(){return (0,react.useContext)(context)};/* harmony default export */ const hooks_useStore = (useStore);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useFinetune.js\nfunction useFinetune_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function useFinetune_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?useFinetune_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):useFinetune_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var useFinetune=function(a,b){var c=hooks_useStore(),d=c.dispatch,e=c.finetunes,f=c.finetunesProps,g=(0,react.useCallback)(function(b){d({type:SET_FINETUNE,payload:{finetune:a,finetuneProps:b}})},[]);return (0,react.useEffect)(function(){e.includes(a)||g(useFinetune_objectSpread(useFinetune_objectSpread({},b),f))},[]),(0,react.useMemo)(function(){return[f,g]},[f])};/* harmony default export */ const hooks_useFinetune = (useFinetune);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useFilter.js\nvar useFilter=function(){var a=hooks_useStore(),b=a.dispatch,c=a.filter,d=(0,react.useCallback)(function(a){b({type:ADD_FILTER,payload:{filter:a}})},[]);return (0,react.useMemo)(function(){return[c,d]},[c])};/* harmony default export */ const hooks_useFilter = (useFilter);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/randomId.js\nvar randomId=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:"";return"".concat(a).concat(a?"-":"").concat(parseInt(Date.now()*Math.random(),10))};/* harmony default export */ const utils_randomId = (randomId);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/debounce.js\nvar debounce=function(a){var b,c=1<arguments.length&&arguments[1]!==void 0?arguments[1]:300;return function(){var d,e;clearTimeout(b);for(var f=arguments.length,g=Array(f),h=0;h<f;h++)g[h]=arguments[h];var i=g[0],j=g.slice(1);b=setTimeout(a.bind.apply(a,[null,null!==(d=null===i||void 0===i||null===(e=i.target)||void 0===e?void 0:e.value)&&void 0!==d?d:i].concat((0,toConsumableArray/* default */.Z)(j))),c)}};/* harmony default export */ const utils_debounce = (debounce);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getScrollOffset.js\nvar getScrollOffset=function(){var a,b,c=document,d=c.body,e=document.documentElement,f=(null===(a=window)||void 0===a?void 0:a.pageYOffset)||e.scrollTop||d.scrollTop,g=(null===(b=window)||void 0===b?void 0:b.pageXOffset)||e.scrollLeft||d.scrollLeft;return{topOffset:f,leftOffset:g}};/* harmony default export */ const utils_getScrollOffset = (getScrollOffset);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getElemDocumentCoords.js\nvar getElemDocumentCoords=function(a){if(!a)return null;var b=a.getBoundingClientRect(),c=document,d=c.body,e=utils_getScrollOffset(),f=e.topOffset,g=e.leftOffset,h=document.documentElement,i=h.clientTop||d.clientTop||0,j=h.clientLeft||d.clientLeft||0,k=b.top+f-i,l=b.left+g-j;return{top:Math.round(k),left:Math.round(l),width:b.width,height:b.height}};/* harmony default export */ const utils_getElemDocumentCoords = (getElemDocumentCoords);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/restrictNumber.js\nvar restrictNumber=function(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:0,c=2<arguments.length?arguments[2]:void 0;return Math.min(Math.max(b,+a),c||1e6)};/* harmony default export */ const utils_restrictNumber = (restrictNumber);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getPointerOffsetPositionBoundedToObject.js\nvar getPointerOffsetPositionBoundedToObject=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:{},c=a.parent,d=c.getStage(),e=d.attrs.zoomFactor,f=c.getRelativePointerPosition();return{offsetX:utils_restrictNumber(f.x,0,b.width/(d.scaleX()/e))+c.attrs.xPadding,offsetY:utils_restrictNumber(f.y,0,b.height/(d.scaleY()/e))+c.attrs.yPadding}};/* harmony default export */ const utils_getPointerOffsetPositionBoundedToObject = (getPointerOffsetPositionBoundedToObject);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useAnnotation/getBoundingRectUnScaled.js\nvar getBoundingRectUnScaled=function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},c=2<arguments.length?arguments[2]:void 0,d={},e=c.parent.attrs;return d.x=Math.min(a.offsetX,b.startedX)-e.xPadding||0,d.y=Math.min(a.offsetY,b.startedY)-e.yPadding||0,d.width=a.offsetX-b.startedX,d.height=a.offsetY-b.startedY,d.startedX=b.startedX-e.xPadding||0,d.startedY=b.startedY-e.yPadding||0,d};/* harmony default export */ const useAnnotation_getBoundingRectUnScaled = (getBoundingRectUnScaled);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useAnnotation/getNewAnnotationPreview.js\nvar _annotationsNamesToKo,getNewAnnotationPreview_excluded=["width","height","startedX","startedY"];function getNewAnnotationPreview_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function getNewAnnotationPreview_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?getNewAnnotationPreview_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):getNewAnnotationPreview_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var annotationsNamesToKonvaClasses=(_annotationsNamesToKo={},(0,defineProperty/* default */.Z)(_annotationsNamesToKo,TOOLS_IDS.RECT,lib.Rect),(0,defineProperty/* default */.Z)(_annotationsNamesToKo,TOOLS_IDS.ELLIPSE,lib.Ellipse),(0,defineProperty/* default */.Z)(_annotationsNamesToKo,TOOLS_IDS.POLYGON,lib.RegularPolygon),(0,defineProperty/* default */.Z)(_annotationsNamesToKo,TOOLS_IDS.LINE,lib.Line),(0,defineProperty/* default */.Z)(_annotationsNamesToKo,TOOLS_IDS.IMAGE,lib.Image),(0,defineProperty/* default */.Z)(_annotationsNamesToKo,TOOLS_IDS.TEXT,lib.Text),(0,defineProperty/* default */.Z)(_annotationsNamesToKo,TOOLS_IDS.ARROW,lib.Arrow),_annotationsNamesToKo),ANNOTATIONS_WITH_POINTS=[TOOLS_IDS.LINE,TOOLS_IDS.ARROW];var NO_WIDTH_HEIGHT_ANNOTATIONS=[].concat(ANNOTATIONS_WITH_POINTS,[TOOLS_IDS.ELLIPSE,TOOLS_IDS.POLYGON]);var getNewAnnotationPreview=function(a){var b,c,d;return new annotationsNamesToKonvaClasses[a.name](getNewAnnotationPreview_objectSpread(getNewAnnotationPreview_objectSpread({},a),{},{opacity:null!==(b=a.opacity)&&void 0!==b?b:.7,x:null!==(c=a.x)&&void 0!==c?c:0,y:null!==(d=a.y)&&void 0!==d?d:0,width:Math.abs(a.width)||0,height:Math.abs(a.height)||0},ANNOTATIONS_WITH_POINTS.includes(a.name)?{stroke:a.stroke||"#000000"}:{}))};var dimensToProperAnnotationDimens=function(a,b,c){var d=a.width,e=a.height,f=a.startedX,g=a.startedY,h=(0,objectWithoutProperties/* default */.Z)(a,getNewAnnotationPreview_excluded),i=Math.abs(d),j=Math.abs(e),k=0>d,l=0>e;switch(b){case TOOLS_IDS.RECT:c?(h.width=Math.sqrt(i*i+j*j),h.height=h.width,h.x-=k?h.width-i:0,h.y-=l?h.height-j:0):(h.width=i,h.height=j);break;case TOOLS_IDS.ELLIPSE:c?(h.radiusX=Math.sqrt(i*i+j*j)/2,h.radiusY=h.radiusX,h.x-=k?2*h.radiusX-i:0,h.y-=l?2*h.radiusY-j:0):(h.radiusX=i/2,h.radiusY=j/2),h.offsetX=-h.radiusX,h.offsetY=-h.radiusY;break;case TOOLS_IDS.POLYGON:h.radius=(i+j)/2,h.x-=k?2*h.radius-i:0,h.y-=l?2*h.radius-j:0,h.offsetX=-h.radius,h.offsetY=-h.radius;break;case TOOLS_IDS.LINE:case TOOLS_IDS.ARROW:h.x=f,h.y=g,h.points=[0,0],c?h.points.push(i>=j?d:0,j>i?e:0):h.points=[0,0,d,e];break;default:h.width=i,h.height=j;}return h};/* harmony default export */ const useAnnotation_getNewAnnotationPreview = (getNewAnnotationPreview);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useAnnotation/previewThenCallAnnotationAdding.js\nvar previewThenCallAnnotationAdding_excluded=["id","x","y","points"],_excluded2=["startedX","startedY","offsetX","offsetY","width","height"];function previewThenCallAnnotationAdding_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function previewThenCallAnnotationAdding_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?previewThenCallAnnotationAdding_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):previewThenCallAnnotationAdding_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var pointerDown={startedX:void 0,startedY:void 0,isOutOfCanvas:!1},eventsOptions={passive:!0},MIN_PIXELS=1,shownAnnotationPreview=null,textAnnotationWrappedRect=null,latestAnnotationProps=null,previewThenCallAnnotationAdding=function(a,b,c,d){var f=function(){return utils_getElemDocumentCoords(a.content)},g=function(a){textAnnotationWrappedRect=useAnnotation_getNewAnnotationPreview(previewThenCallAnnotationAdding_objectSpread(previewThenCallAnnotationAdding_objectSpread({},a),{},{name:TOOLS_IDS.RECT,fill:"",stroke:"#000000",strokeWidth:2,shadowColor:"#ffffff",shadowBlur:1,shadowOpacity:.7})),c.add(textAnnotationWrappedRect)},h=function(a){shownAnnotationPreview=useAnnotation_getNewAnnotationPreview(a),c.add(shownAnnotationPreview),a.name===TOOLS_IDS.TEXT&&g(a),latestAnnotationProps=a},i=function(a,b){var c=dimensToProperAnnotationDimens(a,latestAnnotationProps.name,b);textAnnotationWrappedRect&&textAnnotationWrappedRect.setAttrs(c),shownAnnotationPreview.setAttrs(c),latestAnnotationProps=previewThenCallAnnotationAdding_objectSpread(previewThenCallAnnotationAdding_objectSpread({},latestAnnotationProps),c)},j=function(a){var b=utils_getPointerOffsetPositionBoundedToObject(c,f());i(useAnnotation_getBoundingRectUnScaled(b,pointerDown,c),a.shiftKey)},k=function(){c&&shownAnnotationPreview&&c.destroyChildren()},l=function(a){var d;if(!(1<(null===(d=a.evt.touches)||void 0===d?void 0:d.length))){var e=utils_getPointerOffsetPositionBoundedToObject(c,f());pointerDown.isOutOfCanvas&&(document.removeEventListener("mousemove",j,eventsOptions),document.removeEventListener("touchmove",j,eventsOptions),pointerDown.isOutOfCanvas=!1);var g=useAnnotation_getBoundingRectUnScaled(e,pointerDown,c);if(shownAnnotationPreview)i(g,a.evt.shiftKey);else{var k=b.id,l=b.x,m=b.y,n=b.points,o=(0,objectWithoutProperties/* default */.Z)(b,previewThenCallAnnotationAdding_excluded);h(previewThenCallAnnotationAdding_objectSpread(previewThenCallAnnotationAdding_objectSpread({},o),g))}}},m=function(){pointerDown.isOutOfCanvas||(document.addEventListener("mousemove",j,eventsOptions),document.addEventListener("touchmove",j,eventsOptions),pointerDown.isOutOfCanvas=!0)},n=function(){var c,e;if(k(),latestAnnotationProps&&(latestAnnotationProps.width>=MIN_PIXELS&&latestAnnotationProps.height>=MIN_PIXELS||latestAnnotationProps.radiusX>=MIN_PIXELS&&latestAnnotationProps.radiusY>=MIN_PIXELS||null!==(c=latestAnnotationProps.points)&&void 0!==c&&c[2]||null!==(e=latestAnnotationProps.points)&&void 0!==e&&e[3]||latestAnnotationProps.radius>=MIN_PIXELS)){var f=latestAnnotationProps,g=f.startedX,h=f.startedY,i=f.offsetX,o=f.offsetY,p=f.width,q=f.height,r=(0,objectWithoutProperties/* default */.Z)(f,_excluded2);NO_WIDTH_HEIGHT_ANNOTATIONS.includes(b.name)||(r.width=p,r.height=q),d(r,!0)}shownAnnotationPreview=null,textAnnotationWrappedRect=null,latestAnnotationProps=null,a.off("mousemove touchmove",l),a.off("mouseleave touchcancel",m),document.removeEventListener("mouseup",n,eventsOptions),document.removeEventListener("touchend",n,eventsOptions),document.removeEventListener("mouseleave",n,eventsOptions),document.removeEventListener("touchcancel",n,eventsOptions),document.removeEventListener("mousemove",j,eventsOptions),document.removeEventListener("touchmove",j,eventsOptions),pointerDown.isOutOfCanvas=!1},o=function(b){var d;if(b.evt.preventDefault(),!(b.target.attrs.draggable||1<(null===(d=b.evt.touches)||void 0===d?void 0:d.length))){k();var e=utils_getPointerOffsetPositionBoundedToObject(c,f());pointerDown.startedX=e.offsetX,pointerDown.startedY=e.offsetY,pointerDown.isOutOfCanvas=!1,a.on("mousemove touchmove",l),a.on("mouseleave touchcancel",m),document.addEventListener("mouseup",n,eventsOptions),document.addEventListener("touchend",n,eventsOptions),document.addEventListener("mouseleave",n,eventsOptions),document.addEventListener("touchcancel",n,eventsOptions)}};return a.on("mousedown touchstart",o),function(){k(),a.off("mousedown touchstart",o)}};/* harmony default export */ const useAnnotation_previewThenCallAnnotationAdding = (previewThenCallAnnotationAdding);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useDebouncedCallback.js\nvar useDebouncedCallback=function(a,b){var c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:[];return (0,react.useCallback)(utils_debounce(a,b),c)};/* harmony default export */ const hooks_useDebouncedCallback = (useDebouncedCallback);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useAnnotation/index.js\nvar useAnnotation_excluded=["fonts","onFontChange"],useAnnotation_excluded2=["x","y","width","height","radius","radiusX","radiusY","points","image","text","scaleX","scaleY","rotation"],_excluded3=["shouldSave","neverSave"];function useAnnotation_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function useAnnotation_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?useAnnotation_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):useAnnotation_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var useAnnotation=function(){var a,b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},c=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],d=hooks_useStore(),e=d.dispatch,f=d.previewGroup,g=d.annotations,h=d.selectionsIds,i=void 0===h?[]:h,j=d.config,k=useAnnotation_objectSpread(useAnnotation_objectSpread({},j.annotationsCommon),j[(null===(a=g[i[0]])||void 0===a?void 0:a.name)||b.name]),l=(0,react.useState)(function(){return useAnnotation_objectSpread(useAnnotation_objectSpread(useAnnotation_objectSpread({},k),b),g[i[0]])}),m=(0,slicedToArray/* default */.Z)(l,2),n=m[0],o=m[1],p=(0,react.useRef)(),q=null===f||void 0===f?void 0:f.getStage(),r=(0,react.useCallback)(function(a){var c=a.fonts,d=a.onFontChange,f=(0,objectWithoutProperties/* default */.Z)(a,useAnnotation_excluded);e({type:SET_ANNOTATION,payload:f}),f.id&&b.name!==TOOLS_IDS.PEN&&utils_debounce(function(){e({type:SELECT_ANNOTATION,payload:{annotationId:f.id}})},30)()},[]),s=hooks_useDebouncedCallback(function(a){o(function(b){return useAnnotation_objectSpread(useAnnotation_objectSpread({},b),{},{shouldSave:!1,neverSave:!1},"function"==typeof a?a(b):a)})},15),t=(0,react.useCallback)(function(a,c){if(a.name===c){var d=a.x,e=a.y,f=a.width,g=a.height,h=a.radius,i=a.radiusX,j=a.radiusY,l=a.points,m=a.image,n=a.text,o=a.scaleX,p=a.scaleY,q=a.rotation,r=(0,objectWithoutProperties/* default */.Z)(a,useAnnotation_excluded2);return useAnnotation_objectSpread(useAnnotation_objectSpread(useAnnotation_objectSpread({},k),b),r)}return useAnnotation_objectSpread(useAnnotation_objectSpread({},k),b)},[]),u=(0,react.useCallback)(function(a){o(function(c){var d=t(c,a.name||b.name);return useAnnotation_objectSpread(useAnnotation_objectSpread(useAnnotation_objectSpread({},d),a),{},{id:a.id||utils_randomId(a.name||c.name),shouldSave:!0,neverSave:!1})})},[]);return (0,react.useEffect)(function(){var a=n.shouldSave,b=n.neverSave,c=(0,objectWithoutProperties/* default */.Z)(n,_excluded3),d=1===i.length&&g[i[0]];!b&&(a||d)&&r(useAnnotation_objectSpread(useAnnotation_objectSpread({},c),{},{id:a?c.id:d.id}))},[n]),(0,react.useEffect)(function(){setTimeout(function(){1===i.length?(p.current=n,o(useAnnotation_objectSpread(useAnnotation_objectSpread({},g[i[0]]),{},{neverSave:!0}))):p.current&&(o(useAnnotation_objectSpread(useAnnotation_objectSpread({},p.current),{},{neverSave:!0})),p.current=null)})},[i,g]),(0,react.useEffect)(function(){var a=null;if(q&&c){var d=t(n,b.name);a=useAnnotation_previewThenCallAnnotationAdding(q,useAnnotation_objectSpread(useAnnotation_objectSpread({},d),{},{name:b.name}),f,u)}return function(){a&&a()}},[q,n,f]),(0,react.useMemo)(function(){return[n,s,u]},[n,s,u])};/* harmony default export */ const hooks_useAnnotation = (useAnnotation);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/undo.js\nfunction undo_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function undo_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?undo_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):undo_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var UNDO="UNDO";var undo=function(a){if(a.pastDesignStates&&0<a.pastDesignStates.length){var b=utils_extractCurrentDesignState(a),c=_toArray(a.pastDesignStates),d=c[0],e=c.slice(1),f=[b].concat((0,toConsumableArray/* default */.Z)(a.futureDesignStates||[]));return undo_objectSpread(undo_objectSpread(undo_objectSpread({},a),d),{},{selectionsIds:[],pastDesignStates:e,futureDesignStates:f,hasUndo:0<e.length,hasRedo:!0,haveNotSavedChanges:0<e.length})}return a};/* harmony default export */ const actions_undo = (undo);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useAppReducer.js\nvar useAppReducer_excluded=["isDesignState"];function useAppReducer_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function useAppReducer_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?useAppReducer_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):useAppReducer_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var timeout,useAppReducer=function(a,b){var c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:{},d=useAppReducer_objectSpread(useAppReducer_objectSpread({},b),{},{pastDesignStates:[],futureDesignStates:[],hasRedo:!1,hasUndo:!1});return (0,react.useReducer)(function undoRedoResetReducer(b,e){var f=a(b,e)||d;if(e.type===UNDO)return actions_undo(b)||b;if(e.type===REDO)return actions_redo(b)||b;if(e.type===RESET)return actions_reset(b)||b;if(f.isDesignState){var g=utils_extractCurrentDesignState(b),h=f.isDesignState,i=(0,objectWithoutProperties/* default */.Z)(f,useAppReducer_excluded),j=useAppReducer_objectSpread(useAppReducer_objectSpread({},i),{},{pastDesignStates:[g].concat((0,toConsumableArray/* default */.Z)(b.pastDesignStates)),hasUndo:!0,hasRedo:!1,futureDesignStates:[],isResetted:!1,haveNotSavedChanges:!0});return timeout=setTimeout(function(){clearTimeout(timeout),"function"==typeof c.onModify&&c.onModify(j)}),j}return f},d)};/* harmony default export */ const hooks_useAppReducer = (useAppReducer);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useAnnotationEvents.js\nvar useAnnotationEvents=function(){var a=hooks_useStore(),b=a.tabId,c=a.dispatch,d=(0,react.useMemo)(function(){return b!==TABS_IDS.ANNOTATE&&b!==TABS_IDS.WATERMARK},[b]),f=(0,react.useCallback)(function(a){c({type:SET_ANNOTATION,payload:a})},[]),g=(0,react.useCallback)(function(a){f({id:a.target.id(),x:a.target.x(),y:a.target.y()})},[]),h=(0,react.useCallback)(function(a){var b={id:a.target.id(),rotation:a.target.rotation(),x:a.target.x(),y:a.target.y()};return a.target.name()===TOOLS_IDS.TEXT?(b.width=a.target.width()*a.target.scaleX(),b.height=a.target.height()*a.target.scaleY(),b.scaleX=1,b.scaleY=1):(b.scaleX=a.target.scaleX(),b.scaleY=a.target.scaleY()),b},[]),i=(0,react.useCallback)(function(a){f(h(a))},[]),j=(0,react.useCallback)(function(a){a.target.name()===TOOLS_IDS.TEXT&&a.target.setAttrs(h(a))}),k=(0,react.useCallback)(function(a){if(a.target.id()!==WATERMARK_ANNOTATION_ID){var b=a.evt.ctrlKey||a.evt.shiftKey||a.evt.metaKey;c({type:SELECT_ANNOTATION,payload:{annotationId:a.target.id(),multiple:b}}),c({type:SELECT_TOOL,payload:{toolId:a.target.name(),keepSelections:b}})}},[]);return (0,react.useMemo)(function(){return d?{}:{onTransform:j,onTransformEnd:i,onDragEnd:g,onClick:k,onTap:k}},[d])};/* harmony default export */ const hooks_useAnnotationEvents = (useAnnotationEvents);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useResizeObserver.js\nvar useResizeObserver=function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){},b=(0,react.useRef)(a),c=(0,react.useRef)(),d=(0,react.useCallback)(function(a){a.forEach(function(a){if(a.contentRect){var c=a.contentRect,d=c.width,e=c.height;b.current({entry:a,width:d,height:e})}})},[]),e=(0,react.useCallback)(function(a){b.current=a},[]),f=(0,react.useCallback)(function(){c.current||(c.current=new ResizeObserver(d))},[]),g=(0,react.useCallback)(function(a,d){a&&(!c.current&&f(),c.current.observe(a),d&&(b.current=d))},[]),h=(0,react.useCallback)(function(a,d){c.current&&a&&(c.current.unobserve(a),d&&(b.current=d))},[]),i=(0,react.useCallback)(function(){c.current&&c.current.disconnect()},[]);return (0,react.useEffect)(function(){return f(),i},[]),(0,react.useMemo)(function(){return[g,h,e]},[])};/* harmony default export */ const hooks_useResizeObserver = (useResizeObserver);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/usePhoneScreen.js\nvar usePhoneScreen=function(){return window.matchMedia("(max-width: 438px)").matches};/* harmony default export */ const hooks_usePhoneScreen = (usePhoneScreen);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/mapNumber.js\nvar mapNumber=function(a,b,c,d,e){return(a-b)*(e-d)/(c-b)+d};/* harmony default export */ const utils_mapNumber = (mapNumber);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/mapCropBox.js\nfunction mapCropBox_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function mapCropBox_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?mapCropBox_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):mapCropBox_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var mapCropBox=function(a,b,c){var d,e;return mapCropBox_objectSpread(mapCropBox_objectSpread(mapCropBox_objectSpread({},a.x||0===a.x?{x:Math.round(utils_mapNumber(a.x,0,b.width,0,c.width))}:{}),a.y||0===a.y?{y:Math.round(utils_mapNumber(a.y,0,b.height,0,c.height))}:{}),{},{width:Math.round(utils_mapNumber(null!==(d=a.width)&&void 0!==d?d:b.width,0,b.width,0,c.width)),height:Math.round(utils_mapNumber(null!==(e=a.height)&&void 0!==e?e:b.height,0,b.height,0,c.height))})};/* harmony default export */ const utils_mapCropBox = (mapCropBox);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getSizeAfterRotation.js\nvar getSizeAfterRotation=function(a,b){var c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:0,d=Math.abs(c),e=Math.round(c),f=90<d,g=f?d-90:d,h=f?b:a,i=f?a:b,j=g*Math.PI/180,k=Math.abs(Math.sin(j)),l=Math.abs(Math.cos(j));return{width:Math.round(h*l)+Math.round(i*k),height:Math.round(h*k)+Math.round(i*l),offsetTop:0<=e&&90>=e?0:function getTopOffset(){return 0>e&&-90<e?h*k:90<e?h*k:i*l+h*k}(),offsetLeft:0>=e&&-90<=e?0:function getLeftOffset(){return 90<e?h*l+i*k:i*k}()}};/* harmony default export */ const utils_getSizeAfterRotation = (getSizeAfterRotation);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/imageToBase64.js\nvar imageToBase64=function(a){if(a instanceof HTMLImageElement){var b=document.createElement("canvas"),c=b.getContext("2d");return b.width=a.width,b.height=a.height,c.drawImage(a,0,0),b.toDataURL()}return""};/* harmony default export */ const utils_imageToBase64 = (imageToBase64);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getFileFullName.js\nvar getFileFullName=function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",b=1<arguments.length?arguments[1]:void 0,c=b,d=a;if(!c&&POSSIBLE_IMAGE_TYPES.some(function(b){return a.lastIndexOf(".".concat(b))===a.length-".".concat(b).length})){var e,f=null===(e=a.slice(a.lastIndexOf(".")+1))||void 0===e?void 0:e.toLowerCase();c=f&&SUPPORTED_IMAGE_TYPES.includes(f)?f:DEFAULT_IMAGE_TYPE,d=a.slice(0,a.lastIndexOf("."))}return c=c||DEFAULT_IMAGE_TYPE,{fullName:"".concat(d,".").concat(c),name:d,extension:c}};/* harmony default export */ const utils_getFileFullName = (getFileFullName);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/sha1.js\nvar rotateLeft=function(a,b){return a<<b|a>>>32-b},cvtHex=function(a){var b,c,d="";for(b=7;0<=b;b--)c=15&a>>>4*b,d+=c.toString(16);return d},Utf8Encode=function(a){for(var b,d=a.replace(/\\r\\n/g,"\\n"),e="",f=0;f<d.length;f++)b=d.charCodeAt(f),128>b?e+=String.fromCharCode(b):127<b&&2048>b?(e+=String.fromCharCode(192|b>>6),e+=String.fromCharCode(128|63&b)):(e+=String.fromCharCode(224|b>>12),e+=String.fromCharCode(128|63&b>>6),e+=String.fromCharCode(128|63&b));return e},sha1=function(a){var b,c,d,e,f,g,h,k,l,m=a,n=Array(80),o=1732584193,p=4023233417,q=2562383102,r=271733878,s=3285377520;m=Utf8Encode(m);var t=m.length,u=[];for(c=0;c<t-3;c+=4)d=m.charCodeAt(c)<<24|m.charCodeAt(c+1)<<16|m.charCodeAt(c+2)<<8|m.charCodeAt(c+3),u.push(d);switch(t%4){case 0:c=2147483648;break;case 1:c=8388608|m.charCodeAt(t-1)<<24;break;case 2:c=32768|(m.charCodeAt(t-2)<<24|m.charCodeAt(t-1)<<16);break;case 3:c=128|(m.charCodeAt(t-3)<<24|m.charCodeAt(t-2)<<16|m.charCodeAt(t-1)<<8);break;default:}for(u.push(c);14!=u.length%16;)u.push(0);for(u.push(t>>>29),u.push(4294967295&t<<3),b=0;b<u.length;b+=16){for(c=0;16>c;c++)n[c]=u[b+c];for(c=16;79>=c;c++)n[c]=rotateLeft(n[c-3]^n[c-8]^n[c-14]^n[c-16],1);for(e=o,f=p,g=q,h=r,k=s,c=0;19>=c;c++)l=4294967295&rotateLeft(e,5)+(f&g|~f&h)+k+n[c]+1518500249,k=h,h=g,g=rotateLeft(f,30),f=e,e=l;for(c=20;39>=c;c++)l=4294967295&rotateLeft(e,5)+(f^g^h)+k+n[c]+1859775393,k=h,h=g,g=rotateLeft(f,30),f=e,e=l;for(c=40;59>=c;c++)l=4294967295&rotateLeft(e,5)+(f&g|f&h|g&h)+k+n[c]+2400959708,k=h,h=g,g=rotateLeft(f,30),f=e,e=l;for(c=60;79>=c;c++)l=4294967295&rotateLeft(e,5)+(f^g^h)+k+n[c]+3395469782,k=h,h=g,g=rotateLeft(f,30),f=e,e=l;o=4294967295&o+e,p=4294967295&p+f,q=4294967295&q+g,r=4294967295&r+h,s=4294967295&s+k}return l=cvtHex(o)+cvtHex(p)+cvtHex(q)+cvtHex(r)+cvtHex(s),l.toLowerCase()};/* harmony default export */ const utils_sha1 = (sha1);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getImageSealingParams.js\nvar encodeBase64=function(a){return btoa(a).replace(/=*$/g,"")},getSha1=function(a,b){return utils_sha1(a).slice(0,b)},getSealingParams=function(a,b,c,d){var e=encodeBase64(a),f=getSha1(b+e+c,d);return[f?"ci_seal=".concat(f):"",e?"ci_eqs=".concat(e):""].filter(function(a){return a}).join("&")},getImageSealingParams=function(a,b,c){var d=b||{},e=d.salt,f=d.charCount,g=d.includeParams,h=void 0===g?[]:g,i=!h||0===(null===h||void 0===h?void 0:h.length),j="",k="",l=[],m=[];return a.split("&").forEach(function(a){var b=a.split("="),c=(0,slicedToArray/* default */.Z)(b,1),d=c[0];-1<(null===h||void 0===h?void 0:h.indexOf(d))||i?l.push(a):m.push(a)}),0<m.length&&(k=m.join("&")),j=getSealingParams(l.join("&"),c,e,f),[j,k].filter(function(a){return a}).join("&")};/* harmony default export */ const utils_getImageSealingParams = (getImageSealingParams);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/toPrecisedFloat.js\nvar toPrecisedFloat=function(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:5;return a&&+parseFloat(a).toFixed(b)};/* harmony default export */ const utils_toPrecisedFloat = (toPrecisedFloat);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/operationsToCloudimageUrl.js\nvar operationsToCloudimageUrl_excluded=["width","height","x","y","opacity","scaleX","scaleY"];function operationsToCloudimageUrl_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function operationsToCloudimageUrl_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?operationsToCloudimageUrl_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):operationsToCloudimageUrl_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var generateCropQuery=function(a,b,c){var d=utils_mapCropBox(a,b,c),e=d.x,f=d.y,g=d.width,h=d.height;return"tl_px=".concat(e,",").concat(f,"&br_px=").concat(e+g,",").concat(f+h).concat(a.ratio===ELLIPSE_CROP?"&radius=".concat(Math.max(g,h),"&force_format=png"):"")},generateResizeQuery=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},b=a.width,c=a.height;return"w=".concat(b,"&h=").concat(c)},generateRotationQuery=function(a){return"r=".concat(-a)},generateFlipQuery=function(a,b){return"flip=".concat(a?"x":"").concat(b?"y":"")},generateWatermarkQuery=function(){var a,b=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},c=1<arguments.length?arguments[1]:void 0,d=2<arguments.length&&arguments[2]!==void 0?arguments[2]:{},e=b.width,f=b.height,g=b.x,h=b.y,i=b.opacity,j=b.scaleX,k=void 0===j?1:j,l=b.scaleY,m=void 0===l?1:l,n=(0,objectWithoutProperties/* default */.Z)(b,operationsToCloudimageUrl_excluded),o=c.width*c.scaledBy,p=c.height*c.scaledBy,q="wat=1&wat_gravity=absolute&wat_opacity=".concat(i,"&wat_pos=").concat(Math.floor(100*((g-(d.x||0))/o),2),"p,").concat(Math.floor(100*((h-(d.y||0))/p),2),"p");if(b.name===TOOLS_IDS.TEXT)return"".concat(q,"&wat_text=").concat(n.text.replaceAll("\\n",""),"&wat_font=").concat(n.fontFamily,"&wat_color=").concat(n.fill.replace("#",""),"&wat_fontsize=").concat(n.fontSize,"max");var r=(null===(a=n.image)||void 0===a?void 0:a.src)||n.image,s=!r.startsWith("blob:")&&r;return"".concat(q,"&wat_scale=").concat(utils_toPrecisedFloat(100*(e*k/o),2),"p,").concat(utils_toPrecisedFloat(100*(f*m/p),2),"p").concat(s?"&wat_url=".concat(encodeURIComponent(s)):"")};var finetuneNameToParamInfo={Brighten:{cloudimage:{name:"bright",min:-100,max:100},internal:{propName:"brightness",min:-1,max:1}},Contrast:{cloudimage:{name:"contrast",min:-100,max:100},internal:{propName:"contrast",min:-100,max:100}},Blur:{cloudimage:{name:"blur",min:0,max:100},internal:{propName:"blurRadius",min:0,max:100}}};var generateFinetuneQuery=function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},c=[];return a.forEach(function(a){var d=a.name&&finetuneNameToParamInfo[a.name];if(d){var e=utils_toPrecisedFloat(utils_mapNumber(b[d.internal.propName],d.internal.min,d.internal.max,d.cloudimage.min,d.cloudimage.max),2);c.push("".concat(d.cloudimage.name,"=").concat(e))}}),c.join("&")},operationsToCloudimageUrl=function(a,b,c,d){var e=a.token,f=a.domain,g=a.dontPrefixUrl,h=a.version,i=a.imageSealing,j=a.secureProtocol,k=b.imgSrc,l=b.adjustments,m=l.crop,n=l.rotation,o=l.isFlippedX,p=l.isFlippedY,q=b.resize,r=void 0===q?{}:q,s=b.finetunes,t=void 0===s?{}:s,u=b.finetunesProps,v=b.annotations,w=void 0===v?{}:v,x=g?"":"http".concat(j?"s":"","://").concat(e,".").concat(f.replace(/^(https?:\\/\\/)?(www\\.)?|^\\.|\\/$/g,""),"/").concat(h?"".concat(h,"/"):""),y=[];m.width&&m.height&&(m.x||0===m.x)&&(m.y||0===m.y)&&y.push(generateCropQuery(m,c,d)),(r.width||r.height)&&y.push(generateResizeQuery(operationsToCloudimageUrl_objectSpread(operationsToCloudimageUrl_objectSpread({},d),r))),n&&y.push(generateRotationQuery(n)),(o||p)&&y.push(generateFlipQuery(o,p)),0<t.length&&u&&y.push(generateFinetuneQuery(t,u)),w[WATERMARK_ANNOTATION_ID]&&y.push(generateWatermarkQuery(w[WATERMARK_ANNOTATION_ID],c,m)),y.push("ci_url_encoded=1");var z=y.join("&");i.enable&&(z=utils_getImageSealingParams(z,i,k)),z=z.replaceAll(" ","+");var A=!g&&"?"||-1===k.indexOf("?")?"?":"&";return"".concat(x).concat(g?k:encodeURIComponent(k)).concat(z?"".concat(A).concat(z.replace(/&$/,"")):"")};/* harmony default export */ const utils_operationsToCloudimageUrl = (operationsToCloudimageUrl);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/useTransformedImgData.js\nvar useTransformedImgData_excluded=["filter"];function useTransformedImgData_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function useTransformedImgData_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?useTransformedImgData_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):useTransformedImgData_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var useTransformedImgData=function(){var a=hooks_useStore(),b=a.dispatch,c=a.designLayer,d=a.shownImageDimensions,e=a.originalImage,f=a.adjustments,g=f.crop,h=f.rotation,i=void 0===h?0:h,j=f.isFlippedX,k=f.isFlippedY,l=a.config,m=l.savingPixelRatio,n=l.previewPixelRatio,o=l.forceToPngInEllipticalCrop,p=l.defaultSavedImageType,q=l.useCloudimage,r=l.cloudimage;return q?function getTransformedCloudimageData(){var b,c,f=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},h=utils_extractCurrentDesignState(a),i=h.filter,j=(0,objectWithoutProperties/* default */.Z)(h,useTransformedImgData_excluded),k=utils_operationsToCloudimageUrl(r,j,d,e),l=utils_mapCropBox({x:g.x,y:g.y,width:g.width,height:g.height},d,e),m={cloudimageUrl:k,width:(null===f||void 0===f||null===(b=f.size)||void 0===b?void 0:b.width)||l.width,height:(null===f||void 0===f||null===(c=f.size)||void 0===c?void 0:c.height)||l.height};return{imageData:m,designState:j}}:function getTransformedImgData(){var f=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},h=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1];lib.pixelRatio=h||m;var l=c.attrs,q=l.clipWidth,r=l.clipHeight,s=l.clipX,t=l.clipY;c.setAttr("isSaving",!0);var u=c.getStage().clone({width:e.width,height:e.height,scaleX:j?-1:1,scaleY:k?-1:1}),v=(0,slicedToArray/* default */.Z)(u.children,1),w=v[0];u.children[1].destroy();var x=u.findOne("#".concat(IMAGE_NODE_ID));x.cache();var y={x:u.width()/d.width,y:u.height()/d.height};w.setAttrs({rotation:0,offsetX:0,offsetY:0,x:0,y:0,scaleX:y.x,scaleY:y.y});var z=useTransformedImgData_objectSpread(useTransformedImgData_objectSpread({},(!f.name||!f.extension)&&utils_getFileFullName(e.name,o&&g.ratio===ELLIPSE_CROP?"png":SUPPORTED_IMAGE_TYPES.includes(null===p||void 0===p?void 0:p.toLowerCase())&&p)),f),A=z.name,B=z.extension,C=z.quality,D=void 0===C?92:C,E=z.size,F=void 0===E?{}:E,G=["jpeg","jpg","webp"].includes(B),H=utils_mapCropBox({x:g.x||s,y:g.y||t,width:g.width||q,height:g.height||r},d,u.attrs),I=utils_getSizeAfterRotation(H.width,H.height,i);if(u.setAttrs({offsetX:H.width/2+H.x,offsetY:H.height/2+H.y,width:I.width,height:I.height,x:I.width/2,y:I.height/2,rotation:i}),F.width){var O=(j?-1:1)*(F.width/u.width());u.setAttrs({scaleX:O,width:F.width,x:u.x()*Math.abs(O)})}if(F.height){var P=(k?-1:1)*(F.height/u.height());u.setAttrs({scaleY:P,height:F.height,y:u.y()*Math.abs(P)})}var J=useTransformedImgData_objectSpread({mimeType:"image/".concat("jpg"===B?"jpeg":B)},G?{quality:D}:{}),K=u.toCanvas(J),L=u.toDataURL(J),M=useTransformedImgData_objectSpread(useTransformedImgData_objectSpread({},utils_extractCurrentDesignState(a)),{},{shownImageDimensions:{width:a.shownImageDimensions.width,height:a.shownImageDimensions.height,scaledBy:a.shownImageDimensions.scaledBy}});M.filter&&(M.filter=M.filter.name),M.finetunes=M.finetunes.map(function(a){return a.name}),Object.keys(M.annotations).forEach(function(a){var b,c=M.annotations[a],d=c.name===TOOLS_IDS.IMAGE&&(null===(b=c.image)||void 0===b?void 0:b.src);d&&d.startsWith("blob:")?M.annotations[a].image=utils_imageToBase64(c.image):c.image instanceof HTMLImageElement&&(M.annotations[a].image=d)});var N=useTransformedImgData_objectSpread({fullName:"".concat(A,".").concat(B),name:A,extension:B,mimeType:"image/".concat(B),imageCanvas:K,imageBase64:L,width:F.width||H.width,height:F.height||H.height},G?{quality:D}:{});return c.setAttr("isSaving",!1),b({type:SET_SAVED}),x.clearCache(),lib.pixelRatio=n,b({type:HIDE_LOADER}),{imageData:N,designState:M}}};/* harmony default export */ const hooks_useTransformedImgData = (useTransformedImgData);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/hooks/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/set-ref.js\n/**\n * passes {value} to {ref}\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nfunction setRef(ref, value) {\n  if (typeof ref === \'function\') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/use-fork-ref.js\n\n\nfunction useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return react.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/slider/utils.js\nfunction asc(a, b) {\n  return a - b;\n}\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won\'t get converted to this notation so it\'s fine.\n  if (Math.abs(num) < 1) {\n    var parts = num.toExponential().split(\'e-\');\n    var matissaDecimalPart = parts[0].split(\'.\')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + Number.parseInt(parts[1], 10);\n  }\n\n  var decimalPart = num.toString().split(\'.\')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToStep(value, step, min) {\n  var nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\nfunction setValueIndex(_ref) {\n  var values = _ref.values,\n      newValue = _ref.newValue,\n      index = _ref.index;\n  var output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\nfunction findClosest(values, currentValue) {\n  var _values$reduce = values.reduce(function (acc, value, index) {\n    var distance = Math.abs(currentValue - value);\n\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance: distance,\n        index: index\n      };\n    }\n\n    return acc;\n  }, null),\n      closestIndex = _values$reduce.index;\n\n  return closestIndex;\n}\nfunction ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}\nfunction clamp(value, min, max) {\n  if (value == null) {\n    return min;\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\nfunction trackFinger(event, touchId) {\n  if (touchId.current !== undefined && event.changedTouches) {\n    for (var i = 0; i < event.changedTouches.length; i += 1) {\n      var touch = event.changedTouches[i];\n\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n\n    return false;\n  }\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nvar axisProps = {\n  horizontal: {\n    offset: function offset(percent) {\n      return {\n        left: "".concat(percent, "%")\n      };\n    },\n    leap: function leap(percent) {\n      return {\n        width: "".concat(percent, "%")\n      };\n    }\n  },\n  \'horizontal-reverse\': {\n    offset: function offset(percent) {\n      return {\n        right: "".concat(percent, "%")\n      };\n    },\n    leap: function leap(percent) {\n      return {\n        width: "".concat(percent, "%")\n      };\n    }\n  },\n  vertical: {\n    offset: function offset(percent) {\n      return {\n        bottom: "".concat(percent, "%")\n      };\n    },\n    leap: function leap(percent) {\n      return {\n        height: "".concat(percent, "%")\n      };\n    }\n  }\n};\nfunction focusThumb(_ref2) {\n  var sliderRef = _ref2.sliderRef,\n      activeIndex = _ref2.activeIndex,\n      setActive = _ref2.setActive;\n  var doc = ownerDocument(sliderRef.current);\n\n  if (!sliderRef.current.contains(doc.activeElement) || Number(doc.activeElement.getAttribute(\'data-index\')) !== activeIndex) {\n    var _sliderRef$current$qu;\n\n    (_sliderRef$current$qu = sliderRef.current.querySelector("[type=\\"range\\"][data-index=\\"".concat(activeIndex, "\\"]"))) === null || _sliderRef$current$qu === void 0 ? void 0 : _sliderRef$current$qu.focus();\n  }\n\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/hooks/use-controlled.js\n\n\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\n\nfunction useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref["default"];\n\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  var _React$useRef = react.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = react.useState(defaultProp),\n      _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),\n      valueState = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var value = isControlled ? controlled : valueState;\n  var setValueIfUncontrolled = react.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/hooks/use-enhanced-effect.js\n\nvar useEnhancedEffect = typeof window !== \'undefined\' ? react.useLayoutEffect : react.useEffect;\n/* harmony default export */ const use_enhanced_effect = (useEnhancedEffect);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/hooks/use-event-callback.js\n\n\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\n\nfunction useEventCallback(fn) {\n  var ref = react.useRef(fn);\n  use_enhanced_effect(function () {\n    ref.current = fn;\n  });\n  return react.useCallback(function () {\n    return (// @ts-expect-error hide `this`\n      // tslint:disable-next-line:ban-comma-operator\n      (0, ref.current).apply(void 0, arguments)\n    );\n  }, []);\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/slider/types/label-tooltip.js\nvar LabelTooltip = {\n  Auto: \'auto\',\n  On: \'on\',\n  Off: \'off\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/slider/slider.styles.js\n\n\n\nvar slider_styles_baseClassName = \'Slider\';\nvar Slider = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(slider_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-jjink6-0"\n})(function (_ref) {\n  var theme = _ref.theme,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled;\n  return Ce(["display:inline-block;border-radius:2px;position:relative;cursor:pointer;touch-action:none;color:", ";height:4px;width:100%;padding:12px 0;"], disabled ? theme.palette[Color.AccentPrimaryDisabled] : theme.palette[Color.BorderActiveBottom]);\n});\nvar Rail = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(slider_styles_baseClassName, \'rail\')\n}).withConfig({\n  componentId: "sc-jjink6-1"\n})(["display:block;position:absolute;border-radius:inherit;background-color:currentColor;opacity:0.38;width:100%;height:inherit;top:50%;transform:translateY(-50%);"]);\nvar Track = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(slider_styles_baseClassName, \'Track\')\n}).withConfig({\n  componentId: "sc-jjink6-2"\n})(["display:block;position:absolute;border-radius:inherit;border:1px solid currentColor;background-color:currentColor;height:inherit;top:50%;transform:translateY(-50%);"]);\nvar Thumb = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(slider_styles_baseClassName, \'thumb\')\n}).withConfig({\n  componentId: "sc-jjink6-3"\n})(["position:absolute;width:15px;height:15px;box-sizing:border-box;border-radius:50%;outline:0;background-color:currentColor;display:flex;align-items:center;justify-content:center;top:50%;transform:translate(-50%,-50%);& > input{border:0px;clip:rect(0px,0px,0px,0px);height:100%;margin:-1px;overflow:hidden;padding:0px;position:absolute;white-space:nowrap;width:100%;direction:ltr;}&::before{position:absolute;content:\'\';border-radius:inherit;width:100%;height:100%;box-shadow:0px 3px 1px -2px rgb(0 0 0 / 20%),0px 2px 2px 0px rgb(0 0 0 / 14%),0px 1px 5px 0px rgb(0 0 0 / 12%);}&::after{position:absolute;content:\'\';border-radius:50%;width:42px;height:42px;top:50%;left:50%;transform:translate(-50%,-50%);}"]);\nvar slider_styles_LabelTooltip = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(slider_styles_baseClassName, \'label\')\n}).withConfig({\n  componentId: "sc-jjink6-4"\n})(function (_ref2) {\n  var theme = _ref2.theme,\n      _ref2$open = _ref2.open,\n      open = _ref2$open === void 0 ? false : _ref2$open,\n      _ref2$disabled = _ref2.disabled,\n      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled;\n  return Ce(["display:flex;align-items:center;justify-content:center;padding:6px 6px;border-radius:2px;position:absolute;top:-10px;font-size:10px;z-index:1;white-space:nowrap;transition:transform 150ms cubic-bezier(0.4,0,0.2,1) 0ms;transform-origin:bottom center;transform:", ";background-color:", ";color:#fff;cursor:pointer;&::before{position:absolute;content:\'\';background-color:inherit;width:8px;height:8px;bottom:0px;left:50%;transform:translate(-50%,50%) rotate(45deg);}"], open ? \'translateY(-100%) scale(1)\' : \'translateY(-100%) scale(0)\', disabled ? theme.palette[Color.AccentPrimaryDisabled] : theme.palette[Color.LinkHover]);\n});\nvar SliderAnnotation = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(slider_styles_baseClassName, \'annotation\')\n}).withConfig({\n  componentId: "sc-jjink6-5"\n})(function (_ref3) {\n  var theme = _ref3.theme;\n  return Ce(["display:flex;justify-content:space-between;margin-top:12px;color:", ";"], theme.palette[Color.TextSecondary]);\n});\nvar slider_styles_Styled = applyDisplayNames({\n  Slider: Slider,\n  Rail: Rail,\n  Track: Track,\n  Thumb: Thumb,\n  SliderAnnotation: SliderAnnotation,\n  LabelTooltip: slider_styles_LabelTooltip\n});\n/* harmony default export */ const slider_styles = (slider_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/slider/slider.component.js\n\n\n\n\nvar slider_component_excluded = ["defaultValue", "disabled", "disableSwap", "hideTrack", "hideAnnotation", "value", "min", "max", "onChange", "onMouseDown", "onMouseUp", "step", "labelTooltip", "annotation", "components", "componentsProps"];\n\nfunction slider_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction slider_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { slider_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { slider_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable no-use-before-define */\n\n/* eslint-disable sonarjs/cognitive-complexity */\n\n\n\n\n\n\n\nvar INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\nvar dataIndex = \'data-index\';\nvar slider_component_Slider = intrinsic_component_intrinsicComponent(function (_ref, // eslint-disable-next-line @typescript-eslint/no-unused-vars\nref) {\n  var defaultValue = _ref.defaultValue,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$disableSwap = _ref.disableSwap,\n      disableSwap = _ref$disableSwap === void 0 ? false : _ref$disableSwap,\n      _ref$hideTrack = _ref.hideTrack,\n      hideTrack = _ref$hideTrack === void 0 ? false : _ref$hideTrack,\n      _ref$hideAnnotation = _ref.hideAnnotation,\n      hideAnnotation = _ref$hideAnnotation === void 0 ? false : _ref$hideAnnotation,\n      valueProp = _ref.value,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      onChange = _ref.onChange,\n      onMouseDown = _ref.onMouseDown,\n      onMouseUp = _ref.onMouseUp,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step,\n      _ref$labelTooltip = _ref.labelTooltip,\n      labelTooltip = _ref$labelTooltip === void 0 ? LabelTooltip.Off : _ref$labelTooltip,\n      _ref$annotation = _ref.annotation,\n      annotation = _ref$annotation === void 0 ? \'\' : _ref$annotation,\n      _ref$components = _ref.components,\n      components = _ref$components === void 0 ? {} : _ref$components,\n      _ref$componentsProps = _ref.componentsProps,\n      componentsProps = _ref$componentsProps === void 0 ? {} : _ref$componentsProps,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, slider_component_excluded);\n\n  return function () {\n    var _useState = (0,react.useState)(-1),\n        _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n        active = _useState2[0],\n        setActive = _useState2[1];\n\n    var _useState3 = (0,react.useState)(-1),\n        _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n    var _useState5 = (0,react.useState)(false),\n        _useState6 = (0,slicedToArray/* default */.Z)(_useState5, 2),\n        dragging = _useState6[0],\n        setDragging = _useState6[1];\n\n    var moveCount = (0,react.useRef)(0);\n    var previousIndex = (0,react.useRef)(0);\n    var touchId = (0,react.useRef)();\n    var sliderRef = (0,react.useRef)(null);\n    var handleRef = useForkRef(ref, sliderRef);\n\n    var _useControlled = useControlled({\n      controlled: valueProp,\n      "default": defaultValue !== null && defaultValue !== void 0 ? defaultValue : min\n    }),\n        _useControlled2 = (0,slicedToArray/* default */.Z)(_useControlled, 2),\n        valueDerived = _useControlled2[0],\n        setValueState = _useControlled2[1];\n\n    var axis = \'horizontal\';\n    var range = Array.isArray(valueDerived);\n    var values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n\n    var getFingerNewValue = function getFingerNewValue(_ref2) {\n      var finger = _ref2.finger,\n          _ref2$move = _ref2.move,\n          move = _ref2$move === void 0 ? false : _ref2$move,\n          values2 = _ref2.values;\n      var slider = sliderRef.current;\n\n      if (slider) {\n        var _slider$getBoundingCl = slider.getBoundingClientRect(),\n            width = _slider$getBoundingCl.width,\n            height = _slider$getBoundingCl.height,\n            bottom = _slider$getBoundingCl.bottom,\n            left = _slider$getBoundingCl.left;\n\n        var percent;\n\n        if (axis.indexOf(\'vertical\') === 0) {\n          percent = (bottom - finger.y) / height;\n        } else {\n          percent = (finger.x - left) / width;\n        }\n\n        if (axis.includes(\'-reverse\')) {\n          percent = 1 - percent;\n        }\n\n        var newValue;\n        newValue = percentToValue(percent, min, max);\n\n        if (step) {\n          newValue = roundValueToStep(newValue, step, min);\n        }\n\n        newValue = clamp(newValue, min, max);\n        var activeIndex = 0;\n\n        if (range) {\n          if (!move) {\n            activeIndex = findClosest(values2, newValue);\n          } else {\n            activeIndex = previousIndex.current;\n          }\n\n          if (disableSwap) {\n            newValue = clamp(newValue, values2[activeIndex - 1] || -Infinity, values2[activeIndex + 1] || Infinity);\n          }\n\n          var previousValue = newValue;\n          newValue = setValueIndex({\n            values: values2,\n            newValue: newValue,\n            index: activeIndex\n          });\n\n          if (!(disableSwap && move) && Array.isArray(newValue)) {\n            activeIndex = newValue.indexOf(previousValue);\n            previousIndex.current = activeIndex;\n          }\n        }\n\n        return {\n          newValue: newValue,\n          activeIndex: activeIndex\n        };\n      }\n\n      return null;\n    };\n\n    var handleChange = function handleChange(event, value, thumbIndex) {\n      if (onChange) {\n        onChange(event, value, thumbIndex);\n      }\n    };\n\n    var handleHiddenInputChange = function handleHiddenInputChange(event) {\n      var index = Number(event.currentTarget.getAttribute(dataIndex));\n      var newValue = event.target.valueAsNumber;\n\n      if (range) {\n        if (disableSwap) {\n          newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n        }\n\n        var previousValue = newValue;\n        newValue = setValueIndex({\n          values: values,\n          newValue: newValue,\n          index: index\n        });\n        var activeIndex = index;\n\n        if (!disableSwap) {\n          activeIndex = newValue.indexOf(previousValue);\n        }\n\n        focusThumb({\n          sliderRef: sliderRef,\n          activeIndex: activeIndex\n        });\n      }\n\n      setValueState(newValue);\n      handleChange(event, newValue, index);\n\n      if (onMouseUp) {\n        onMouseUp(event);\n      }\n    };\n\n    var handleTouchMove = useEventCallback(function (nativeEvent) {\n      var finger = trackFinger(nativeEvent, touchId);\n\n      if (!finger) {\n        return;\n      }\n\n      moveCount.current += 1;\n\n      if (nativeEvent.type === \'mousemove\' && nativeEvent.buttons === 0) {\n        handleTouchEnd(nativeEvent);\n        return;\n      }\n\n      var _ref3 = getFingerNewValue({\n        finger: finger,\n        move: true,\n        values: values\n      }),\n          newValue = _ref3.newValue,\n          activeIndex = _ref3.activeIndex;\n\n      focusThumb({\n        sliderRef: sliderRef,\n        activeIndex: activeIndex,\n        setActive: setActive\n      });\n      setValueState(newValue);\n\n      if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n        setDragging(true);\n      }\n\n      handleChange(nativeEvent, newValue, activeIndex);\n    });\n    var handleTouchEnd = useEventCallback(function (nativeEvent) {\n      var finger = trackFinger(nativeEvent, touchId);\n      setDragging(false);\n\n      if (!finger) {\n        return;\n      }\n\n      setActive(-1);\n\n      if (nativeEvent.type === \'touchend\') {\n        setOpen(-1);\n      }\n\n      if (onMouseUp) {\n        onMouseUp(nativeEvent);\n      }\n\n      touchId.current = undefined;\n      stopListening();\n    });\n    var handleTouchStart = useEventCallback(function (nativeEvent) {\n      var touch = nativeEvent.changedTouches[0];\n\n      if (touch != null) {\n        touchId.current = touch.identifier;\n      }\n\n      var finger = trackFinger(nativeEvent, touchId);\n\n      var _ref4 = getFingerNewValue({\n        finger: finger,\n        values: values\n      }),\n          newValue = _ref4.newValue,\n          activeIndex = _ref4.activeIndex;\n\n      focusThumb({\n        sliderRef: sliderRef,\n        activeIndex: activeIndex,\n        setActive: setActive\n      });\n      setValueState(newValue);\n      handleChange(nativeEvent, newValue, activeIndex);\n      moveCount.current = 0;\n      var doc = ownerDocument(sliderRef.current);\n      doc.addEventListener(\'touchmove\', handleTouchMove);\n      doc.addEventListener(\'touchend\', handleTouchEnd);\n    });\n    var handleMouseOver = useEventCallback(function (event) {\n      var index = Number(event.currentTarget.getAttribute(dataIndex));\n      setOpen(index);\n    });\n    var handleMouseLeave = useEventCallback(function () {\n      setOpen(-1);\n    });\n    var handleMouseDown = useEventCallback(function (event) {\n      if (!disabled) {\n        if (onMouseDown) {\n          onMouseDown(event);\n        }\n\n        if (event.button !== 0) {\n          return;\n        } // Avoid text selection\n\n\n        event.preventDefault();\n        var finger = trackFinger(event, touchId);\n\n        var _ref5 = getFingerNewValue({\n          finger: finger,\n          values: values\n        }),\n            newValue = _ref5.newValue,\n            activeIndex = _ref5.activeIndex;\n\n        focusThumb({\n          sliderRef: sliderRef,\n          activeIndex: activeIndex,\n          setActive: setActive\n        });\n        setValueState(newValue);\n        handleChange(event, newValue, activeIndex);\n        moveCount.current = 0;\n        var doc = ownerDocument(sliderRef.current);\n        doc.addEventListener(\'mousemove\', handleTouchMove);\n        doc.addEventListener(\'mouseup\', handleTouchEnd);\n      } else {\n        // Avoid text selection\n        event.preventDefault();\n      }\n    });\n    var stopListening = (0,react.useCallback)(function () {\n      var doc = ownerDocument(sliderRef.current);\n      doc.removeEventListener(\'mousemove\', handleTouchMove);\n      doc.removeEventListener(\'mouseup\', handleTouchEnd);\n      doc.removeEventListener(\'touchmove\', handleTouchMove);\n      doc.removeEventListener(\'touchend\', handleTouchEnd);\n    }, [handleTouchEnd, handleTouchMove]);\n    (0,react.useEffect)(function () {\n      var slider = sliderRef.current;\n\n      if (slider) {\n        return function () {\n          stopListening();\n        };\n      }\n    }, [stopListening, handleTouchStart]);\n    (0,react.useEffect)(function () {\n      if (disabled) {\n        stopListening();\n      }\n    }, [disabled, stopListening]);\n\n    if (disabled && active !== -1) {\n      setActive(-1);\n    }\n\n    var trackOffset = valueToPercent(range ? values[0] : min, min, max);\n    var trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n\n    var trackStyle = slider_component_objectSpread(slider_component_objectSpread({}, axisProps[axis].offset(trackOffset)), axisProps[axis].leap(trackLeap));\n\n    var railProps = componentsProps.rail;\n    var Rail = typeof components.Rail === \'function\' ? /*#__PURE__*/react.createElement(components.Rail, (0,esm_extends/* default */.Z)({}, railProps, {\n      style: slider_component_objectSpread({}, railProps === null || railProps === void 0 ? void 0 : railProps.style)\n    })) : /*#__PURE__*/react.createElement(slider_styles.Rail, (0,esm_extends/* default */.Z)({}, railProps, {\n      style: slider_component_objectSpread({}, railProps === null || railProps === void 0 ? void 0 : railProps.style)\n    }));\n    var trackProps = componentsProps.track;\n    var Track = !hideTrack && (typeof components.Track === \'function\' ? /*#__PURE__*/react.createElement(components.Track, (0,esm_extends/* default */.Z)({}, trackProps, {\n      style: slider_component_objectSpread(slider_component_objectSpread({}, trackStyle), trackProps === null || trackProps === void 0 ? void 0 : trackProps.style)\n    })) : /*#__PURE__*/react.createElement(slider_styles.Track, (0,esm_extends/* default */.Z)({}, trackProps, {\n      style: slider_component_objectSpread(slider_component_objectSpread({}, trackStyle), trackProps === null || trackProps === void 0 ? void 0 : trackProps.style)\n    })));\n    var thumbProps = componentsProps.thumb;\n    var Thumb = components.Thumb || slider_styles.Thumb;\n    var LabelTooltip = components.LabelTooltip || slider_styles.LabelTooltip;\n    var labelTooltipProps = componentsProps.labelTooltip;\n    var annotationText = annotation ? " ".concat(annotation) : \'\';\n    return /*#__PURE__*/react.createElement(slider_styles.Slider, (0,esm_extends/* default */.Z)({\n      ref: handleRef,\n      disabled: disabled,\n      onTouchStart: handleTouchStart,\n      onMouseDown: handleMouseDown\n    }, rest), Rail, Track, values.map(function (value, index) {\n      var percent = valueToPercent(value, min, max);\n      var style = axisProps[axis].offset(percent);\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        react.createElement(react.Fragment, {\n          key: index\n        }, /*#__PURE__*/react.createElement(Thumb, (0,esm_extends/* default */.Z)({\n          "data-index": index,\n          onMouseOver: handleMouseOver,\n          onMouseLeave: handleMouseLeave\n        }, thumbProps, {\n          style: slider_component_objectSpread(slider_component_objectSpread({}, style), {}, {\n            pointerEvents: disableSwap && active !== index ? \'none\' : undefined\n          }, thumbProps === null || thumbProps === void 0 ? void 0 : thumbProps.style)\n        }), /*#__PURE__*/react.createElement("input", {\n          "data-index": index,\n          type: "range",\n          min: min,\n          max: max,\n          value: values[index],\n          step: step,\n          disabled: disabled,\n          onChange: handleHiddenInputChange\n        }), /*#__PURE__*/react.createElement(LabelTooltip, {\n          open: open === index || active === index || labelTooltip === \'on\',\n          disabled: disabled,\n          style: slider_component_objectSpread({}, labelTooltipProps === null || labelTooltipProps === void 0 ? void 0 : labelTooltipProps.style)\n        }, values[index], annotationText)))\n      );\n    }), !hideAnnotation && /*#__PURE__*/react.createElement(slider_styles.SliderAnnotation, null, /*#__PURE__*/react.createElement("span", null, min, annotationText), /*#__PURE__*/react.createElement("span", null, max, annotationText)));\n  }();\n});\nslider_component_Slider.defaultProps = {\n  annotation: \'MB\',\n  min: 0,\n  max: 100,\n  step: 1,\n  labelTooltip: LabelTooltip.Off\n};\nslider_component_Slider.propTypes = {\n  defaultValue: prop_types_default().oneOfType([(prop_types_default()).array, (prop_types_default()).number]),\n  value: prop_types_default().oneOfType([(prop_types_default()).array, (prop_types_default()).number]),\n  min: (prop_types_default()).number,\n  max: (prop_types_default()).number,\n  onChange: (prop_types_default()).func,\n  onMouseDown: (prop_types_default()).func,\n  onMouseUp: (prop_types_default()).func,\n  step: (prop_types_default()).number,\n  annotation: (prop_types_default()).string,\n  disabled: (prop_types_default()).bool,\n  disableSwap: (prop_types_default()).bool,\n  hideTrack: (prop_types_default()).bool,\n  hideAnnotation: (prop_types_default()).bool,\n  labelTooltip: prop_types_default().oneOf(objectValues(LabelTooltip)),\n  components: prop_types_default().shape({\n    Rail: (prop_types_default()).elementType,\n    Track: (prop_types_default()).elementType,\n    Thumb: (prop_types_default()).elementType,\n    LabelTooltip: (prop_types_default()).elementType\n  }),\n  // eslint-disable-next-line react/forbid-prop-types\n  componentsProps: (prop_types_default()).object\n};\n/* harmony default export */ const slider_component = (slider_component_Slider);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Slider/Slider.styled.js\nvar StyledSlider=styled_components_browser_esm(slider_component).withConfig({componentId:"sc-1wort0h-0"})(["width:",";max-width:",";user-select:none;margin-bottom:24px;.SfxSlider-annotation{font-size:13px;line-height:16px;}"],function(a){var b=a.width;return b||"100px"},function(a){var b=a.width;return b||"100px"});\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Slider/index.js\nvar Slider_excluded=["onChange"];var Slider_Slider=function(a){var b=a.onChange,c=(0,objectWithoutProperties/* default */.Z)(a,Slider_excluded);return react.createElement(StyledSlider,(0,esm_extends/* default */.Z)({annotation:"",onChange:function onChange(a,c){return b?b(c):void 0}},c))};/* harmony default export */ const common_Slider = (Slider_Slider);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Brightness/BrightnessOptions.js\nvar MIN_VALUE=-1,DEFAULT_VALUE={brightness:0},MAX_VALUE=1,sliderStyle={width:150,padding:0},BrightnessOptions=function(){var a,b=hooks_useFinetune(lib.Filters.Brighten,DEFAULT_VALUE),c=(0,slicedToArray/* default */.Z)(b,2),d=c[0],e=c[1];return react.createElement(common_Slider,{className:"FIE_brightness-option",min:MIN_VALUE,step:.05,max:MAX_VALUE,value:null!==(a=d.brightness)&&void 0!==a?a:DEFAULT_VALUE.brightness,onChange:function changeValue(a){e({brightness:utils_restrictNumber(a,MIN_VALUE,MAX_VALUE)})},style:sliderStyle})};/* harmony default export */ const Brightness_BrightnessOptions = (BrightnessOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Brightness/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/crop.js\n\n\nvar crop_excluded = ["color", "size"];\n\n\nvar Crop = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, crop_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 14 14",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M13.5968 11.0258H12.2124V2.22491H2.91714V0.444957C2.91714 0.197742 2.71937 -3.05176e-05 2.47215 -3.05176e-05C2.22494 -3.05176e-05 2.02716 0.197742 2.02716 0.444957V2.22491H0.444987C0.197772 2.22491 0 2.47212 0 2.71934C0 2.96655 0.197772 3.16432 0.444987 3.16432H2.02716V11.9157H11.273V13.4979C11.273 13.7451 11.4708 13.9429 11.718 13.9429C11.9652 13.9429 12.163 13.7451 12.163 13.4979V11.9157H13.5474C13.7946 11.9157 13.9924 11.718 13.9924 11.4707C14.0418 11.2235 13.844 11.0258 13.5968 11.0258ZM2.91714 11.0258V3.16432H11.273V11.0258H2.91714Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const crop = ((/* unused pure expression or super */ null && (Crop)));\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(73935);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/createPopper.js + 6 modules\nvar createPopper = __webpack_require__(38240);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js\nvar eventListeners = __webpack_require__(82372);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\nvar popperOffsets = __webpack_require__(77421);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js\nvar computeStyles = __webpack_require__(36531);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\nvar getNodeName = __webpack_require__(96333);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\nvar instanceOf = __webpack_require__(62556);\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js\n\n // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!(0,instanceOf/* isHTMLElement */.Re)(element) || !(0,getNodeName/* default */.Z)(element)) {\n      return;\n    } // Flow doesn\'t support to extend this property, but it\'s the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? \'\' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: \'0\',\n      top: \'0\',\n      margin: \'0\'\n    },\n    arrow: {\n      position: \'absolute\'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = \'\';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!(0,instanceOf/* isHTMLElement */.Re)(element) || !(0,getNodeName/* default */.Z)(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_applyStyles = ({\n  name: \'applyStyles\',\n  enabled: true,\n  phase: \'write\',\n  fn: applyStyles,\n  effect: effect,\n  requires: [\'computeStyles\']\n});\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/modifiers/offset.js\nvar offset = __webpack_require__(82122);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/modifiers/flip.js + 3 modules\nvar flip = __webpack_require__(45228);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js + 1 modules\nvar preventOverflow = __webpack_require__(43920);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/modifiers/arrow.js\nvar arrow = __webpack_require__(66896);\n// EXTERNAL MODULE: ./node_modules/@popperjs/core/lib/modifiers/hide.js\nvar hide = __webpack_require__(19892);\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper.js\n\n\n\n\n\n\n\n\n\n\nvar defaultModifiers = [eventListeners/* default */.Z, popperOffsets/* default */.Z, computeStyles/* default */.Z, modifiers_applyStyles, offset/* default */.Z, flip/* default */.Z, preventOverflow/* default */.Z, arrow/* default */.Z, hide/* default */.Z];\nvar popper_createPopper = /*#__PURE__*/(0,createPopper/* popperGenerator */.kZ)({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n\n// EXTERNAL MODULE: ./node_modules/react-fast-compare/index.js\nvar react_fast_compare = __webpack_require__(69590);\nvar react_fast_compare_default = /*#__PURE__*/__webpack_require__.n(react_fast_compare);\n;// CONCATENATED MODULE: ./node_modules/react-popper/lib/esm/utils.js\n\n\n/**\n * Takes an argument and if it\'s an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nvar unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nvar safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === \'function\') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};\n/**\n * Sets a ref using either a ref callback or a ref object\n */\n\nvar utils_setRef = function setRef(ref, node) {\n  // if its a function call it\n  if (typeof ref === \'function\') {\n    return safeInvoke(ref, node);\n  } // otherwise we should treat it as a ref object\n  else if (ref != null) {\n      ref.current = node;\n    }\n};\n/**\n * Simple ponyfill for Object.fromEntries\n */\n\nvar fromEntries = function fromEntries(entries) {\n  return entries.reduce(function (acc, _ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n/**\n * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs\n */\n\nvar useIsomorphicLayoutEffect = typeof window !== \'undefined\' && window.document && window.document.createElement ? react.useLayoutEffect : react.useEffect;\n;// CONCATENATED MODULE: ./node_modules/react-popper/lib/esm/usePopper.js\n\n\n\n\nvar EMPTY_MODIFIERS = [];\nvar usePopper = function usePopper(referenceElement, popperElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var prevOptions = react.useRef(null);\n  var optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || \'bottom\',\n    strategy: options.strategy || \'absolute\',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  var _React$useState = react.useState({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: \'0\',\n        top: \'0\'\n      },\n      arrow: {\n        position: \'absolute\'\n      }\n    },\n    attributes: {}\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var updateStateModifier = react.useMemo(function () {\n    return {\n      name: \'updateState\',\n      enabled: true,\n      phase: \'write\',\n      fn: function fn(_ref) {\n        var state = _ref.state;\n        var elements = Object.keys(state.elements);\n        setState({\n          styles: fromEntries(elements.map(function (element) {\n            return [element, state.styles[element] || {}];\n          })),\n          attributes: fromEntries(elements.map(function (element) {\n            return [element, state.attributes[element]];\n          }))\n        });\n      },\n      requires: [\'computeStyles\']\n    };\n  }, []);\n  var popperOptions = react.useMemo(function () {\n    var newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {\n        name: \'applyStyles\',\n        enabled: false\n      }])\n    };\n\n    if (react_fast_compare_default()(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  var popperInstanceRef = react.useRef();\n  useIsomorphicLayoutEffect(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useIsomorphicLayoutEffect(function () {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    var createPopper = options.createPopper || popper_createPopper;\n    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return function () {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/hooks/use-portal.js\n\n\n/**\n * Creates DOM element to be used as React root.\n */\nfunction createRootElement(id) {\n  var rootContainer = document.createElement(\'div\');\n  rootContainer.setAttribute(\'id\', id);\n  return rootContainer;\n}\n/**\n * Appends element as last child of body.\n */\n\n\nfunction addRootElement(rootElem) {\n  document.body.append(rootElem);\n}\n/**\n * Hook to create a React Portal.\n * Automatically handles creating and tearing-down the root elements (no SRR\n * makes this trivial), so there is no need to ensure the parent target already\n * exists.\n * @example\n * const target = usePortal(id, [id]);\n * return createPortal(children, target);\n * @param {String} id The id of the target container, e.g \'modal\' or \'spotlight\'\n * @returns {HTMLElement} The DOM node to use as the Portal target.\n */\n\n\nfunction usePortal(id) {\n  var rootElemRef = (0,react.useRef)(null);\n  (0,react.useEffect)(function () {\n    // Look for existing target dom element to append to\n    var existingParent = document.querySelector("#".concat(id)); // Parent is either a new root or the existing dom element\n\n    var parentElem = existingParent || createRootElement(id); // If there is no existing DOM element, add a new one.\n\n    if (!existingParent) {\n      addRootElement(parentElem);\n    } // Add the detached element to the parent\n\n\n    if (rootElemRef.current) {\n      parentElem.append(rootElemRef.current);\n    }\n\n    return function removeElement() {\n      if (rootElemRef.current) {\n        rootElemRef.current.remove();\n      }\n\n      if (parentElem.childNodes.length === -1) {\n        parentElem.remove();\n      }\n    };\n  }, []);\n  /**\n   * It\'s important we evaluate this lazily:\n   * - We need first render to contain the DOM element, so it shouldn\'t happen\n   *   in useEffect. We would normally put this in the constructor().\n   * - We can\'t do \'const rootElemRef = useRef(document.createElement(\'div))\',\n   *   since this will run every single render (that\'s a lot).\n   * - We want the ref to consistently point to the same DOM element and only\n   *   ever run once.\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n   */\n\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement(\'div\');\n    }\n\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\n\n/* harmony default export */ const use_portal = (usePortal);\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popper/types/position.js\nvar Position = {\n  AutoStart: \'auto-start\',\n  Auto: \'auto\',\n  AutoEnd: \'auto-end\',\n  TopStart: \'top-start\',\n  Top: \'top\',\n  TopEnd: \'top-end\',\n  BottomStart: \'bottom-start\',\n  Bottom: \'bottom\',\n  BottomEnd: \'bottom-end\',\n  LeftStart: \'left-start\',\n  Left: \'left\',\n  LeftEnd: \'left-end\',\n  RightStart: \'right-start\',\n  Right: \'right\',\n  RightEnd: \'right-end\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popper/types/strategy.js\nvar Strategy = {\n  Absloute: \'absolute\',\n  Fixed: \'fixed\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popper/popper.mixin.js\n\n\nvar _PopperMixin;\n\n\n\nvar PopperMixin = (_PopperMixin = {}, (0,defineProperty/* default */.Z)(_PopperMixin, Position.Auto, Ce(["top:0px;bottom:0px;left:0px;right:0px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.AutoEnd, Ce(["top:0px;bottom:0px;left:0px;right:0px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.AutoStart, Ce(["top:0px;bottom:0px;left:0px;right:0px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.Right, Ce(["left:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.RightEnd, Ce(["left:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.RightStart, Ce(["left:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.Left, Ce(["right:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.LeftEnd, Ce(["right:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.LeftStart, Ce(["right:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.Top, Ce(["bottom:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.TopEnd, Ce(["bottom:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.TopStart, Ce(["bottom:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.Bottom, Ce(["top:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.BottomEnd, Ce(["top:-4px;"])), (0,defineProperty/* default */.Z)(_PopperMixin, Position.BottomStart, Ce(["top:-4px;"])), _PopperMixin);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popper/popper.styles.js\n\n\n\n\n\nvar popper_styles_baseClassName = \'Popper\';\nvar Popper = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(popper_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-1373tsp-0"\n})(function () {\n  return Ce([""]);\n});\nvar PopperWrapper = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(popper_styles_baseClassName, \'wrapper\')\n}).withConfig({\n  componentId: "sc-1373tsp-1"\n})(function (_ref) {\n  var zIndex = _ref.zIndex;\n  return Ce(["position:absolute;z-index:", ";"], zIndex);\n});\nvar popper_styles_Arrow = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(popper_styles_baseClassName, \'arrow\')\n}).withConfig({\n  componentId: "sc-1373tsp-2"\n})(function (_ref2) {\n  var _ref2$position = _ref2.position,\n      position = _ref2$position === void 0 ? Position.Right : _ref2$position,\n      theme = _ref2.theme;\n  return Ce(["width:8px;height:8px;position:absolute;&::before{content:\'\';background:", ";width:8px;height:8px;transform:rotate(45deg);position:absolute;top:0;left:0;z-index:-1;}", ""], theme.palette[Color.IconsPrimary], PopperMixin[position]);\n});\nvar Overlay = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(popper_styles_baseClassName, \'Overlay\')\n}).withConfig({\n  componentId: "sc-1373tsp-3"\n})(function () {\n  return Ce(["position:fixed;right:0px;bottom:0px;top:0px;left:0px;background-color:transparent;"]);\n});\nvar popper_styles_Styled = applyDisplayNames({\n  Popper: Popper,\n  Overlay: Overlay,\n  Arrow: popper_styles_Arrow,\n  PopperWrapper: PopperWrapper\n});\n/* harmony default export */ const popper_styles = (popper_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popper/popper.component.js\n\n\n\n\nfunction popper_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction popper_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { popper_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { popper_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable react/forbid-prop-types */\n\n\n\n\n\n\n\n\nvar popper_component_Popper = intrinsic_component_intrinsicComponent(function (_ref, ref // eslint-disable-next-line sonarjs/cognitive-complexity\n) {\n  var anchorEl = _ref.anchorEl,\n      children = _ref.children,\n      open = _ref.open,\n      _ref$position = _ref.position,\n      initialPlacement = _ref$position === void 0 ? \'bottom\' : _ref$position,\n      _ref$arrow = _ref.arrow,\n      arrow = _ref$arrow === void 0 ? false : _ref$arrow,\n      popperOptions = _ref.popperOptions,\n      onClick = _ref.onClick,\n      _ref$overlay = _ref.overlay,\n      overlay = _ref$overlay === void 0 ? false : _ref$overlay,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 1300 : _ref$zIndex,\n      enableUnderlayingEvent = _ref.enableUnderlayingEvent;\n  var target = use_portal(generateClassNames(\'Popper\'));\n  var Ref = (0,react.useRef)(null);\n  var ownRef = useForkRef(Ref, ref);\n\n  var _useState = (0,react.useState)(null),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      arrowElement = _useState2[0],\n      setArrowElement = _useState2[1];\n\n  var arrowModifier = [{\n    name: \'arrow\',\n    options: {\n      element: arrowElement\n    }\n  }, {\n    name: \'offset\',\n    options: {\n      offset: [0, 10]\n    }\n  }];\n  var popperModifiers = arrow ? arrowModifier : [];\n\n  if (popperOptions && popperOptions.modifiers != null) {\n    popperModifiers = popperModifiers.concat(popperOptions.modifiers);\n  }\n\n  var popper = usePopper(anchorEl, Ref.current, popper_component_objectSpread(popper_component_objectSpread({\n    placement: initialPlacement\n  }, popperOptions), {}, {\n    modifiers: popperModifiers\n  }));\n  var handleRef = react.useCallback(function (node) {\n    if (typeof ownRef === \'function\') {\n      ownRef(node);\n    }\n  }, [ownRef]);\n\n  if (!open) {\n    return /*#__PURE__*/react.createElement("div", {\n      ref: handleRef\n    });\n  }\n\n  var passEventToUnderlayingEvent = function passEventToUnderlayingEvent(event) {\n    setTimeout(function () {\n      if (event.clientX && event.clientY) {\n        var elem = document.elementFromPoint(event.clientX, event.clientY);\n\n        if (elem) {\n          elem.dispatchEvent(event.nativeEvent);\n        }\n      }\n    }, 0);\n  };\n\n  var handleOnClicking = function handleOnClicking(event) {\n    event.persist();\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (onClick) {\n      onClick(event);\n    }\n\n    if (enableUnderlayingEvent) {\n      passEventToUnderlayingEvent(event);\n    }\n  };\n\n  var renderOverlay = function renderOverlay() {\n    return /*#__PURE__*/react.createElement(popper_styles.Overlay, {\n      onClick: handleOnClicking,\n      onContextMenu: handleOnClicking\n    });\n  };\n\n  var render = function render() {\n    var _popper$state;\n\n    return /*#__PURE__*/react.createElement(popper_styles.PopperWrapper, {\n      zIndex: zIndex\n    }, overlay && renderOverlay(), /*#__PURE__*/react.createElement(popper_styles.Popper, (0,esm_extends/* default */.Z)({\n      ref: handleRef,\n      style: popper_component_objectSpread({}, popper.styles.popper)\n    }, popper.attributes.popper), children, arrow && /*#__PURE__*/react.createElement(popper_styles.Arrow, {\n      position: ((_popper$state = popper.state) === null || _popper$state === void 0 ? void 0 : _popper$state.placement) || initialPlacement,\n      ref: setArrowElement,\n      style: popper.styles.arrow\n    })));\n  };\n\n  return /*#__PURE__*/(0,react_dom.createPortal)(render(), target);\n});\npopper_component_Popper.defaultProps = {};\nvar popper_component_propTypes = {\n  anchorEl: prop_types_default().oneOfType([prop_types_default().instanceOf(Element), (prop_types_default()).object]),\n  popperOptions: prop_types_default().shape({\n    modifiers: prop_types_default().arrayOf(prop_types_default().shape({\n      data: (prop_types_default()).object,\n      effect: (prop_types_default()).func,\n      enabled: (prop_types_default()).bool,\n      fn: (prop_types_default()).func,\n      name: (prop_types_default()).any.isRequired,\n      options: (prop_types_default()).object,\n      phase: prop_types_default().oneOf([\'afterMain\', \'afterRead\', \'afterWrite\', \'beforeMain\', \'beforeRead\', \'beforeWrite\', \'main\', \'read\', \'write\']),\n      requires: prop_types_default().arrayOf((prop_types_default()).string),\n      requiresIfExists: prop_types_default().arrayOf((prop_types_default()).string)\n    })),\n    onFirstUpdate: (prop_types_default()).func,\n    placement: prop_types_default().oneOf(objectValues(Position)),\n    strategy: prop_types_default().oneOf(objectValues(Strategy))\n  }),\n  overlay: (prop_types_default()).bool,\n  arrow: (prop_types_default()).bool,\n  zIndex: (prop_types_default()).number,\n  enableUnderlayingEvent: (prop_types_default()).bool\n};\npopper_component_Popper.propTypes = popper_component_propTypes;\n/* harmony default export */ const popper_component = (popper_component_Popper);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/menu/menu.styles.js\n\n\n\n\nvar menu_styles_baseClassName = \'Menu\';\nvar menu_styles_Overlay = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(menu_styles_baseClassName, \'Overlay\')\n}).withConfig({\n  componentId: "sc-10okxhw-0"\n})(function () {\n  return Ce(["position:fixed;right:0px;bottom:0px;top:0px;left:0px;background-color:transparent;z-index:-1;"]);\n});\nvar Menu = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(menu_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-10okxhw-1"\n})(function (_ref) {\n  var rect = _ref.rect,\n      theme = _ref.theme,\n      _ref$maxHeight = _ref.maxHeight,\n      maxHeight = _ref$maxHeight === void 0 ? \'\' : _ref$maxHeight;\n  return Ce(["min-width:", "px;min-height:16px;overflow-x:hidden;overflow-y:auto;transition:opacity 251ms cubic-bezier(0.4,0,0.2,1) 0ms,transform 167ms cubic-bezier(0.4,0,0.2,1) 0ms;outline:0;box-shadow:0 2px 4px ", ";border-radius:", ";", "::-webkit-scrollbar{width:6px;}::-webkit-scrollbar-track{background:#f1f1f1;}::-webkit-scrollbar-thumb{background:rgba(0,0,0,0.35);border-radius:2px;}::-webkit-scrollbar-thumb:hover{background:rgba(0,0,0,0.5);}"], rect.width, theme.palette[Color.LightShadow], theme.shape.borderRadius[BorderRadiusSize.Md], maxHeight && Ce(["max-height:", ";"], Number.isNaN(+maxHeight) ? maxHeight : "".concat(maxHeight, "px")));\n});\nvar menu_styles_Styled = applyDisplayNames({\n  Menu: Menu,\n  Overlay: menu_styles_Overlay\n});\n/* harmony default export */ const menu_styles = (menu_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/menu/menu.component.js\n\n\n\n\nvar menu_component_excluded = ["id", "children", "open", "fullWidth", "anchorElPosition", "anchorEl", "onClose", "containerProps", "alignCenter", "maxHeight", "position", "popperOptions", "enableOverlay", "zIndex", "hideScroll", "enableUnderlayingEvent"];\n\nfunction menu_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction menu_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { menu_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { menu_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\n\nvar menu_component_Menu = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      open = _ref.open,\n      fullWidth = _ref.fullWidth,\n      anchorElPosition = _ref.anchorElPosition,\n      anchorEl = _ref.anchorEl,\n      onClose = _ref.onClose,\n      containerProps = _ref.containerProps,\n      alignCenter = _ref.alignCenter,\n      maxHeight = _ref.maxHeight,\n      position = _ref.position,\n      popperOptions = _ref.popperOptions,\n      _ref$enableOverlay = _ref.enableOverlay,\n      enableOverlay = _ref$enableOverlay === void 0 ? true : _ref$enableOverlay,\n      zIndex = _ref.zIndex,\n      _ref$hideScroll = _ref.hideScroll,\n      hideScroll = _ref$hideScroll === void 0 ? true : _ref$hideScroll,\n      _ref$enableUnderlayin = _ref.enableUnderlayingEvent,\n      enableUnderlayingEvent = _ref$enableUnderlayin === void 0 ? false : _ref$enableUnderlayin,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, menu_component_excluded);\n\n  var _useState = (0,react.useState)(null),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      timeout = _useState2[0],\n      setTimeoutState = _useState2[1];\n\n  var _useState3 = (0,react.useState)(new DOMRect()),\n      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n      rect = _useState4[0],\n      setRect = _useState4[1];\n\n  var menuRef = (0,react.useRef)(null);\n  var updateRect = (0,react.useCallback)(function () {\n    var _anchorEl$getBounding;\n\n    var defaultPosition = menu_component_objectSpread({\n      top: 0,\n      left: 0,\n      height: 0,\n      width: 0\n    }, anchorElPosition || {});\n\n    var defaultRect = new DOMRect(defaultPosition.left, defaultPosition.top, defaultPosition.width, defaultPosition.height);\n    setRect((_anchorEl$getBounding = anchorEl === null || anchorEl === void 0 ? void 0 : anchorEl.getBoundingClientRect()) !== null && _anchorEl$getBounding !== void 0 ? _anchorEl$getBounding : defaultRect);\n  }, [open, timeout, anchorEl]);\n  var handleWindowSizeChanged = (0,react.useCallback)(function () {\n    if (open) {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      setTimeoutState(setTimeout(updateRect, 300));\n    }\n  }, [open, timeout]);\n  (0,react.useEffect)(function () {\n    window.addEventListener(\'resize\', handleWindowSizeChanged);\n    return function () {\n      window.removeEventListener(\'resize\', handleWindowSizeChanged);\n    };\n  }, [handleWindowSizeChanged]);\n  (0,react.useEffect)(function () {\n    updateRect();\n  }, [anchorElPosition, updateRect]);\n  (0,react.useEffect)(function () {\n    if (hideScroll) {\n      if (open) {\n        document.body.classList.add(\'Menu-open\');\n        updateRect();\n      } else {\n        document.body.classList.remove(\'Menu-open\');\n      }\n\n      return function () {\n        document.body.classList.remove(\'Menu-open\');\n      };\n    }\n  }, [open, updateRect]);\n\n  var handleClose = function handleClose() {\n    if (typeof onClose === \'function\') {\n      onClose();\n    }\n  };\n\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(popper_component, {\n    ref: menuRef,\n    position: position || \'bottom\',\n    open: Boolean(anchorEl),\n    anchorEl: anchorEl,\n    overlay: Boolean(enableOverlay),\n    onClick: handleClose,\n    popperOptions: popperOptions,\n    zIndex: zIndex,\n    enableUnderlayingEvent: enableUnderlayingEvent\n  }, /*#__PURE__*/react.createElement(menu_styles.Menu, (0,esm_extends/* default */.Z)({}, containerProps, {\n    alignCenter: Boolean(alignCenter),\n    rect: rect\n  }, rest, {\n    ref: ref,\n    maxHeight: maxHeight\n  }), children)));\n});\nvar defaultProps = {\n  open: false,\n  containerProps: {},\n  maxHeight: 0,\n  position: \'bottom\',\n  enableOverlay: true,\n  hideScroll: true\n};\nmenu_component_Menu.defaultProps = defaultProps;\nvar menu_component_propTypes = {\n  anchorElPosition: prop_types_default().shape({\n    left: (prop_types_default()).number,\n    right: (prop_types_default()).number,\n    top: (prop_types_default()).number,\n    bottom: (prop_types_default()).number\n  }),\n  anchorEl: prop_types_default().instanceOf(Element),\n  open: (prop_types_default()).bool,\n  fullWidth: (prop_types_default()).bool,\n  onClose: (prop_types_default()).func,\n  id: (prop_types_default()).string,\n  // eslint-disable-next-line react/forbid-prop-types\n  containerProps: (prop_types_default()).object,\n  alignCenter: (prop_types_default()).bool,\n  maxHeight: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  popperOptions: popper_component_propTypes.popperOptions,\n  position: prop_types_default().oneOf(objectValues(Position)),\n  enableOverlay: (prop_types_default()).bool,\n  zIndex: (prop_types_default()).number,\n  hideScroll: (prop_types_default()).bool,\n  enableUnderlayingEvent: (prop_types_default()).bool\n};\nmenu_component_Menu.propTypes = menu_component_propTypes;\n/* harmony default export */ const menu_component = (menu_component_Menu);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getZoomFitFactor.js\nvar getZoomFitFactor=function(a,b){return Math.min(a.width/b.width,a.height/b.height)||DEFAULT_ZOOM_FACTOR};/* harmony default export */ const utils_getZoomFitFactor = (getZoomFitFactor);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/utils/functions/intrinsic-component.js\n\n\n/**\n * Wrapper around React\'s `forwardRef` function, which adds a `displayName` to each component\n * created using it\n */\nfunction functions_intrinsic_component_intrinsicComponent(render, displayName) {\n  var component = /*#__PURE__*/(0,react.forwardRef)(render); // eslint-disable-next-line immutable/no-mutation\n\n  component.displayName = displayName || render.name;\n  return component;\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/spinner.js\n\n\nvar spinner_excluded = ["color", "size"];\n\n\nvar Spinner = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 28 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, spinner_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M41.3465 44.355C33.5656 50.7844 22.9687 51.6268 14.3708 47.3665L17.8949 44.4545C24.754 47.117 32.7424 46.1093 38.709 41.1792C44.6755 36.249 47.1546 28.6071 45.8085 21.3893L49.3325 18.4773C51.9291 27.6967 49.1274 37.9256 41.3465 44.355Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M36.1749 2.63356L32.6509 5.54555C25.821 2.91828 17.838 3.86187 11.8366 8.82088C5.87009 13.7511 3.42028 21.4282 4.7372 28.6107L1.21311 31.5227C-1.38344 22.3034 1.45314 12.0456 9.19916 5.64502C16.9801 -0.784402 27.5768 -1.62682 36.1749 2.63356Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const spinner = (Spinner);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/types/color/badge-color.js\nvar BadgeColor = {\n  Primary: \'primary\',\n  Secondary: \'secondary\',\n  White: \'white\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/badge/badge.mixin.js\n\n\nvar _colorBadgeMixin;\n\n\n\n\nvar colorBadgeMixin = (_colorBadgeMixin = {}, (0,defineProperty/* default */.Z)(_colorBadgeMixin, BadgeColor.Primary, function (_ref) {\n  var palette = _ref.theme.palette;\n  return Ce(["background-color:", ";color:", ";"], palette[Color.AccentPrimary], palette[Color.ButtonPrimaryText]);\n}), (0,defineProperty/* default */.Z)(_colorBadgeMixin, BadgeColor.White, function (_ref2) {\n  var palette = _ref2.theme.palette;\n  return Ce(["background-color:", ";color:", ";"], palette[Color.ButtonPrimaryText], palette[Color.AccentPrimary]);\n}), (0,defineProperty/* default */.Z)(_colorBadgeMixin, BadgeColor.Secondary, function (_ref3) {\n  var palette = _ref3.theme.palette;\n  return Ce(["background-color:", ";color:#e9eef2;"], palette[Color.IconsPrimary]);\n}), _colorBadgeMixin);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/badge/badge.styles.js\n\n\n\nvar badge_styles_baseClassName = \'Badge\';\nvar defaultSize = 20;\nvar BadgeRoot = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(badge_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-1rfm40m-0"\n})(["position:relative;display:inline-flex;flex-shrink:0;vertical-align:middle;"]);\nvar Badge = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(badge_styles_baseClassName)\n}).withConfig({\n  componentId: "sc-1rfm40m-1"\n})(function (_ref) {\n  var size = _ref.size,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'secondary\' : _ref$color,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? \'0.75rem\' : _ref$fontSize,\n      _ref$padding = _ref.padding,\n      padding = _ref$padding === void 0 ? \'0 6px\' : _ref$padding,\n      inline = _ref.inline;\n  return Ce(["", " display:flex;flex-wrap:wrap;flex-direction:row;justify-content:center;align-items:center;align-content:center;height:", "px;min-width:", "px;line-height:1;padding:", ";font-size:", ";box-sizing:border-box;transition:transform 225ms cubic-bezier(0.4,0,0.2,1) 0ms;border-radius:", "px;z-index:1;", ""], inline ? \'\' : \'position: absolute;\', size || defaultSize, size || defaultSize, typeof padding === \'number\' ? "".concat(padding, "px") : padding, typeof fontSize === \'number\' ? "".concat(fontSize, "px") : fontSize, (size || defaultSize) / 2, colorBadgeMixin[color]);\n});\nvar badge_styles_Styled = applyDisplayNames({\n  BadgeRoot: BadgeRoot,\n  Badge: Badge\n});\n/* harmony default export */ const badge_styles = (badge_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/badge/badge.component.js\n\nvar badge_component_excluded = ["badgeContent"];\n\n\n\n\n\nvar badge_component_Badge = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var badgeContent = _ref.badgeContent,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, badge_component_excluded);\n\n  return /*#__PURE__*/react.createElement(badge_styles.BadgeRoot, {\n    ref: ref\n  }, /*#__PURE__*/react.createElement(badge_styles.Badge, rest, badgeContent));\n});\nbadge_component_Badge.defaultProps = {\n  color: BadgeColor.Secondary,\n  inline: false\n};\nbadge_component_Badge.propTypes = {\n  color: prop_types_default().oneOf(objectValues(BadgeColor)),\n  badgeContent: (prop_types_default()).node,\n  size: prop_types_default().oneOfType([(prop_types_default()).number]),\n  fontSize: prop_types_default().oneOfType([(prop_types_default()).number, (prop_types_default()).string]),\n  padding: prop_types_default().oneOfType([(prop_types_default()).number, (prop_types_default()).string]),\n  inline: (prop_types_default()).bool\n};\n/* harmony default export */ const badge_component = (badge_component_Badge);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/types/color/button-color.js\nvar ButtonColor = {\n  Primary: \'primary\',\n  Secondary: \'secondary\',\n  Link: \'link\',\n  Error: \'error\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/types/size/button-size.js\nvar ButtonSize = {\n  Xs: \'xs\',\n  Sm: \'sm\',\n  Md: \'md\',\n  Lg: \'lg\',\n  Xl: \'xl\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/button/button.utils.js\n\nvar getIconSize = function getIconSize(sizeName) {\n  switch (sizeName) {\n    case ButtonSize.Xl:\n      return 16;\n\n    case ButtonSize.Lg:\n    case ButtonSize.Md:\n      return 14;\n\n    case ButtonSize.Sm:\n      return 12;\n\n    case ButtonSize.Xs:\n    default:\n      return 11;\n  }\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/button/button.mixin.js\n\n\nvar _colorButtonMixin, _sizeButtonMixin, _sizeButtonLabelMixin;\n\n\n\n\n\n\nvar colorButtonMixin = (_colorButtonMixin = {}, (0,defineProperty/* default */.Z)(_colorButtonMixin, ButtonColor.Primary, function (_ref) {\n  var palette = _ref.theme.palette;\n  return Ce(["background-color:", ";color:", ";", "{background-color:", ";}&:hover{background-color:", ";}&:active{background-color:", ";}&:disabled{color:", ";background:", ";", "{background-color:", ";color:", ";}}"], palette[Color.AccentPrimary], palette[Color.ButtonPrimaryText], badge_styles.Badge, palette[Color.ButtonPrimaryText], palette[Color.AccentPrimaryHover], palette[Color.AccentPrimaryActive], palette[Color.ButtonDisabledText], palette[Color.AccentPrimaryDisabled], badge_styles.Badge, palette[Color.ButtonDisabledText], palette[Color.AccentPrimaryDisabled]);\n}), (0,defineProperty/* default */.Z)(_colorButtonMixin, ButtonColor.Secondary, function (_ref2) {\n  var palette = _ref2.theme.palette;\n  return Ce(["background-color:", ";color:", ";&:hover{background-color:", ";}&:active{background-color:", ";}&:disabled{color:", ";background:", ";", "{background-color:", ";}}", "{background-color:", ";}"], palette[Color.ActiveSecondary], palette[Color.IconsPrimary], palette[Color.ActiveSecondaryHover], palette[Color.ActiveSecondaryActive], palette[Color.ButtonDisabledText], palette[Color.AccentPrimaryDisabled], badge_styles.Badge, palette[Color.ButtonDisabledText], badge_styles.Badge, palette[Color.IconsPrimary]);\n}), (0,defineProperty/* default */.Z)(_colorButtonMixin, ButtonColor.Link, function (_ref3) {\n  var palette = _ref3.theme.palette;\n  return Ce(["background-color:transparent;color:", ";&:hover{color:", ";", "{background-color:", ";}}&:active{color:", ";", "{background-color:", ";}}&:disabled{color:", ";", "{background-color:", ";}}"], palette[Color.LinkPrimary], palette[Color.LinkHover], badge_styles.Badge, palette[Color.LinkHover], palette[Color.LinkActive], badge_styles.Badge, palette[Color.LinkActive], palette[Color.ButtonDisabledText], badge_styles.Badge, palette[Color.ButtonDisabledText]);\n}), (0,defineProperty/* default */.Z)(_colorButtonMixin, ButtonColor.Error, function (_ref4) {\n  var palette = _ref4.theme.palette;\n  return Ce(["background-color:", ";color:", ";", "{background-color:", ";}&:hover{background-color:rgba(224,81,44,1);}&:active{background-color:rgba(201,58,23,1);}&:disabled{color:", ";background:", ";", "{background-color:", ";color:", ";}}"], palette[Color.Error], palette[Color.ButtonPrimaryText], badge_styles.Badge, palette[Color.ButtonPrimaryText], palette[Color.ButtonDisabledText], palette[Color.AccentPrimaryDisabled], badge_styles.Badge, palette[Color.ButtonDisabledText], palette[Color.AccentPrimaryDisabled]);\n}), _colorButtonMixin);\nvar sizeButtonMixin = (_sizeButtonMixin = {}, (0,defineProperty/* default */.Z)(_sizeButtonMixin, ButtonSize.Xs, Ce(["padding:4px 8px;"])), (0,defineProperty/* default */.Z)(_sizeButtonMixin, ButtonSize.Sm, Ce(["padding:6px 10px;"])), (0,defineProperty/* default */.Z)(_sizeButtonMixin, ButtonSize.Md, Ce(["padding:8px 12px;"])), (0,defineProperty/* default */.Z)(_sizeButtonMixin, ButtonSize.Lg, Ce(["padding:10px 14px;"])), (0,defineProperty/* default */.Z)(_sizeButtonMixin, ButtonSize.Xl, Ce(["padding:12px 16px;"])), _sizeButtonMixin);\nvar sizeButtonLabelMixin = (_sizeButtonLabelMixin = {}, (0,defineProperty/* default */.Z)(_sizeButtonLabelMixin, ButtonSize.Xs, function (_ref5) {\n  var font = _ref5.theme.typography.font;\n  return Ce(font[FontVariant.ButtonXs]);\n}), (0,defineProperty/* default */.Z)(_sizeButtonLabelMixin, ButtonSize.Sm, function (_ref6) {\n  var font = _ref6.theme.typography.font;\n  return Ce(font[FontVariant.ButtonSm]);\n}), (0,defineProperty/* default */.Z)(_sizeButtonLabelMixin, ButtonSize.Md, function (_ref7) {\n  var font = _ref7.theme.typography.font;\n  return Ce(font[FontVariant.ButtonMd]);\n}), (0,defineProperty/* default */.Z)(_sizeButtonLabelMixin, ButtonSize.Lg, function (_ref8) {\n  var font = _ref8.theme.typography.font;\n  return Ce(font[FontVariant.ButtonLg]);\n}), (0,defineProperty/* default */.Z)(_sizeButtonLabelMixin, ButtonSize.Xl, function (_ref9) {\n  var font = _ref9.theme.typography.font;\n  return Ce(font[FontVariant.ButtonXl]);\n}), _sizeButtonLabelMixin);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/button/button.styles.js\n\n\n\n\n\nvar button_styles_baseClassName = \'Button\';\nvar button_styles_Label = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(button_styles_baseClassName, \'Label\')\n}).withConfig({\n  componentId: "sc-lxwit0-0"\n})(["display:flex;"]);\nvar button_styles_Badge = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(button_styles_baseClassName, \'Badge\')\n}).withConfig({\n  componentId: "sc-lxwit0-1"\n})(["display:flex;margin-left:5px;"]);\nvar Button = /*#__PURE__*/styled_components_browser_esm.button.attrs({\n  className: generateClassNames(button_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-lxwit0-2"\n})(function (_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? ButtonColor.Secondary : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? ButtonSize.Md : _ref$size,\n      theme = _ref.theme;\n  return Ce(["display:inline-flex;flex-shrink:0;flex-direction:row;align-items:center;border-radius:", ";border:0;cursor:pointer;outline:none;", " ", " ", "{", "}"], theme.shape.borderRadius[BorderRadiusSize.Sm], colorButtonMixin[color], sizeButtonMixin[size], button_styles_Label, sizeButtonLabelMixin[size]);\n});\nvar button_styles_Icon = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(button_styles_baseClassName, \'Icon\')\n}).withConfig({\n  componentId: "sc-lxwit0-3"\n})(function (_ref2) {\n  var $loading = _ref2.$loading;\n  return Ce(["display:flex;margin-right:4px;margin-left:1px;svg{animation:", ";}"], $loading ? \'spinner 1.2s linear infinite\' : \'1.2s\');\n});\nvar button_styles_Styled = applyDisplayNames({\n  Button: Button,\n  Label: button_styles_Label,\n  Icon: button_styles_Icon,\n  Badge: button_styles_Badge\n});\n/* harmony default export */ const button_styles = (button_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/button/button.component.js\n\n\nvar button_component_excluded = ["children", "icon", "badge", "color", "size", "loading", "disabled"];\n\n\n\n\n\n\n\n\nvar button_component_Button = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      icon = _ref.icon,\n      badge = _ref.badge,\n      color = _ref.color,\n      size = _ref.size,\n      loading = _ref.loading,\n      disabled = _ref.disabled,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, button_component_excluded);\n\n  return /*#__PURE__*/react.createElement(button_styles.Button, (0,esm_extends/* default */.Z)({}, rest, {\n    disabled: loading || disabled,\n    color: color,\n    size: size,\n    ref: ref\n  }), icon && /*#__PURE__*/react.createElement(button_styles.Icon, {\n    $loading: loading\n  }, typeof icon === \'function\' ? loading ? /*#__PURE__*/react.createElement(spinner, {\n    size: getIconSize(size)\n  }) : icon({\n    size: getIconSize(size)\n  }) : // eslint-disable-next-line unicorn/no-nested-ternary\n  loading ? /*#__PURE__*/react.createElement(spinner, {\n    size: getIconSize(size)\n  }) : icon), loading && !icon && /*#__PURE__*/react.createElement(button_styles.Icon, {\n    $loading: loading\n  }, /*#__PURE__*/react.createElement(spinner, {\n    size: getIconSize(size)\n  })), /*#__PURE__*/react.createElement(button_styles.Label, null, children), badge && /*#__PURE__*/react.createElement(button_styles.Badge, null, /*#__PURE__*/react.createElement(badge_component, {\n    inline: true,\n    size: 14,\n    fontSize: 10,\n    padding: "0 1px",\n    badgeContent: badge,\n    color: color === ButtonColor.Primary ? \'white\' : \'secondary\'\n  })));\n});\nbutton_component_Button.defaultProps = {\n  size: ButtonSize.Md,\n  color: ButtonColor.Secondary\n};\nbutton_component_Button.propTypes = {\n  size: prop_types_default().oneOf(objectValues(ButtonSize)),\n  color: prop_types_default().oneOf(objectValues(ButtonColor)),\n  icon: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]),\n  badge: (prop_types_default()).node,\n  loading: (prop_types_default()).bool,\n  disabled: (prop_types_default()).bool\n};\n/* harmony default export */ const button_component = (button_component_Button);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Crop/Crop.styled.js\nvar StyledOpenMenuButton=styled_components_browser_esm(button_component).withConfig({componentId:"sc-ldar2z-0"})(["margin:0 0 0 6px;padding:0;"]),StyledMenuItemIcon=styled_components_browser_esm.div.withConfig({componentId:"sc-ldar2z-1"})(["margin-right:6px;svg,span{vertical-align:middle;}"]),StyledRatioDescription=styled_components_browser_esm(label_component).withConfig({componentId:"sc-ldar2z-2"})(["margin-left:4px;cursor:pointer;"]);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/custom.js\n\n\nvar custom_excluded = ["color", "size"];\n\n\nvar Custom = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, custom_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M0.562515 0.562512H3.68752V2.90626H2.90627V3.68751H0.562515V0.562512ZM0.562515 44.3125V47.4375H3.68752V45.0938H2.90627V44.3125H0.562515ZM44.3125 47.4375H47.4375V44.3125H45.0938V45.0938H44.3125V47.4375ZM47.4375 3.68751V0.562512H44.3125V2.90626H45.0938V3.68751H47.4375ZM7.59376 0.562512V3.68751H12.2813V0.562512H7.59376ZM16.9688 0.562512V3.68751H21.6563V0.562512H16.9688ZM26.3438 0.562512V3.68751H31.0313V0.562512H26.3438ZM35.7188 0.562512V3.68751H40.4063V0.562512H35.7188ZM47.4375 7.59376H44.3125V12.2813H47.4375V7.59376ZM47.4375 16.9688H44.3125V21.6563H47.4375V16.9688ZM47.4375 26.3438H44.3125V31.0313H47.4375V26.3438ZM47.4375 35.7188H44.3125V40.4063H47.4375V35.7188ZM40.4063 47.4375V44.3125H35.7188V47.4375H40.4063ZM31.0313 47.4375V44.3125H26.3438V47.4375H31.0313ZM21.6563 47.4375V44.3125H16.9688V47.4375H21.6563ZM12.2813 47.4375V44.3125H7.59377V47.4375H12.2813ZM0.562515 40.4063H3.68752V35.7188H0.562515V40.4063ZM0.562515 31.0313H3.68752V26.3438H0.562515V31.0313ZM0.562515 21.6563H3.68752V16.9688H0.562515V21.6563ZM0.562515 12.2813H3.68752V7.59376H0.562515V12.2813Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const custom = (Custom);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/ellipse.js\n\n\nvar ellipse_excluded = ["color", "size"];\n\n\nvar ellipse_Ellipse = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, ellipse_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M25.2047 46.875C37.2859 46.875 47.0797 37.0812 47.0797 25C47.0797 12.9188 37.2859 3.125 25.2047 3.125C13.1235 3.125 3.32968 12.9188 3.32968 25C3.32968 37.0812 13.1235 46.875 25.2047 46.875ZM25.2047 50C39.0118 50 50.2047 38.8071 50.2047 25C50.2047 11.1929 39.0118 0 25.2047 0C11.3976 0 0.204681 11.1929 0.204681 25C0.204681 38.8071 11.3976 50 25.2047 50Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const ellipse = (ellipse_Ellipse);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/landscape.js\n\n\nvar landscape_excluded = ["color", "size"];\n\n\nvar Landscape = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, landscape_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 51 36",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M4.11841 3.93805V32.063H47.8684V3.93805H4.11841ZM3.49341 0.813049C2.1127 0.813049 0.993408 1.91235 0.993408 3.26841V32.7327C0.993408 34.0887 2.1127 35.188 3.49341 35.188H48.4934C49.8741 35.188 50.9934 34.0887 50.9934 32.7327V3.26841C50.9934 1.91235 49.8741 0.813049 48.4934 0.813049H3.49341Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const landscape = (Landscape);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/portrait.js\n\n\nvar portrait_excluded = ["color", "size"];\n\n\nvar Portrait = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, portrait_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 36 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M32.0559 46.8755L32.0559 3.12555L3.93091 3.12555L3.93091 46.8755H32.0559ZM35.1809 3.12555C35.1809 1.39966 33.7818 0.000549316 32.0559 0.000549316H3.93091C2.20502 0.000549316 0.805908 1.39966 0.805908 3.12555V46.8755C0.805908 48.6014 2.20502 50.0005 3.93091 50.0005H32.0559C33.7818 50.0005 35.1809 48.6014 35.1809 46.8755L35.1809 3.12555Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const portrait = (Portrait);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/image-outline.js\n\n\nvar image_outline_excluded = ["color", "size"];\n\n\nvar ImageOutline = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, image_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M31.3032 17.8662C34.0646 17.8662 36.3032 15.6276 36.3032 12.8662C36.3032 10.1048 34.0646 7.86618 31.3032 7.86618C28.5418 7.86618 26.3032 10.1048 26.3032 12.8662C26.3032 15.6276 28.5418 17.8662 31.3032 17.8662ZM31.3032 15.3662C32.6839 15.3662 33.8032 14.2469 33.8032 12.8662C33.8032 11.4855 32.6839 10.3662 31.3032 10.3662C29.9225 10.3662 28.8032 11.4855 28.8032 12.8662C28.8032 14.2469 29.9225 15.3662 31.3032 15.3662Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M15.9372 15.1063C16.3967 15.0794 16.8338 15.3071 17.075 15.6991L25.0831 28.7141L29.8357 24.4289C30.0935 24.1966 30.4362 24.0818 30.7819 24.1121C31.1276 24.1424 31.4452 24.3151 31.6586 24.5887L40.2822 35.6497C40.5759 36.0264 40.6292 36.5376 40.4196 36.9668C40.21 37.396 39.7741 37.6683 39.2964 37.6683H6.70331C6.2766 37.6683 5.87937 37.4506 5.64974 37.091C5.42011 36.7313 5.38981 36.2794 5.56937 35.8923L14.8765 15.8282C15.0702 15.4106 15.4777 15.1333 15.9372 15.1063ZM16.1652 18.991L8.66108 35.1683H36.7368L30.5126 27.1848L25.6422 31.5761C25.3666 31.8246 24.9947 31.9378 24.6274 31.885C24.26 31.8322 23.9351 31.6189 23.7406 31.3027L16.1652 18.991Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M0.5 3C0.5 1.61929 1.61929 0.5 3 0.5H43C44.3807 0.5 45.5 1.61929 45.5 3V43C45.5 44.3807 44.3807 45.5 43 45.5H3C1.61929 45.5 0.5 44.3807 0.5 43V3ZM3 3H43V43H3V3Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const image_outline = (ImageOutline);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Crop/Crop.constants.js\nvar DEFAULT_CROP_PRESETS=[{titleKey:"original",ratio:ORIGINAL_CROP,icon:image_outline},{titleKey:"custom",ratio:CUSTOM_CROP,icon:custom},{titleKey:"landscape",descriptionKey:"16:9",ratio:utils_toPrecisedFloat(16/9),icon:landscape},{titleKey:"portrait",descriptionKey:"9:16",ratio:utils_toPrecisedFloat(9/16),icon:portrait},{titleKey:"ellipse",ratio:ELLIPSE_CROP,icon:ellipse}];\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/arrow-tick.js\n\n\nvar arrow_tick_excluded = ["color", "size"];\n\n\nvar ArrowTick = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 8 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, arrow_tick_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M37.2754 25L12.2754 -1.03614e-06L12.2754 50L37.2754 25Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const arrow_tick = (ArrowTick);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/menu-item/types/size.js\nvar size_Size = {\n  Sm: \'sm\',\n  Md: \'md\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/menu-item/menu-item.mixin.js\n\n\nvar _sizeMenuItemMixin;\n\n // import type { With } from \'../../utils/types\';\n\n// import { Color as PaletteColor } from \'../../utils/types/palette\';\n\n\nvar sizeMenuItemMixin = (_sizeMenuItemMixin = {}, (0,defineProperty/* default */.Z)(_sizeMenuItemMixin, size_Size.Sm, function (_ref) {\n  var font = _ref.theme.typography.font;\n  return Ce(["padding:4px 8px;min-height:22px;", ""], font[FontVariant.LabelSmall]);\n}), (0,defineProperty/* default */.Z)(_sizeMenuItemMixin, size_Size.Md, function (_ref2) {\n  var font = _ref2.theme.typography.font;\n  return Ce(["padding:8px 12px;min-height:32px;", ""], font[FontVariant.LabelNormal]);\n}), _sizeMenuItemMixin);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/menu-item/menu-item.styles.js\n\n\n // import { BorderRadiusSize as BRSize } from \'../../utils/types/shape\';\n\n\n\nvar menu_item_styles_baseClassName = \'MenuItem\';\nvar menu_item_styles_Icon = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(menu_item_styles_baseClassName, \'Icon\')\n}).withConfig({\n  componentId: "sc-rrzye0-0"\n})(function (_ref) {\n  var palette = _ref.theme.palette;\n  return Ce(["display:flex;flex-shrink:0;color:", ";&:first-child{margin-right:8px;}&:last-child{margin-left:8px;}"], palette[Color.IconsPrimary]);\n});\nvar Actions = /*#__PURE__*/styled_components_browser_esm(menu_item_styles_Icon).attrs({\n  className: generateClassNames(menu_item_styles_baseClassName, \'Actions\')\n}).withConfig({\n  componentId: "sc-rrzye0-1"\n})(function () {\n  return Ce([""]);\n});\nvar menu_item_styles_Label = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(menu_item_styles_baseClassName, \'Label\')\n}).withConfig({\n  componentId: "sc-rrzye0-2"\n})(["flex-grow:1;"]);\nvar MenuItemWrapper = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(menu_item_styles_baseClassName, \'wrapper\')\n}).withConfig({\n  componentId: "sc-rrzye0-3"\n})(function (_ref2) {\n  var disabled = _ref2.disabled,\n      theme = _ref2.theme;\n  return Ce(["", ""], disabled && Ce(["width:100%;height:1px;background:", ";box-sizing:border-box;"], theme.palette[Color.BordersSecondary]));\n});\nvar MenuItem = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(menu_item_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-rrzye0-4"\n})(function (_ref3) {\n  var _ref3$size = _ref3.size,\n      size = _ref3$size === void 0 ? size_Size.Md : _ref3$size,\n      active = _ref3.active,\n      theme = _ref3.theme,\n      _ref3$disableHover = _ref3.disableHover,\n      disableHover = _ref3$disableHover === void 0 ? false : _ref3$disableHover;\n  return Ce(["display:flex;flex-direction:row;align-items:center;width:100%;background:", ";cursor:pointer;box-sizing:border-box;", " &:focus-within,&:focus,&:hover{", ";}"], theme.palette[active ? Color.BackgroundPrimaryHover : Color.BackgroundSecondary], sizeMenuItemMixin[size], !disableHover && "background-color: ".concat(theme.palette[Color.BackgroundPrimaryHover]));\n});\nvar MenuPrefix = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(menu_item_styles_baseClassName, \'prefix\')\n}).withConfig({\n  componentId: "sc-rrzye0-5"\n})(function () {\n  return Ce(["display:flex;margin-right:8px;"]);\n});\nvar MenuContent = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(menu_item_styles_baseClassName, \'content\')\n}).withConfig({\n  componentId: "sc-rrzye0-6"\n})(function () {\n  return Ce(["flex-grow:1;line-height:16px;"]);\n});\nvar MenuSuffix = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(menu_item_styles_baseClassName, \'suffix\')\n}).withConfig({\n  componentId: "sc-rrzye0-7"\n})(function () {\n  return Ce(["display:flex;margin-left:8px;"]);\n});\nvar menu_item_styles_Styled = applyDisplayNames({\n  MenuItemWrapper: MenuItemWrapper,\n  MenuItem: MenuItem,\n  MenuPrefix: MenuPrefix,\n  MenuContent: MenuContent,\n  MenuSuffix: MenuSuffix,\n  Label: menu_item_styles_Label,\n  Icon: menu_item_styles_Icon,\n  Actions: Actions\n});\n/* harmony default export */ const menu_item_styles = (menu_item_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/menu-item/menu-item.component.js\n\n\n\n\nvar menu_item_component_excluded = ["list", "depth", "children", "disableHover"];\n\nfunction menu_item_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction menu_item_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { menu_item_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { menu_item_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable sonarjs/cognitive-complexity */\n\n\n\n\n\n\n\nvar menu_item_component_MenuItem = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var list = _ref.list,\n      _ref$depth = _ref.depth,\n      depth = _ref$depth === void 0 ? 0 : _ref$depth,\n      children = _ref.children,\n      disableHover = _ref.disableHover,\n      props = (0,objectWithoutProperties/* default */.Z)(_ref, menu_item_component_excluded);\n\n  var _React$useState = react.useState(null),\n      _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = react.useState([]),\n      _React$useState4 = (0,slicedToArray/* default */.Z)(_React$useState3, 2),\n      selectedIds = _React$useState4[0],\n      setSelectedIds = _React$useState4[1];\n\n  var handleOpenMenu = function handleOpenMenu(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleSelectedId = function handleSelectedId(ev, selected, depthLevel) {\n    var updatedArray = selectedIds.slice(0);\n    updatedArray[depthLevel] = selected;\n    setSelectedIds(updatedArray);\n    handleOpenMenu(ev);\n  };\n\n  var renderItems = function renderItems(options) {\n    var depthLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return options.map(function (option) {\n      var hasOptions = option.subList && option.subList.length > 0;\n      var subMenu;\n\n      if (selectedIds[depthLevel] === option.key && hasOptions) {\n        var newDepthLevel = depthLevel + 1;\n        subMenu = /*#__PURE__*/react.createElement(menu_component, (0,esm_extends/* default */.Z)({\n          key: option.key,\n          position: "right",\n          open: Boolean(anchorEl),\n          anchorEl: anchorEl,\n          enableOverlay: false\n        }, option.subMenuProps), /*#__PURE__*/react.createElement(menu_item_component_MenuItem, (0,esm_extends/* default */.Z)({\n          list: option.subList,\n          depth: newDepthLevel\n        }, props)));\n      }\n\n      if (option.disabled) {\n        return /*#__PURE__*/react.createElement(menu_item_styles.MenuItemWrapper, {\n          disabled: true,\n          key: option.key\n        });\n      }\n\n      return /*#__PURE__*/react.createElement(menu_item_styles.MenuItemWrapper, {\n        disabled: false,\n        key: option.key\n      }, /*#__PURE__*/react.createElement(menu_item_styles.MenuItem, (0,esm_extends/* default */.Z)({}, props, {\n        className: option.className,\n        ref: ref,\n        active: Boolean(option.active),\n        onClick: option.onClick ? function (event) {\n          return option.onClick(menu_item_component_objectSpread({\n            event: event\n          }, props));\n        } : undefined,\n        onMouseEnter: function onMouseEnter(ev) {\n          return handleSelectedId(ev, option.key, depthLevel);\n        },\n        disableHover: disableHover || option.disableHover\n      }), option.prefix && /*#__PURE__*/react.createElement(menu_item_styles.MenuPrefix, null, typeof option.prefix === \'function\' ? option.prefix(props) : option.prefix), option.content && /*#__PURE__*/react.createElement(menu_item_styles.MenuContent, null, typeof option.content === \'function\' ? option.content(props) : option.content), (option.suffix || option.subList) && /*#__PURE__*/react.createElement(menu_item_styles.MenuSuffix, null, typeof option.suffix === \'function\' ? option.suffix(props) : option.suffix, option.subList && /*#__PURE__*/react.createElement(arrow_tick, {\n        size: 8,\n        color: "#768184"\n      }))), subMenu);\n    });\n  };\n\n  if (!list) {\n    return /*#__PURE__*/react.createElement(menu_item_styles.MenuItemWrapper, {\n      disabled: false\n    }, /*#__PURE__*/react.createElement(menu_item_styles.MenuItem, (0,esm_extends/* default */.Z)({}, props, {\n      ref: ref,\n      disableHover: disableHover\n    }), children));\n  }\n\n  return /*#__PURE__*/react.createElement(react.Fragment, null, renderItems(list, depth));\n});\nmenu_item_component_MenuItem.displayName = \'MenuItem\';\nvar menu_item_component_defaultProps = {\n  size: size_Size.Md,\n  active: false\n};\nmenu_item_component_MenuItem.defaultProps = menu_item_component_defaultProps;\nmenu_item_component_MenuItem.propTypes = {\n  size: prop_types_default().oneOf(objectValues(size_Size)),\n  children: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]),\n  active: (prop_types_default()).bool,\n  value: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number, prop_types_default().oneOf([null])]),\n  depth: (prop_types_default()).number,\n  disableHover: (prop_types_default()).bool\n};\n/* harmony default export */ const menu_item_component = (menu_item_component_MenuItem); // list: PT.arrayOf(\n//   PT.shape({\n//     key: PT.string.isRequired,\n//     content: PT.oneOfType([PT.string, PT.node]).isRequired,\n//     prefix: PT.oneOfType([PT.string, PT.node]),\n//     subList: PT.arrayOf(PT.object),\n//     suffix: PT.oneOfType([PT.string, PT.node]),\n//     onClick: PT.func,\n//     disabled: PT.bool,\n//   })\n// ),\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/icon.prop-types.js\n\nvar iconPropTypes = {\n  size: (prop_types_default()).number,\n  width: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  height: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  color: (prop_types_default()).string,\n  color2: (prop_types_default()).string,\n  stroke: (prop_types_default()).string,\n  stroke2: (prop_types_default()).string,\n  viewBox: (prop_types_default()).string\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/types/position/position.js\nvar position_Position = {\n  Left: \'left\',\n  Right: \'right\',\n  Top: \'top\',\n  Bottom: \'bottom\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/arrow-tick/arrow-tick.mixin.js\n\n\nvar _typeArrowTickMixin;\n\n // import type { WithTheme } from \'../../theme/entity\';\n// import { Color as PaletteColor } from \'../../utils/types/palette\';\n\n\nvar typeArrowTickMixin = (_typeArrowTickMixin = {}, (0,defineProperty/* default */.Z)(_typeArrowTickMixin, position_Position.Right, Ce(["svg{transform:rotate(0);transition:transform 150ms;}"])), (0,defineProperty/* default */.Z)(_typeArrowTickMixin, position_Position.Left, Ce(["svg{transform:rotate(180deg);transition:transform 150ms;}"])), (0,defineProperty/* default */.Z)(_typeArrowTickMixin, position_Position.Top, Ce(["svg{transform:rotate(-90deg);transition:transform 150ms;}"])), (0,defineProperty/* default */.Z)(_typeArrowTickMixin, position_Position.Bottom, Ce(["svg{transform:rotate(90deg);transition:transform 150ms;}"])), _typeArrowTickMixin);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/arrow-tick/arrow-tick.styles.js\n\n\n\n\nvar arrow_tick_styles_baseClassName = \'ArrowTick\';\nvar arrow_tick_styles_ArrowTick = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(arrow_tick_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-tlypde-0"\n})(function (_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? position_Position.Right : _ref$type;\n  return Ce(["display:inline-flex;", ""], typeArrowTickMixin[type]);\n});\nvar arrow_tick_styles_Styled = applyDisplayNames({\n  ArrowTick: arrow_tick_styles_ArrowTick\n});\n/* harmony default export */ const arrow_tick_styles = (arrow_tick_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/arrow-tick/arrow-tick.component.js\n\n\nvar arrow_tick_component_excluded = ["IconProps"];\n\n\n\n\n\n\n\nvar arrow_tick_component_ArrowTick = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var IconPropsData = _ref.IconProps,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, arrow_tick_component_excluded);\n\n  return /*#__PURE__*/react.createElement(arrow_tick_styles.ArrowTick, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), /*#__PURE__*/react.createElement(arrow_tick, IconPropsData));\n});\narrow_tick_component_ArrowTick.defaultProps = {\n  type: position_Position.Right\n};\narrow_tick_component_ArrowTick.propTypes = {\n  type: prop_types_default().oneOf(objectValues(position_Position)),\n  IconProps: prop_types_default().exact(iconPropTypes)\n};\n/* harmony default export */ const arrow_tick_component = (arrow_tick_component_ArrowTick);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/accordion-header/accordion-header.styles.js\n\n\n\n\nvar accordion_header_styles_baseClassName = \'AccordionHeader\';\nvar accordion_header_styles_Icon = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(accordion_header_styles_baseClassName, \'Icon\')\n}).withConfig({\n  componentId: "sc-1dtjsgt-0"\n})(function () {\n  return Ce(["display:inline-flex;padding-right:8px;"]);\n});\nvar accordion_header_styles_Label = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(accordion_header_styles_baseClassName, \'Label\')\n}).withConfig({\n  componentId: "sc-1dtjsgt-1"\n})([""]);\nvar AccordionHeader = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(accordion_header_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-1dtjsgt-2"\n})(function (_ref) {\n  var theme = _ref.theme;\n  return Ce(["", " display:flex;align-items:center;cursor:pointer;color:", ";"], Ce(theme.typography.font[FontVariant.ButtonXs]), theme.palette[Color.LinkPrimary]);\n});\nvar accordion_header_styles_Styled = applyDisplayNames({\n  AccordionHeader: AccordionHeader,\n  Icon: accordion_header_styles_Icon,\n  Label: accordion_header_styles_Label\n});\n/* harmony default export */ const accordion_header_styles = (accordion_header_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/accordion-header/accordion-header.component.js\n\n\n\nvar accordion_header_component_excluded = ["expanded", "label", "onChange", "onClick", "onContextMenu", "iconProps"];\n\nfunction accordion_header_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction accordion_header_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { accordion_header_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { accordion_header_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\n\nvar accordion_header_component_AccordionHeader = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var expanded = _ref.expanded,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      _onClick = _ref.onClick,\n      onContextMenu = _ref.onContextMenu,\n      iconPropsData = _ref.iconProps,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, accordion_header_component_excluded);\n\n  return /*#__PURE__*/react.createElement(accordion_header_styles.AccordionHeader, (0,esm_extends/* default */.Z)({\n    ref: ref,\n    onClick: function onClick(event) {\n      if (typeof onChange === \'function\') {\n        onChange(!expanded);\n      }\n\n      if (typeof _onClick === \'function\') {\n        _onClick(event);\n      }\n    }\n  }, rest), /*#__PURE__*/react.createElement(accordion_header_styles.Icon, {\n    onContextMenu: onContextMenu\n  }, /*#__PURE__*/react.createElement(arrow_tick_component, {\n    type: expanded ? position_Position.Bottom : position_Position.Right,\n    IconProps: accordion_header_component_objectSpread({\n      size: 8\n    }, iconPropsData)\n  })), /*#__PURE__*/react.createElement(accordion_header_styles.Label, {\n    onContextMenu: onContextMenu\n  }, label));\n});\naccordion_header_component_AccordionHeader.defaultProps = {\n  expanded: false\n};\naccordion_header_component_AccordionHeader.propTypes = {\n  label: (prop_types_default()).node.isRequired,\n  expanded: (prop_types_default()).bool,\n  onChange: (prop_types_default()).func,\n  iconProps: prop_types_default().exact(iconPropTypes)\n};\n/* harmony default export */ const accordion_header_component = (accordion_header_component_AccordionHeader);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/accordion-details/accordion-details.styles.js\n\n\nvar accordion_details_styles_baseClassName = \'AccordionDetails\';\nvar AccordionDetails = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(accordion_details_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-1wr6wpr-0"\n})(["margin:16px 0;"]);\nvar accordion_details_styles_Styled = applyDisplayNames({\n  AccordionDetails: AccordionDetails\n});\n/* harmony default export */ const accordion_details_styles = (accordion_details_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/accordion-details/accordion-details.component.js\n\n\nvar accordion_details_component_excluded = ["expanded", "children"];\n\n\n\n\nvar accordion_details_component_AccordionDetails = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var expanded = _ref.expanded,\n      children = _ref.children,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, accordion_details_component_excluded);\n\n  return /*#__PURE__*/react.createElement(react.Fragment, null, expanded && /*#__PURE__*/react.createElement(accordion_details_styles.AccordionDetails, (0,esm_extends/* default */.Z)({\n    ref: ref\n  }, rest), children));\n});\naccordion_details_component_AccordionDetails.defaultProps = {\n  expanded: false\n};\naccordion_details_component_AccordionDetails.propTypes = {\n  expanded: (prop_types_default()).bool\n};\n/* harmony default export */ const accordion_details_component = (accordion_details_component_AccordionDetails);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/accordion/accordion.styles.js\n\n\nvar accordion_styles_baseClassName = \'Accordion\';\nvar Accordion = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(accordion_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-1g4tz7s-0"\n})([""]);\nvar accordion_styles_Styled = applyDisplayNames({\n  Accordion: Accordion\n});\n/* harmony default export */ const accordion_styles = (accordion_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/accordion/accordion.component.js\n\n\n\nvar accordion_component_excluded = ["label", "expanded", "children", "detailStyle", "headerStyle", "iconProps", "onClick", "onChange", "onContextMenu"];\n\nfunction accordion_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction accordion_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { accordion_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { accordion_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\n\nvar accordion_component_Accordion = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var label = _ref.label,\n      expanded = _ref.expanded,\n      children = _ref.children,\n      detailStyle = _ref.detailStyle,\n      headerStyle = _ref.headerStyle,\n      iconPropsData = _ref.iconProps,\n      _onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      onContextMenu = _ref.onContextMenu,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, accordion_component_excluded);\n\n  return /*#__PURE__*/react.createElement(accordion_styles.Accordion, (0,esm_extends/* default */.Z)({\n    ref: ref\n  }, rest), /*#__PURE__*/react.createElement(accordion_header_component, {\n    label: label,\n    expanded: expanded,\n    style: accordion_component_objectSpread({}, headerStyle),\n    onClick: function onClick(event) {\n      if (typeof onChange === \'function\') {\n        onChange(!expanded, event);\n      }\n\n      if (typeof _onClick === \'function\') {\n        _onClick(event);\n      }\n    },\n    onContextMenu: onContextMenu,\n    iconProps: iconPropsData\n  }), /*#__PURE__*/react.createElement(accordion_details_component, {\n    expanded: expanded,\n    style: accordion_component_objectSpread({}, detailStyle)\n  }, children));\n});\naccordion_component_Accordion.defaultProps = {\n  expanded: false\n};\naccordion_component_Accordion.propTypes = {\n  label: (prop_types_default()).node.isRequired,\n  expanded: (prop_types_default()).bool,\n  // eslint-disable-next-line react/forbid-prop-types\n  detailStyle: (prop_types_default()).object,\n  // eslint-disable-next-line react/forbid-prop-types\n  headerStyle: (prop_types_default()).object,\n  onChange: (prop_types_default()).func,\n  onContextMenu: (prop_types_default()).func,\n  iconProps: prop_types_default().exact(iconPropTypes)\n};\n/* harmony default export */ const accordion_component = (accordion_component_Accordion);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Crop/CropPresetItem.js\nvar PREFIX_ICONS_DIMENS={height:16,width:16},CropPresetItem=function(a){var b=a.titleKey,c=a.description,d=a.ratio,f=a.onClick,g=a.Icon,h=a.isActive,i=a.width,j=a.height,k=a.t,l=a.disableManualResize;return react.createElement(menu_item_component,{active:h,onClick:function handleOnClick(a){return f(a,d,{ratioTitleKey:b,width:i,height:j,disableManualResize:l})},size:"sm"},g&&react.createElement(StyledMenuItemIcon,null,"string"==typeof g?react.createElement("span",{dangerouslySetInnerHTML:{__html:g}}):react.createElement(g,PREFIX_ICONS_DIMENS)),k(b),c&&react.createElement(StyledRatioDescription,null,c))};CropPresetItem.defaultProps={Icon:void 0,width:void 0,height:void 0,disableManualResize:!1};/* harmony default export */ const Crop_CropPresetItem = (CropPresetItem);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Crop/CropPresetGroup.js\nfunction CropPresetGroup_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function CropPresetGroup_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?CropPresetGroup_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):CropPresetGroup_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var CropPresetGroup=function(a){var b=a.groupTitleKey,c=a.items,d=a.onItemSelect,e=a.t,f=a.isExpanded,g=a.setExpandedGroup,h=hooks_useStore(),i=h.adjustments.crop,j=i.ratio,k=i.ratioGroupKey,l=i.ratioTitleKey,m=function(a,c,e){d(a,c,CropPresetGroup_objectSpread(CropPresetGroup_objectSpread({},e),{},{ratioGroupKey:b}))};return react.createElement(accordion_component,{label:e(b),onChange:function toggleExpand(){g(f?null:b)},expanded:f},c.map(function(a){var c=a.titleKey,d=a.ratio,f=a.width,g=a.height,h=a.descriptionKey,i=a.icon,n=a.disableManualResize,o=null!==d&&void 0!==d?d:utils_toPrecisedFloat(f/g);return react.createElement(Crop_CropPresetItem,{key:c,titleKey:c,t:e,description:e(h),size:"sm",onClick:m,width:f,height:g,ratio:o,Icon:i,disableManualResize:n,isActive:j===o&&l===c&&k===b})}))};/* harmony default export */ const Crop_CropPresetGroup = (CropPresetGroup);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Crop/CropPresetGroupsFolder.js\nfunction CropPresetGroupsFolder_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function CropPresetGroupsFolder_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?CropPresetGroupsFolder_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):CropPresetGroupsFolder_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var CropPresetGroupsFolder=function(a){var b=a.titleKey,c=a.Icon,d=a.groups,f=a.onItemSelect,g=a.prefixIconDimensions,h=a.t,e=hooks_useStore(),i=e.adjustments.crop,j=i.ratioFolderKey,k=i.ratioGroupKey,l=(0,react.useState)(""),m=(0,slicedToArray/* default */.Z)(l,2),n=m[0],o=m[1],p=function(a,c,d){f(a,c,CropPresetGroupsFolder_objectSpread(CropPresetGroupsFolder_objectSpread({},d),{},{ratioFolderKey:b}))};return react.createElement(menu_item_component,{size:"sm",list:[{content:h(b),key:b,active:b===j,prefix:c&&("string"==typeof c?react.createElement("span",{dangerouslySetInnerHTML:{__html:c}}):react.createElement(c,g)),subList:d.map(function(a){var b=a.titleKey,c=a.items;return{content:react.createElement(Crop_CropPresetGroup,{groupTitleKey:b,setExpandedGroup:o,isExpanded:""===n?k===b:n===b,t:h,items:c,onItemSelect:p}),key:b,disableHover:!0}})}]})};CropPresetGroupsFolder.defaultProps={Icon:void 0};/* harmony default export */ const Crop_CropPresetGroupsFolder = (CropPresetGroupsFolder);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Crop/CropPresetsOption.js\nvar CropPresetsOption_PREFIX_ICONS_DIMENS={height:16,width:16},CropPresetsOption=function(a){var b=a.anchorEl,c=a.onClose,d=hooks_useStore(),f=d.dispatch,g=d.t,e=d.adjustments;e=void 0===e?{}:e;var h=e.crop;h=void 0===h?{}:h;var i=h.ratio,j=h.ratioTitleKey,k=h.ratioFolderKey,l=d.shownImageDimensions,m=d.config,n=m[TOOLS_IDS.CROP],o=(0,react.useMemo)(function(){var a=n.presetsItems,b=void 0===a?[]:a,c=n.presetsFolders,d=void 0===c?[]:c;return[].concat((0,toConsumableArray/* default */.Z)(d),(0,toConsumableArray/* default */.Z)(DEFAULT_CROP_PRESETS),(0,toConsumableArray/* default */.Z)(b))},[n]),p=function(a,b,d){a.stopPropagation();var e={ratio:b,ratioTitleKey:d.ratioTitleKey,ratioGroupKey:d.ratioGroupKey,ratioFolderKey:d.ratioFolderKey};f({type:SET_CROP,payload:e}),n.autoResize&&(f({type:SET_RESIZE,payload:{width:d.width,height:d.height,manualChangeDisabled:d.disableManualResize}}),f({type:ZOOM_CANVAS,payload:{factor:d.width>l.width||d.height>l.height?utils_getZoomFitFactor(l,d):DEFAULT_ZOOM_FACTOR}})),c()};return react.createElement(react.Fragment,null,react.createElement(StyledToolsBarItemButtonLabel,{className:"FIE_crop-tool-label FIE_selected-crop-preset-label"},g(j||"cropTool")),react.createElement(StyledOpenMenuButton,{className:"FIE_crop-presets-opener-button",color:"link",size:"lg"},b?react.createElement(react.Fragment,null,"\\u25B4"):react.createElement(react.Fragment,null,"\\u25BE")),react.createElement(menu_component,{className:"FIE_crop-presets-menu",anchorEl:b,enableOverlay:!0,onClose:c,open:!!b,position:"top"},o.map(function renderPreset(a){var b=a.titleKey,c=a.descriptionKey,d=a.ratio,e=a.width,f=a.height,h=a.groups,j=a.icon,l=a.disableManualResize;return h?react.createElement(Crop_CropPresetGroupsFolder,{key:b,titleKey:b,groups:h,Icon:j,onItemSelect:p,prefixIconDimensions:CropPresetsOption_PREFIX_ICONS_DIMENS,t:g,disableManualResize:l}):react.createElement(Crop_CropPresetItem,{key:d,ratio:null!==d&&void 0!==d?d:utils_toPrecisedFloat(e/f),titleKey:b,t:g,description:g(c),Icon:j,isActive:i===(null!==d&&void 0!==d?d:utils_toPrecisedFloat(e/f))&&!k,width:e,height:f,onClick:p,disableManualResize:l})})))};CropPresetsOption.defaultProps={anchorEl:null};/* harmony default export */ const Crop_CropPresetsOption = (CropPresetsOption);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Crop/Crop.js\nvar Crop_Crop=function(a){var b=a.selectTool,c=a.isSelected,d=hooks_useStore(),e=d.config,f=d.t,g=(0,react.useState)(),h=(0,slicedToArray/* default */.Z)(g,2),i=h[0],j=h[1];return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_crop-tool",id:TOOLS_IDS.CROP,Icon:Crop,onClick:function selectToolAndShowPresets(a,c){b(a),j(c.currentTarget)},isSelected:c},e[TOOLS_IDS.CROP].noPresets?react.createElement(StyledToolsBarItemButtonLabel,{className:"FIE_crop-tool-label"},f("cropTool")):react.createElement(Crop_CropPresetsOption,{anchorEl:i,onClose:function closeCropPresets(){j(null)}}))};Crop_Crop.defaultProps={isSelected:!1};/* harmony default export */ const tools_Crop_Crop = (Crop_Crop);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Crop/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/flip-x.js\n\n\nvar flip_x_excluded = ["color", "size"];\n\n\nvar FlipX = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, flip_x_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M24.0625 1.93758C24.0625 1.22909 23.5858 0.609274 22.901 0.427427C22.2163 0.245581 21.4949 0.547225 21.1434 1.16237L1.14337 39.2874C0.867028 39.771 0.869012 40.3651 1.14858 40.8468C1.42814 41.3286 1.94302 41.6251 2.5 41.6251H22.5C23.3629 41.6251 24.0625 40.9255 24.0625 40.0626V1.93758ZM20.9375 38.5001H5.19247L20.9375 7.82128V38.5001Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M28.8566 1.16237C28.5051 0.547225 27.7837 0.245581 27.099 0.427428C26.4142 0.609274 25.9375 1.22909 25.9375 1.93758V4.12508H26.9504L27.3934 4.9003L28.75 4.12508H29.0625V3.94651L30.1066 3.34986L28.8566 1.16237Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M35.1066 12.0999L32.6066 7.72486L29.8934 9.2753L32.3934 13.6503L35.1066 12.0999Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M25.9375 8.50008V12.8751H29.0625V8.50008H25.9375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M40.1066 23.9749L37.6066 19.5999L34.8934 21.1503L37.3934 25.5253L40.1066 23.9749Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M25.9375 20.3751V24.7501H29.0625V20.3751H25.9375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.1066 32.7249L42.6066 28.3499L39.8934 29.9003L42.3934 34.2753L45.1066 32.7249Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M25.9375 29.1251V33.5001H29.0625V29.1251H25.9375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M48.8566 39.2874L47.6066 37.0999L45.1562 38.5001H45V38.5894L44.8934 38.6503L45 38.8369V41.6251H47.5C48.057 41.6251 48.5719 41.3286 48.8514 40.8468C49.131 40.3651 49.133 39.771 48.8566 39.2874Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M25.9375 37.8751V40.0626C25.9375 40.9255 26.6371 41.6251 27.5 41.6251H30V38.5001H29.0625V37.8751H25.9375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M35 41.6251H40V38.5001H35V41.6251Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const flip_x = ((/* unused pure expression or super */ null && (FlipX)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Flip/FlipX.js\nvar xFlipReverseSideStyle={transform:"scaleX(-1)"},FlipX_FlipX=function(a){var b=a.selectTool,c=a.isSelected,d=a.t,e=hooks_useStore(),f=e.dispatch,g=e.adjustments.isFlippedX,h=(0,react.useMemo)(function(){return{reverseLabelOfCurrXFlipDir:g?d("unFlipX"):d("flipX"),reverseIconOfCurrXFlipDir:function(){return react.createElement(FlipX,{style:g?xFlipReverseSideStyle:void 0})}}},[g]),i=h.reverseLabelOfCurrXFlipDir,j=h.reverseIconOfCurrXFlipDir,k=(0,react.useCallback)(function(){f({type:TOGGLE_FLIP,payload:{direction:FLIP_DIRECTIONS.X}})},[]),l=(0,react.useCallback)(function(a){b(a),k()},[]);return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_flip-x-tool-button",id:TOOLS_IDS.FLIP_X,label:i,Icon:j,onClick:l,isSelected:c})};FlipX_FlipX.defaultProps={isSelected:!1};/* harmony default export */ const Flip_FlipX = (FlipX_FlipX);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/flip-y.js\n\n\nvar flip_y_excluded = ["color", "size"];\n\n\nvar FlipY = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, flip_y_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M37.5001 24.0625C38.2086 24.0625 38.8284 23.5858 39.0102 22.901C39.1921 22.2162 38.8904 21.4948 38.2753 21.1433L3.27531 1.14333C2.79171 0.866989 2.19757 0.868973 1.71583 1.14854C1.23409 1.4281 0.937592 1.94298 0.937592 2.49996V22.5C0.937592 23.3629 1.63715 24.0625 2.50009 24.0625L37.5001 24.0625ZM4.06259 20.9375L4.06259 5.19243L31.6164 20.9375L4.06259 20.9375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M38.2753 28.8566C38.8904 28.5051 39.1921 27.7837 39.0102 27.0989C38.8284 26.4142 38.2086 25.9375 37.5001 25.9375H35.3126V26.9504L34.5374 27.3933L35.3126 28.75V29.0625H35.4912L36.0878 30.1066L38.2753 28.8566Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M27.3378 35.1066L31.7128 32.6066L30.1624 29.8933L25.7874 32.3933L27.3378 35.1066Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M30.9376 25.9375H26.5626L26.5626 29.0625H30.9376L30.9376 25.9375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M18.5878 40.1066L22.9628 37.6066L21.4124 34.8933L17.0374 37.3933L18.5878 40.1066Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M22.1876 25.9375H17.8126V29.0625H22.1876V25.9375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M9.83781 45.1066L14.2128 42.6066L12.6624 39.8933L8.28738 42.3933L9.83781 45.1066Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M13.4376 25.9375H9.0626V29.0625H13.4376V25.9375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M3.27531 48.8566L5.46281 47.6066L4.06259 45.1562V45H3.97331L3.91238 44.8933L3.72578 45H0.937592V47.5C0.937592 48.0569 1.23409 48.5718 1.71583 48.8514C2.19758 49.1309 2.79171 49.1329 3.27531 48.8566Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M4.6876 25.9375L2.50009 25.9375C1.63715 25.9375 0.937592 26.637 0.937592 27.5V30H4.06259V29.0625H4.6876V25.9375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M0.937592 35V40L4.06259 40V35H0.937592Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const flip_y = ((/* unused pure expression or super */ null && (FlipY)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Flip/FlipY.js\nvar FlipY_xFlipReverseSideStyle={transform:"scaleY(-1)"},FlipY_FlipY=function(a){var b=a.selectTool,c=a.isSelected,d=a.t,e=hooks_useStore(),f=e.dispatch,g=e.adjustments.isFlippedY,h=(0,react.useMemo)(function(){return{reverseLabelOfCurrXFlipDir:g?d("unFlipY"):d("flipY"),reverseIconOfCurrXFlipDir:function(){return react.createElement(FlipY,{style:g?FlipY_xFlipReverseSideStyle:void 0})}}},[g]),i=h.reverseLabelOfCurrXFlipDir,j=h.reverseIconOfCurrXFlipDir,k=(0,react.useCallback)(function(){f({type:TOGGLE_FLIP,payload:{direction:FLIP_DIRECTIONS.Y}})},[]),l=(0,react.useCallback)(function(a){b(a),k()},[]);return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_flip-y-tool-button",id:TOOLS_IDS.FLIP_Y,label:i,Icon:j,onClick:l,isSelected:c})};FlipY_FlipY.defaultProps={isSelected:!1};/* harmony default export */ const Flip_FlipY = (FlipY_FlipY);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Flip/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/rotation-left-outline.js\n\n\nvar rotation_left_outline_excluded = ["color", "size"];\n\n\nvar RotationLeftOutline = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, rotation_left_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M2.66029 14.6992L3.59754 14.4432L3.09234 3.93169C3.05919 3.24213 2.47333 2.71 1.78377 2.74314C1.09421 2.77628 0.562076 3.36215 0.595218 4.05171L1.16043 15.8118C1.19357 16.5014 1.77943 17.0335 2.46899 17.0004L14.2291 16.4351C14.9186 16.402 15.4508 15.8161 15.4176 15.1266C15.3845 14.437 14.7986 13.9049 14.1091 13.938L5.48449 14.3525C8.23226 7.41028 15.0052 2.5 22.925 2.5C33.2802 2.5 41.6748 10.8946 41.6748 21.2498C41.6748 22.403 41.5707 23.5319 41.3713 24.6276L43.7968 25.2605C44.0449 23.9617 44.1748 22.6209 44.1748 21.2498C44.1748 9.51386 34.6609 0 22.925 0C15.0467 0 8.16976 4.2873 4.50003 10.6561L2.66029 14.6992Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M9.88493 34.7076L8.27775 36.6304C8.82615 37.1534 9.40249 37.6474 10.0043 38.1098L11.5276 36.1275C10.9528 35.6859 10.4044 35.2116 9.88493 34.7076Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M12.3142 39.6562C13.9038 40.5759 15.6235 41.2956 17.439 41.7809L18.0846 39.3657C16.4846 38.938 14.9685 38.3036 13.5663 37.4923L12.3142 39.6562Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M20.1654 42.3204C21.0738 42.4389 22.0002 42.5001 22.9408 42.5001C23.8815 42.5001 24.8079 42.4389 25.7163 42.3204L25.3929 39.8414C24.5915 39.946 23.7731 40.0001 22.9408 40.0001C22.1086 40.0001 21.2902 39.946 20.4888 39.8414L20.1654 42.3204Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M28.4427 41.7809C30.2582 41.2956 31.9779 40.5759 33.5674 39.6562L32.3154 37.4923C30.9132 38.3036 29.3971 38.938 27.7971 39.3657L28.4427 41.7809Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M35.8774 38.1098C37.3495 36.9786 38.6692 35.6589 39.8004 34.1868L37.8181 32.6635C36.8193 33.9633 35.6539 35.1287 34.3541 36.1275L35.8774 38.1098Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M41.3468 31.8769C42.2665 30.2873 42.9862 28.5676 43.4715 26.7521L41.0563 26.1065C40.6286 27.7065 39.9942 29.2226 39.1829 30.6248L41.3468 31.8769Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const rotation_left_outline = ((/* unused pure expression or super */ null && (RotationLeftOutline)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Rotate/RotateButton.js\nvar RotateButton=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_rotate-tool-button",id:TOOLS_IDS.ROTATE,label:d("rotateTool"),Icon:RotationLeftOutline,onClick:b,isSelected:c})};RotateButton.defaultProps={isSelected:!1};/* harmony default export */ const Rotate_RotateButton = (RotateButton);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/rotation-slider/rotation-slider.styles.js\n\n\n\nvar rotation_slider_styles_baseClassName = \'RotationSlider\';\nvar RotationSliderList = /*#__PURE__*/styled_components_browser_esm.ul.attrs({\n  className: generateClassNames(rotation_slider_styles_baseClassName, \'list\')\n}).withConfig({\n  componentId: "sc-1xuruq0-0"\n})(["display:flex;align-items:center;position:relative;padding:0;width:100%;list-style:none;"]);\nvar RotationSliderBigDot = /*#__PURE__*/styled_components_browser_esm.li.attrs({\n  className: generateClassNames(rotation_slider_styles_baseClassName, \'big-dot\')\n}).withConfig({\n  componentId: "sc-1xuruq0-1"\n})(function (_ref) {\n  var palette = _ref.theme.palette;\n  return Ce(["width:8px;height:8px;border-radius:50%;background-color:", ";cursor:pointer;"], palette[Color.LinkPrimary]);\n});\nvar RotationSliderSmallDotWrapper = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(rotation_slider_styles_baseClassName, \'small-dot-wrapper\')\n}).withConfig({\n  componentId: "sc-1xuruq0-2"\n})(["padding:2px;"]);\nvar RotationSliderSmallDot = /*#__PURE__*/styled_components_browser_esm.li.attrs({\n  className: generateClassNames(rotation_slider_styles_baseClassName, \'small-dot\')\n}).withConfig({\n  componentId: "sc-1xuruq0-3"\n})(function (_ref2) {\n  var palette = _ref2.theme.palette;\n  return Ce(["width:2px;height:2px;border-radius:50%;background-color:", ";cursor:pointer;"], palette[Color.LinkPrimary]);\n});\nvar RotationSliderControl = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(rotation_slider_styles_baseClassName, \'control\')\n}).withConfig({\n  componentId: "sc-1xuruq0-4"\n})(function (_ref3) {\n  var palette = _ref3.theme.palette;\n  return Ce(["display:flex;justify-content:center;align-items:center;position:absolute;height:18px;width:2px;transform:translate(-50%,-50%);top:50%;background-color:", ";& > input{border:0px;clip:rect(0px,0px,0px,0px);height:100%;margin:-1px;overflow:hidden;padding:0px;position:absolute;white-space:nowrap;width:100%;direction:ltr;}&::before{position:absolute;content:\'\';border-radius:inherit;width:100%;height:100%;box-shadow:0px 3px 1px -2px rgb(0 0 0 / 20%),0px 2px 2px 0px rgb(0 0 0 / 14%),0px 1px 5px 0px rgb(0 0 0 / 12%);}&::after{position:absolute;content:\'\';border-radius:50%;width:42px;height:42px;top:50%;left:50%;transform:translate(-50%,-50%);}"], palette[Color.LinkActive]);\n});\nvar RotationSliderMark = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(rotation_slider_styles_baseClassName, \'mark\')\n}).withConfig({\n  componentId: "sc-1xuruq0-5"\n})(["padding:4px;"]);\nvar RotationSliderMarkText = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(rotation_slider_styles_baseClassName, \'mark-text\')\n}).withConfig({\n  componentId: "sc-1xuruq0-6"\n})(function (_ref4) {\n  var palette = _ref4.theme.palette;\n  return Ce(["position:absolute;top:20px;font-size:14px;transform:translateX(-10%);color:", ";"], palette[Color.TextPrimary]);\n});\nvar rotation_slider_styles_Styled = applyDisplayNames({\n  RotationSliderList: RotationSliderList,\n  RotationSliderBigDot: RotationSliderBigDot,\n  RotationSliderSmallDotWrapper: RotationSliderSmallDotWrapper,\n  RotationSliderSmallDot: RotationSliderSmallDot,\n  RotationSliderControl: RotationSliderControl,\n  RotationSliderMark: RotationSliderMark,\n  RotationSliderMarkText: RotationSliderMarkText\n});\n/* harmony default export */ const rotation_slider_styles = (rotation_slider_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/rotation-slider/rotation-slider.component.js\n\n\n\nvar rotation_slider_component_excluded = ["min", "max", "angle", "onChange", "onMouseDown", "onMouseUp", "step", "labelTooltipOptions", "annotation", "hideMarkText", "value", "railProps", "trackProps", "thumbProps", "labelTooltipProps", "markStyles", "markTextStyles"];\n\nfunction rotation_slider_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction rotation_slider_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { rotation_slider_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { rotation_slider_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable react/forbid-prop-types */\n\n\n\n\n\n\nvar RotationSlider = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      _ref$angle = _ref.angle,\n      angle = _ref$angle === void 0 ? 10 : _ref$angle,\n      onChange = _ref.onChange,\n      onMouseDown = _ref.onMouseDown,\n      onMouseUp = _ref.onMouseUp,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step,\n      _ref$labelTooltipOpti = _ref.labelTooltipOptions,\n      labelTooltipOptions = _ref$labelTooltipOpti === void 0 ? LabelTooltip.Off : _ref$labelTooltipOpti,\n      _ref$annotation = _ref.annotation,\n      annotation = _ref$annotation === void 0 ? \'°\' : _ref$annotation,\n      _ref$hideMarkText = _ref.hideMarkText,\n      hideMarkText = _ref$hideMarkText === void 0 ? false : _ref$hideMarkText,\n      value = _ref.value,\n      _ref$railProps = _ref.railProps,\n      railProps = _ref$railProps === void 0 ? {} : _ref$railProps,\n      _ref$trackProps = _ref.trackProps,\n      trackProps = _ref$trackProps === void 0 ? {} : _ref$trackProps,\n      _ref$thumbProps = _ref.thumbProps,\n      thumbProps = _ref$thumbProps === void 0 ? {} : _ref$thumbProps,\n      _ref$labelTooltipProp = _ref.labelTooltipProps,\n      labelTooltipProps = _ref$labelTooltipProp === void 0 ? {} : _ref$labelTooltipProp,\n      _ref$markStyles = _ref.markStyles,\n      markStyles = _ref$markStyles === void 0 ? {} : _ref$markStyles,\n      _ref$markTextStyles = _ref.markTextStyles,\n      markTextStyles = _ref$markTextStyles === void 0 ? {} : _ref$markTextStyles,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, rotation_slider_component_excluded);\n\n  var handleChange = function handleChange(event, newValue) {\n    if (onChange) {\n      onChange(event, newValue);\n    }\n  };\n\n  var renderBar = function renderBar() {\n    var barDom = [];\n    var barDiv;\n\n    for (var i = min; i <= max; i += step) {\n      barDiv = [];\n\n      if (i % angle === 0 || i === max) {\n        barDiv = /*#__PURE__*/react.createElement(rotation_slider_styles.RotationSliderMark, {\n          key: i,\n          style: rotation_slider_component_objectSpread({}, markStyles)\n        }, !hideMarkText && /*#__PURE__*/react.createElement(rotation_slider_styles.RotationSliderMarkText, {\n          style: rotation_slider_component_objectSpread({}, markTextStyles)\n        }, i === min + 1 ? max : i, /*#__PURE__*/react.createElement("sup", null, annotation)), /*#__PURE__*/react.createElement(rotation_slider_styles.RotationSliderBigDot, null));\n      } else if (i % 10 === 0) {\n        barDiv = /*#__PURE__*/react.createElement(rotation_slider_styles.RotationSliderSmallDotWrapper, {\n          key: i\n        }, /*#__PURE__*/react.createElement(rotation_slider_styles.RotationSliderSmallDot, null));\n      }\n\n      if (!Array.isArray(barDiv)) {\n        barDom.push(barDiv);\n      }\n    }\n\n    return barDom;\n  };\n\n  var getValue = function getValue() {\n    if (value || value === 0) {\n      if (value > max) {\n        return max;\n      }\n\n      if (value < min) {\n        return min;\n      }\n\n      return value;\n    }\n\n    return min;\n  };\n\n  return /*#__PURE__*/react.createElement(slider_component, (0,esm_extends/* default */.Z)({\n    min: min,\n    max: max,\n    step: step,\n    value: getValue(),\n    hideTrack: true,\n    hideAnnotation: true,\n    annotation: annotation,\n    onChange: handleChange,\n    labelTooltip: labelTooltipOptions,\n    ref: ref,\n    components: {\n      Rail: function Rail(props, style) {\n        return /*#__PURE__*/react.createElement(rotation_slider_styles.RotationSliderList, (0,esm_extends/* default */.Z)({}, props, {\n          styles: rotation_slider_component_objectSpread({}, style)\n        }), renderBar());\n      },\n      Thumb: rotation_slider_styles.RotationSliderControl\n    },\n    componentsProps: {\n      rail: rotation_slider_component_objectSpread(rotation_slider_component_objectSpread({}, railProps), {}, {\n        style: rotation_slider_component_objectSpread({}, railProps.style)\n      }),\n      track: rotation_slider_component_objectSpread(rotation_slider_component_objectSpread({}, trackProps), {}, {\n        style: rotation_slider_component_objectSpread({}, trackProps.style)\n      }),\n      thumb: rotation_slider_component_objectSpread(rotation_slider_component_objectSpread({}, thumbProps), {}, {\n        style: rotation_slider_component_objectSpread({\n          top: \'15%\'\n        }, thumbProps.style)\n      }),\n      labelTooltip: rotation_slider_component_objectSpread(rotation_slider_component_objectSpread({}, labelTooltipProps), {}, {\n        style: rotation_slider_component_objectSpread({}, labelTooltipProps.style)\n      })\n    }\n  }, rest, {\n    defaultValue: Number(rest.defaultValue),\n    style: rotation_slider_component_objectSpread({\n      width: \'auto\',\n      height: \'auto\'\n    }, rest.style)\n  }));\n});\nRotationSlider.defaultProps = {\n  annotation: \'°\',\n  min: 0,\n  max: 100,\n  step: 1,\n  labelTooltipOptions: LabelTooltip.Off\n};\nRotationSlider.propTypes = {\n  value: prop_types_default().oneOfType([(prop_types_default()).array, (prop_types_default()).number]),\n  min: (prop_types_default()).number,\n  max: (prop_types_default()).number,\n  angle: (prop_types_default()).number,\n  onChange: (prop_types_default()).func,\n  onMouseDown: (prop_types_default()).func,\n  onMouseUp: (prop_types_default()).func,\n  step: (prop_types_default()).number,\n  annotation: (prop_types_default()).string,\n  hideMarkText: (prop_types_default()).bool,\n  railProps: (prop_types_default()).object,\n  trackProps: (prop_types_default()).object,\n  thumbProps: (prop_types_default()).object,\n  labelTooltipProps: (prop_types_default()).object,\n  markStyles: (prop_types_default()).object,\n  markTextStyles: (prop_types_default()).object,\n  labelTooltipOptions: prop_types_default().oneOf(objectValues(LabelTooltip))\n};\n/* harmony default export */ const rotation_slider_component = (RotationSlider);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Rotate/RotateOptions.js\nvar RotateOptions=function(){var a=hooks_useStore(),b=a.dispatch,c=a.adjustments.rotation,d=void 0===c?0:c,e=a.resize,f=void 0===e?{}:e,g=hooks_useDebouncedCallback(function(a,c){var d=utils_restrictNumber(c,-180,180);if(b({type:CHANGE_ROTATION,payload:{rotation:d}}),f.width&&f.height){var e=utils_getSizeAfterRotation(f.width,f.height,d);b({type:SET_RESIZE,payload:{width:e.width,height:e.height}})}},20);return react.createElement(rotation_slider_component,{className:"FIE_rotate-slider",min:-180,max:180,value:d,angle:60,onChange:g,style:{marginBottom:20}})};/* harmony default export */ const Rotate_RotateOptions = (RotateOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Rotate/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/contrast.js\n\n\nvar contrast_excluded = ["color", "size"];\n\n\nvar contrast_Contrast = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, contrast_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M20.4376 40.6858V38.5625V4.18746V3.31418C10.8133 4.10816 3.25006 12.1708 3.25006 22C3.25006 31.8292 10.8133 39.8918 20.4376 40.6858ZM40.7501 22C40.7501 31.8292 33.1868 39.8918 23.5626 40.6858V38.5625V4.18746V3.31418C33.1868 4.10816 40.7501 12.1708 40.7501 22ZM43.8751 22C43.8751 34.0812 34.0813 43.875 22.0001 43.875C9.91883 43.875 0.125061 34.0812 0.125061 22C0.125061 9.91877 9.91883 0.125 22.0001 0.125C34.0813 0.125 43.8751 9.91877 43.8751 22Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const contrast = ((/* unused pure expression or super */ null && (contrast_Contrast)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Contrast/Contrast.js\nvar Contrast_Contrast=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_contrast-tool-button",id:TOOLS_IDS.CONTRAST,label:d("contrastTool"),Icon:contrast_Contrast,onClick:b,isSelected:c})};Contrast_Contrast.defaultProps={isSelected:!1};/* harmony default export */ const tools_Contrast_Contrast = (Contrast_Contrast);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Contrast/ContrastOptions.js\nvar ContrastOptions_MIN_VALUE=-100,ContrastOptions_DEFAULT_VALUE={contrast:0},ContrastOptions_MAX_VALUE=100,ContrastOptions_sliderStyle={width:150,padding:0},ContrastOptions=function(){var a,b=hooks_useFinetune(lib.Filters.Contrast,ContrastOptions_DEFAULT_VALUE),c=(0,slicedToArray/* default */.Z)(b,2),d=c[0],e=c[1];return react.createElement(common_Slider,{className:"FIE_contrast-option",min:ContrastOptions_MIN_VALUE,max:ContrastOptions_MAX_VALUE,value:null!==(a=d.contrast)&&void 0!==a?a:ContrastOptions_DEFAULT_VALUE.contrast,onChange:function changeValue(a){e({contrast:utils_restrictNumber(a,ContrastOptions_MIN_VALUE,ContrastOptions_MAX_VALUE)})},style:ContrastOptions_sliderStyle})};/* harmony default export */ const Contrast_ContrastOptions = (ContrastOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Contrast/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/saturation.js\n\n\nvar saturation_excluded = ["color", "size"];\n\n\nvar Saturation = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, saturation_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M37.2341 37.6984H37.5121V37.4237C41.4447 33.4687 43.875 28.0182 43.875 22C43.875 15.9819 41.4447 10.5314 37.5121 6.57632V6.30045H37.2328C33.2942 2.47819 27.9219 0.125031 22 0.125031C9.91877 0.125031 0.125 9.9188 0.125 22C0.125 34.0813 9.91877 43.875 22 43.875C24.718 43.875 27.3203 43.3793 29.7213 42.4733H30.5303V42.1494C33.0389 41.0861 35.308 39.5679 37.2341 37.6984ZM20.4257 3.31519C10.807 4.1148 3.25 12.1749 3.25 22C3.25 31.8252 10.807 39.8853 20.4257 40.6849V3.31519ZM34.3871 36.0759C33.221 37.1029 31.9263 37.9873 30.5303 38.7017V5.29836C31.9263 6.01281 33.221 6.89715 34.3871 7.92411V36.0759ZM37.5121 11.4641C39.5556 14.4669 40.75 18.094 40.75 22C40.75 25.9061 39.5556 29.5332 37.5121 32.536V11.4641ZM23.5507 40.6868C24.8796 40.578 26.1693 40.3307 27.4053 39.9592V4.04089C26.1693 3.66941 24.8796 3.42203 23.5507 3.31324V40.6868Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const saturation = ((/* unused pure expression or super */ null && (Saturation)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/HSV/HSV.js\nvar HSV_HSV=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_hsv-tool-button",id:TOOLS_IDS.HSV,label:d("hsvTool"),Icon:Saturation,onClick:b,isSelected:c})};HSV_HSV.defaultProps={isSelected:!1};/* harmony default export */ const tools_HSV_HSV = (HSV_HSV);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/HSV/HSV.styled.js\nvar StyledSliderContainer=styled_components_browser_esm.div.withConfig({componentId:"sc-tm5uj2-0"})(["margin:6px;"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/HSV/HSVOptions.js\nvar HSVOptions_DEFAULT_VALUE={hue:0,saturation:0,value:0},HSVOptions_sliderStyle={padding:0},HSVOptions=function(a){var b,c,d,e=a.t,f=hooks_useFinetune(lib.Filters.HSV,HSVOptions_DEFAULT_VALUE),g=(0,slicedToArray/* default */.Z)(f,2),h=g[0],i=g[1],j=function(a,b){i((0,defineProperty/* default */.Z)({},a,+b))};return react.createElement(react.Fragment,null,react.createElement(StyledSliderContainer,{className:"FIE_hue-option-wrapper"},react.createElement(label_component,{className:"FIE_hue-option-label"},e("hue")),react.createElement(common_Slider,{className:"FIE_hue-option",min:0,step:1,max:259,value:null!==(b=h.hue)&&void 0!==b?b:HSVOptions_DEFAULT_VALUE.hue,onChange:function onChange(a){return j("hue",a)},style:HSVOptions_sliderStyle})),react.createElement(StyledSliderContainer,{className:"FIE_saturation-option-wrapper"},react.createElement(label_component,{className:"FIE_saturation-option-label"},e("saturation")),react.createElement(common_Slider,{className:"FIE_saturation-option",min:-2,step:.5,max:10,value:null!==(c=h.saturation)&&void 0!==c?c:HSVOptions_DEFAULT_VALUE.saturation,onChange:function onChange(a){return j("saturation",a)},style:HSVOptions_sliderStyle})),react.createElement(StyledSliderContainer,{className:"FIE_value-option-wrapper"},react.createElement(label_component,{className:"FIE_value-option-label"},e("value")),react.createElement(common_Slider,{className:"FIE_value-option",min:-2,step:.1,max:2,value:null!==(d=h.value)&&void 0!==d?d:HSVOptions_DEFAULT_VALUE.value,onChange:function onChange(a){return j("value",a)},style:HSVOptions_sliderStyle})))};/* harmony default export */ const HSV_HSVOptions = (HSVOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/HSV/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/blur.js\n\n\nvar blur_excluded = ["color", "size"];\n\n\nvar blur_Blur = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, blur_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M18.3626 41.293C17.5103 41.4285 16.7096 40.8474 16.5742 39.9952C16.4387 39.143 17.0198 38.3423 17.872 38.2068C18.2902 38.1403 18.6988 38.0456 19.0958 37.9246C21.9368 37.059 24.1957 34.8468 25.1254 32.0335C25.2671 31.6049 25.378 31.1621 25.4555 30.7076C25.6005 29.857 26.4076 29.2849 27.2583 29.4299C28.109 29.5749 28.681 30.3821 28.536 31.2327C28.432 31.8429 28.283 32.4379 28.0926 33.0142C26.8449 36.7893 23.8206 39.7519 20.0065 40.914C19.4728 41.0766 18.9239 41.2038 18.3626 41.293Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M33.9356 31.0645C33.9356 23.9644 24.1764 8.59028 19.4747 1.59549C18.2785 -0.184172 15.7216 -0.184172 14.5254 1.59548C9.82374 8.59028 0.0645752 23.9644 0.0645752 31.0645C0.0645752 40.4177 7.64685 48 17.0001 48C26.3533 48 33.9356 40.4177 33.9356 31.0645ZM30.8106 31.0645C30.8106 29.8836 30.375 28.0316 29.4236 25.578C28.5 23.1959 27.1988 20.5159 25.7187 17.7756C22.8106 12.3913 19.3287 6.98743 17.0001 3.51586C14.6715 6.98743 11.1895 12.3913 8.28145 17.7756C6.80135 20.5159 5.50017 23.1959 4.57655 25.578C3.62517 28.0316 3.18958 29.8836 3.18958 31.0645C3.18958 38.6918 9.37274 44.875 17.0001 44.875C24.6274 44.875 30.8106 38.6918 30.8106 31.0645Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const icons_blur = ((/* unused pure expression or super */ null && (blur_Blur)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Blur/Blur.js\nvar Blur_Blur=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_blur-tool-button",id:TOOLS_IDS.BLUR,label:d("blurTool"),Icon:blur_Blur,onClick:b,isSelected:c})};Blur_Blur.defaultProps={isSelected:!1};/* harmony default export */ const tools_Blur_Blur = (Blur_Blur);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Blur/BlurOptions.js\nvar BlurOptions_MIN_VALUE=0,BlurOptions_DEFAULT_VALUE={blurRadius:0},BlurOptions_MAX_VALUE=100,BlurOptions_sliderStyle={width:150,padding:0},BlurOptions=function(){var a,b=hooks_useFinetune(lib.Filters.Blur,BlurOptions_DEFAULT_VALUE),c=(0,slicedToArray/* default */.Z)(b,2),d=c[0],e=c[1];return react.createElement(common_Slider,{className:"FIE_blur-option",min:BlurOptions_MIN_VALUE,max:BlurOptions_MAX_VALUE,value:null!==(a=d.blurRadius)&&void 0!==a?a:BlurOptions_DEFAULT_VALUE.blurRadius,onChange:function changeValue(a){e({blurRadius:utils_restrictNumber(a,BlurOptions_MIN_VALUE,BlurOptions_MAX_VALUE)})},style:BlurOptions_sliderStyle})};/* harmony default export */ const Blur_BlurOptions = (BlurOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Blur/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/tempreture.js\n\n\nvar tempreture_excluded = ["color", "size"];\n\n\nvar Temprature = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, tempreture_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M9.48799 3.125H17.0311L17.0311 24.4063C17.0311 26.6148 18.1889 28.4084 19.5429 29.5401C21.7011 31.3438 23.0656 34.0456 23.0656 37.069C23.0656 42.4847 18.6753 46.875 13.2595 46.875C7.84382 46.875 3.45351 42.4847 3.45351 37.069C3.45351 34.0456 4.81799 31.3438 6.97617 29.5401C8.33021 28.4084 9.48799 26.6148 9.48799 24.4063V3.125ZM20.1561 3.125C20.1561 1.39911 18.757 0 17.0311 0H9.48799C7.7621 0 6.36299 1.39911 6.36299 3.125V24.4063C6.36299 25.4785 5.79482 26.4547 4.97216 27.1423C2.13398 29.5143 0.328506 33.0808 0.328506 37.069C0.328506 44.2106 6.11793 50 13.2595 50C20.4012 50 26.1906 44.2106 26.1906 37.069C26.1906 33.0808 24.3851 29.5143 21.5469 27.1423C20.7243 26.4547 20.1561 25.4785 20.1561 24.4063V3.125ZM35.6715 1.25C35.6715 0.559645 35.1119 0 34.4215 0H28.1715C27.4812 0 26.9215 0.559644 26.9215 1.25C26.9215 1.94036 27.4812 2.5 28.1715 2.5L34.4215 2.5C35.1119 2.5 35.6715 1.94036 35.6715 1.25ZM35.6715 8.24951C35.6715 7.55916 35.1119 6.99951 34.4215 6.99951H28.1715C27.4812 6.99951 26.9215 7.55916 26.9215 8.24951C26.9215 8.93987 27.4812 9.49951 28.1715 9.49951H34.4215C35.1119 9.49951 35.6715 8.93987 35.6715 8.24951ZM34.4215 13.999C35.1119 13.999 35.6715 14.5587 35.6715 15.249C35.6715 15.9394 35.1119 16.499 34.4215 16.499H28.1715C27.4812 16.499 26.9215 15.9394 26.9215 15.249C26.9215 14.5587 27.4812 13.999 28.1715 13.999H34.4215ZM13.2594 43.7501C16.366 43.7501 18.8844 41.2317 18.8844 38.1251C18.8844 35.4037 16.9519 33.1337 14.3844 32.6126V10.3662C14.3844 9.67582 13.8247 9.11617 13.1344 9.11617C12.444 9.11617 11.8844 9.67582 11.8844 10.3662V32.6694C9.44245 33.2829 7.63441 35.4928 7.63441 38.1251C7.63441 41.2317 10.1528 43.7501 13.2594 43.7501Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const tempreture = ((/* unused pure expression or super */ null && (Temprature)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Warmth/Warmth.js\nvar Warmth_Warmth=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_warmth-tool-button",id:TOOLS_IDS.WARMTH,label:d("warmthTool"),Icon:Temprature,onClick:b,isSelected:c})};Warmth_Warmth.defaultProps={isSelected:!1};/* harmony default export */ const tools_Warmth_Warmth = (Warmth_Warmth);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Warmth/WarmthOptions.js\nvar WarmthOptions_MIN_VALUE=0,WarmthOptions_DEFAULT_VALUE={warmth:0},WarmthOptions_MAX_VALUE=200,WarmthOptions_sliderStyle={width:150,padding:0},WarmthOptions=function(){var a,b=hooks_useFinetune(finetunes_Warmth,WarmthOptions_DEFAULT_VALUE),c=(0,slicedToArray/* default */.Z)(b,2),d=c[0],e=c[1];return react.createElement(common_Slider,{className:"FIE_warmth-option",min:WarmthOptions_MIN_VALUE,max:WarmthOptions_MAX_VALUE,value:null!==(a=d.warmth)&&void 0!==a?a:WarmthOptions_DEFAULT_VALUE.warmth,onChange:function changeValue(a){e({warmth:utils_restrictNumber(a,WarmthOptions_MIN_VALUE,WarmthOptions_MAX_VALUE)})},style:WarmthOptions_sliderStyle})};/* harmony default export */ const Warmth_WarmthOptions = (WarmthOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Warmth/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/arrow.js\n\n\nvar arrow_excluded = ["stroke", "size"];\n\n\nvar arrow_Arrow = intrinsicComponent(function (_ref, ref) {\n  var _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? \'currentColor\' : _ref$stroke,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 10 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, arrow_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size * (51 / 56),\n    height: size,\n    viewBox: "0 0 51 56",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M12.2754 3L37.2754 27.0741L12.2754 53",\n    stroke: stroke,\n    strokeWidth: "5",\n    strokeLinecap: "round",\n    strokeLinejoin: "round"\n  }));\n});\n/* harmony default export */ const icons_arrow = (arrow_Arrow);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Carousel/Carousel.styled.js\nvar StyledCarouselWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-1nr0bka-0"})(["max-width:680px;min-width:150px;position:relative;overflow:hidden;touch-action:pan-y pinch-zoom;"]),StyledCarousel=styled_components_browser_esm.ul.withConfig({componentId:"sc-1nr0bka-1"})(["padding:0;margin:0;white-space:nowrap;overflow:hidden;"]),StyledCarouselItem=styled_components_browser_esm.li.withConfig({componentId:"sc-1nr0bka-2"})(["padding:4px;display:inline-block;list-style-type:none;user-select:none;"]),arrowsCommonStyles="\\n  position: absolute;\\n  top: 0;\\n  height: 100%;\\n  width: 30px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 1;\\n",StyledPrevArrowWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-1nr0bka-3"})([""," left:0;background:linear-gradient( 90deg,#ffffff 1.56%,rgba(255,255,255,0.93) 70%,rgba(255,255,255,0) 100% );svg{transform:scaleX(-1);}"],arrowsCommonStyles),StyledNextArrowWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-1nr0bka-4"})([""," background:linear-gradient( 270deg,#ffffff 1.56%,rgba(255,255,255,0.93) 70%,rgba(255,255,255,0) 100% );right:0;"],arrowsCommonStyles);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Carousel/index.js\nvar Carousel=function(a){var b=a.children,c=a.style,d=a.className,f=(0,react.useRef)(!1),g=(0,react.useRef)(),h=hooks_useResizeObserver(),i=(0,slicedToArray/* default */.Z)(h,1),j=i[0],k=(0,react.useState)(!1),l=(0,slicedToArray/* default */.Z)(k,2),m=l[0],n=l[1],o=(0,react.useState)(!1),p=(0,slicedToArray/* default */.Z)(o,2),q=p[0],r=p[1],s=react.Children.toArray(b),t=function(){if(g.current){var a=g.current,b=a.scrollWidth,c=a.offsetWidth,d=a.scrollLeft,e=Math.round(b-c),f=Math.round(e-d);n(0<d),r(0<f)}},u=function(a,b){var c=a.findIndex(function(a){return a.classList.contains("FIE_carousel-item")});-1!==c&&(a[c].scrollIntoView({inline:b,behavior:"smooth",block:"nearest"}),setTimeout(function(){t()},500))},v=function(a){if(f.current){var b,c=((null===(b=a.touches)||void 0===b?void 0:b[0])||a).pageX;g.current.scrollBy(f.current-c,0),f.current=c,utils_debounce(t,30)()}},w=function(){f.current=null,document.removeEventListener("mousemove",v),document.removeEventListener("mouseup",w),document.removeEventListener("touchmove",v),document.removeEventListener("touchcancel",w),document.removeEventListener("touchend",w)},x=function(a){var b;f.current=((null===(b=a.touches)||void 0===b?void 0:b[0])||a).pageX,document.addEventListener("mousemove",v),document.addEventListener("mouseup",w),document.addEventListener("touchmove",v),document.addEventListener("touchcancel",w),document.addEventListener("touchend",w)};return (0,react.useEffect)(function(){g.current&&j(g.current,t)},[]),react.createElement(StyledCarouselWrapper,{className:"".concat(d,"-wrapper"),style:c,onMouseDown:x,onTouchStart:x},m&&react.createElement(StyledPrevArrowWrapper,{className:"FIE_carousel-prev-button",onClick:function scrollToPrev(a){var b=utils_getScrollOffset(),c=b.topOffset,d=b.leftOffset,e=document.elementsFromPoint(a.pageX+a.currentTarget.offsetWidth-d,a.pageY-c);u(e,"end")}},react.createElement(icons_arrow,null)),react.createElement(StyledCarousel,{className:"".concat(d,"-items"),ref:g},s.map(function(a){return react.createElement(StyledCarouselItem,{className:"".concat(d,"-item-wrapper FIE_carousel-item"),key:a.key},a)})),q&&react.createElement(StyledNextArrowWrapper,{className:"FIE_carousel-next-button",onClick:function scrollToNext(a){var b=utils_getScrollOffset(),c=b.topOffset,d=b.leftOffset,e=document.elementsFromPoint(a.pageX-a.currentTarget.offsetWidth-d,a.pageY-c);u(e,"start")}},react.createElement(icons_arrow,null)))};Carousel.defaultProps={style:null};/* harmony default export */ const common_Carousel = (Carousel);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Filters/Filters.styled.js\nvar StyledFilterItem=styled_components_browser_esm.div.withConfig({componentId:"sc-oxugzy-0"})(["display:inline-flex;flex-direction:column;align-items:center;justify-content:center;margin:0 4px;padding:2px;cursor:pointer;border-radius:2px;canvas{border-radius:2px;}"]),FilterItemPreview=styled_components_browser_esm(ReactKonvaCore_Stage).withConfig({componentId:"sc-oxugzy-1"})(["[aria-selected=\'true\'] &{padding:1px;border:2px solid ",";border-radius:2px;}"],function(a){var b=a.theme;return b.palette["accent-primary-active"]}),FilterItemLabel=styled_components_browser_esm(label_component).withConfig({componentId:"sc-oxugzy-2"})(["margin-top:6px;font-size:11px;line-height:12px;[aria-selected=\'true\'] &{color:",";}"],function(a){var b=a.theme;return b.palette["accent-primary-active"]});\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Filters/FilterItem.js\nvar FILTER_PREVIEW_WIDTH=60,FILTER_PREVIEW_HEIGHT=45,FilterItem=function(a){var b=a.filterLabel,c=a.filterFn,d=a.applyFilter,e=a.isActive,f=a.image,g=(0,react.useRef)(),h=(0,react.useCallback)(function(){d(c)},[c]),i=(0,react.useCallback)(function(){g.current?g.current.cache():setTimeout(i,0)},[]);return (0,react.useEffect)(function(){return f&&i(),function(){var a;null===(a=g.current)||void 0===a?void 0:a.clearCache()}},[f]),react.createElement(StyledFilterItem,{className:"FIE_filters-item",onClick:h,"aria-selected":e},react.createElement(FilterItemPreview,{className:"FIE_filters-item-preview",width:FILTER_PREVIEW_WIDTH,height:FILTER_PREVIEW_HEIGHT},react.createElement(ReactKonvaCore_Layer,{onTap:h},react.createElement(ReactKonvaCore_Image,{image:f,filters:c?[c]:[],width:FILTER_PREVIEW_WIDTH,height:FILTER_PREVIEW_HEIGHT,x:0,y:0,ref:g}))),react.createElement(FilterItemLabel,{className:"FIE_filters-item-label"},b))};FilterItem.defaultProps={filterFn:void 0};/* harmony default export */ const Filters_FilterItem = ((0,react.memo)(FilterItem));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Filters/Filters.constants.js\nvar konvaFilters=lib.Filters;var AVAILABLE_FILTERS=[{label:"Original",filterFn:null},{label:"Invert",filterFn:konvaFilters.Invert},{label:"Black & White",filterFn:filters_BlackAndWhite},{label:"Sepia",filterFn:konvaFilters.Sepia},{label:"Solarize",filterFn:konvaFilters.Solarize},{label:"Clarendon",filterFn:filters_Clarendon},{label:"Gingham",filterFn:filters_Gingham},{label:"Moon",filterFn:filters_Moon},{label:"Lark",filterFn:filters_Lark},{label:"Reyes",filterFn:filters_Reyes},{label:"Juno",filterFn:filters_Juno},{label:"Slumber",filterFn:filters_Slumber},{label:"Crema",filterFn:filters_Crema},{label:"Ludwig",filterFn:filters_Ludwig},{label:"Aden",filterFn:filters_Aden},{label:"Perpetua",filterFn:filters_Perpetua},{label:"Amaro",filterFn:filters_Amaro},{label:"Mayfair",filterFn:filters_Mayfair},{label:"Rise",filterFn:filters_Rise},{label:"Hudson",filterFn:filters_Hudson},{label:"Valencia",filterFn:filters_Valencia},{label:"X-Pro II",filterFn:filters_XPro2},{label:"Sierra",filterFn:filters_Sierra},{label:"Willow",filterFn:filters_Willow},{label:"Lo-Fi",filterFn:filters_LoFi},{label:"Inkwell",filterFn:konvaFilters.Grayscale},{label:"Hefe",filterFn:filters_Hefe},{label:"Nashville",filterFn:filters_Nashville},{label:"Stinson",filterFn:filters_Stinson},{label:"Vesper",filterFn:filters_Vesper},{label:"Earlybird",filterFn:filters_Earlybird},{label:"Brannan",filterFn:filters_Brannan},{label:"Sutro",filterFn:filters_Sutro},{label:"Toaster",filterFn:filters_Toaster},{label:"Walden",filterFn:filters_Walden},{label:"1977",filterFn:filters_NinteenSeventySeven},{label:"Kelvin",filterFn:filters_Kelvin},{label:"Maven",filterFn:filters_Maven},{label:"Ginza",filterFn:filters_Ginza},{label:"Skyline",filterFn:filters_Skyline},{label:"Dogpatch",filterFn:filters_Dogpatch},{label:"Brooklyn",filterFn:filters_Brooklyn},{label:"Helena",filterFn:filters_Helena},{label:"Ashby",filterFn:filters_Ashby},{label:"Charmes",filterFn:filters_Charmes}];\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Filters/Filters.js\nvar style={maxWidth:"100%",width:"100%"},Filters=function(){var a=hooks_useStore(),b=a.originalImage,c=hooks_useFilter(),d=(0,slicedToArray/* default */.Z)(c,2),e=d[0],f=d[1];return react.createElement(common_Carousel,{className:"FIE_filters",style:style},AVAILABLE_FILTERS.map(function(a){return react.createElement(Filters_FilterItem,{key:a.label,filterLabel:a.label,filterFn:a.filterFn,applyFilter:f,isActive:e===a.filterFn,image:b})}))};/* harmony default export */ const Filters_Filters = (Filters);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Filters/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/text.js\n\n\nvar text_excluded = ["color", "size"];\n\n\nvar text_Text = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, text_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M39.4229 8.89453L39.7891 16.6582H38.8613C38.6823 15.291 38.4382 14.3145 38.1289 13.7285C37.6243 12.7845 36.9489 12.0928 36.1025 11.6533C35.2725 11.1976 34.1738 10.9697 32.8066 10.9697H28.1436V36.2627C28.1436 38.2972 28.3633 39.5667 28.8027 40.0713C29.4212 40.7549 30.3734 41.0967 31.6592 41.0967H32.8066V42H18.7686V41.0967H19.9404C21.3402 41.0967 22.333 40.6735 22.9189 39.8271C23.277 39.3063 23.4561 38.1182 23.4561 36.2627V10.9697H19.4766C17.9303 10.9697 16.8317 11.0837 16.1807 11.3115C15.3343 11.6208 14.61 12.2148 14.0078 13.0938C13.4056 13.9727 13.0475 15.1608 12.9336 16.6582H12.0059L12.3965 8.89453H39.4229Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const icons_text = (text_Text);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Text/TextButton.js\nvar TextButton=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_text-tool-button",id:TOOLS_IDS.TEXT,label:d("textTool"),Icon:text_Text,onClick:b,isSelected:c})};TextButton.defaultProps={isSelected:!1};/* harmony default export */ const Text_TextButton = (TextButton);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/font-bold.js\n\n\nvar font_bold_excluded = ["color", "size"];\n\n\nvar FontBold = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, font_bold_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 14 18",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M0.214966 17.4813V0.518677H6.61123C8.82693 0.518677 10.5075 0.914783 11.653 1.70699C12.7985 2.49144 13.3712 3.64481 13.3712 5.16709C13.3712 5.99814 13.1413 6.7321 12.6814 7.36898C12.2216 7.99809 11.5819 8.46021 10.7625 8.75535C11.699 8.97282 12.4348 9.41164 12.9699 10.0718C13.5133 10.732 13.7851 11.5397 13.7851 12.4951C13.7851 14.1261 13.2249 15.361 12.1045 16.1998C10.9841 17.0386 9.38713 17.4658 7.31357 17.4813H0.214966ZM3.97748 10.0951V14.6736H7.20069C8.08697 14.6736 8.77677 14.4795 9.27007 14.0911C9.77174 13.695 10.0226 13.1513 10.0226 12.4601C10.0226 10.9067 9.1572 10.1184 7.42644 10.0951H3.97748ZM3.97748 7.62528H6.76173C8.65971 7.59421 9.6087 6.89132 9.6087 5.5166C9.6087 4.74769 9.36623 4.19625 8.88128 3.86228C8.4047 3.52054 7.64801 3.34967 6.61123 3.34967H3.97748V7.62528Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const font_bold = (FontBold);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/font-italic.js\n\n\nvar font_italic_excluded = ["color", "size"];\n\n\nvar FontItalic = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, font_italic_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 14 18",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M2.57409 19.3964H0.160461L3.42596 0.603638H5.83958L2.57409 19.3964Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const font_italic = (FontItalic);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/transparency.js\n\n\nvar transparency_excluded = ["color", "size"];\n\n\nvar Transparency = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, transparency_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M0.166672 0.166664H8.50001V8.5H0.166672V0.166664Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M16.8333 8.5H8.50001V16.8333H0.166672V25.1667H8.50001V33.5H0.166672V41.8333H8.50001V33.5H16.8333V41.8333H25.1667V33.5H33.5V41.8333H41.8333V33.5H33.5V25.1667H41.8333V16.8333H33.5V8.5H41.8333V0.166664H33.5V8.5H25.1667V0.166664H16.8333V8.5ZM16.8333 16.8333V8.5H25.1667V16.8333H16.8333ZM16.8333 25.1667V33.5H25.1667V25.1667H33.5V16.8333H25.1667V25.1667H16.8333ZM16.8333 25.1667H8.50001V16.8333H16.8333V25.1667Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const transparency = (Transparency);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/shadow.js\n\n\nvar shadow_excluded = ["color", "size"];\n\n\nvar Shadow = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, shadow_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M2.95831 0.458374C1.5776 0.458374 0.458313 1.57766 0.458313 2.95837V35.4584C0.458313 36.8391 1.5776 37.9584 2.95831 37.9584H7.54167V43.7917C7.54167 45.8627 9.2206 47.5417 11.2917 47.5417H43.7917C45.8627 47.5417 47.5417 45.8627 47.5417 43.7917V11.2917C47.5417 9.22059 45.8627 7.54166 43.7917 7.54166H37.9583V2.95837C37.9583 1.57766 36.839 0.458374 35.4583 0.458374H2.95831ZM35.4583 2.95837H2.95831L2.95831 35.4584H35.4583V2.95837ZM15.7267 37.9584L10.0417 43.746V37.9584H15.7267ZM11.5135 45.0417L18.4712 37.9584H28.5529L21.4696 45.0417H11.5135ZM24.4159 45.0417H34.2932L45.0417 34.1339V24.0207L37.9583 31.3242V35.4584C37.9583 36.8391 36.839 37.9584 35.4583 37.9584H31.4912C31.4689 37.9859 31.445 38.0126 31.4194 38.0382L24.4159 45.0417ZM45.0417 21.3515L37.9583 28.655V18.9107L45.0417 11.8338V21.3515ZM37.0311 45.0417H43.7917C44.482 45.0417 45.0417 44.482 45.0417 43.7917V36.9124L37.0311 45.0417ZM43.8844 10.045C43.8538 10.0428 43.8229 10.0417 43.7917 10.0417H37.9583V15.9657L43.8844 10.045Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const shadow = (Shadow);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/stroke.js\n\n\nvar stroke_excluded = ["color", "size"];\n\n\nvar Stroke = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, stroke_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M5.50015 7.9997C5.50015 6.61898 6.61944 5.49969 8.00015 5.49969H38.0002C39.3809 5.49969 40.5002 6.61898 40.5002 7.99969V37.9997C40.5002 39.3804 39.3809 40.4997 38.0002 40.4997H8.00015C6.61944 40.4997 5.50015 39.3804 5.50015 37.9997V7.9997ZM8.00015 7.99969H38.0002V37.9997H8.00015V7.99969Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M0.5 3C0.5 1.61929 1.61929 0.5 3 0.5H43C44.3807 0.5 45.5 1.61929 45.5 3V43C45.5 44.3807 44.3807 45.5 43 45.5H3C1.61929 45.5 0.5 44.3807 0.5 43V3ZM3 3H43V43H3V3Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const stroke = (Stroke);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/position.js\n\n\nvar position_excluded = ["color", "size"];\n\n\nvar icons_position_Position = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, position_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M9.25008 9.24878H11.7501V10.9675H10.9688V11.7488H9.25008V9.24878Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M9.25008 34.2488V36.7488H11.7501V35.03H10.9688V34.2488H9.25008Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M34.2501 36.7488H36.7501V34.2488H35.0313V35.03H34.2501V36.7488Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M36.7501 11.7488V9.24878H34.2501V10.9675H35.0313V11.7488H36.7501Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M14.4063 9.24878V11.7488H17.8438V9.24878H14.4063Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M21.2813 9.24878V11.7488H24.7188V9.24878H21.2813Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M28.1563 9.24878V11.7488H31.5938V9.24878H28.1563Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M36.7501 14.405H34.2501V17.8425H36.7501V14.405Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M36.7501 21.28H34.2501V24.7175H36.7501V21.28Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M36.7501 28.155H34.2501V31.5925H36.7501V28.155Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M31.5938 36.7488V34.2488H28.1563V36.7488H31.5938Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M24.7188 36.7488V34.2488H21.2813V36.7488H24.7188Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M17.8438 36.7488V34.2488H14.4063V36.7488H17.8438Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M9.25008 31.5925H11.7501V28.155H9.25008V31.5925Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M9.25008 24.7175H11.7501V21.28H9.25008V24.7175Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M9.25008 17.8425H11.7501V14.405H9.25008V17.8425Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M23.0002 26.7497C25.0712 26.7497 26.7502 25.0708 26.7502 22.9997C26.7502 20.9286 25.0712 19.2497 23.0002 19.2497C20.9291 19.2497 19.2502 20.9286 19.2502 22.9997C19.2502 25.0708 20.9291 26.7497 23.0002 26.7497Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M3 0.5C1.61929 0.5 0.5 1.61929 0.5 3V43C0.5 44.3807 1.61929 45.5 3 45.5H43C44.3807 45.5 45.5 44.3807 45.5 43V3C45.5 1.61929 44.3807 0.5 43 0.5H3ZM43 3H3V43H43V3Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const position = (icons_position_Position);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/AnnotationOptions/AnnotationOptions.styled.js\nvar StyledOptions=styled_components_browser_esm.div.withConfig({componentId:"sc-qvjmv1-0"})(["display:flex;align-items:center;justify-content:center;margin-top:8px;flex-wrap:wrap;"]),StyledOptionPopupContent=styled_components_browser_esm.div.withConfig({componentId:"sc-qvjmv1-1"})(["background:",";box-shadow:0px 1px 2px ",";border-radius:2px;overflow:visible;*{font-family:\'Roboto\',sans-serif;}"],function(a){var b=a.theme;return b.palette["bg-secondary"]},function(a){var b=a.theme;return b.palette["light-shadow"]}),StyledSpacedOptionFields=styled_components_browser_esm.div.withConfig({componentId:"sc-qvjmv1-2"})(["padding:8px 12px;"]),StyledHeadline=styled_components_browser_esm(label_component).withConfig({componentId:"sc-qvjmv1-3"})(["font-weight:500;margin-bottom:12px;"]),StyledTwoColumnsContainer=styled_components_browser_esm.div.withConfig({componentId:"sc-qvjmv1-4"})(["display:flex;align-items:center;justify-content:space-between;"]),StyledColumn=styled_components_browser_esm.div.withConfig({componentId:"sc-qvjmv1-5"})(["&:not(:first-child){margin-left:12px;}"]),StyledIconWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-qvjmv1-6"})(function(a){var b=a.theme,c=a.addThinBorder,d=a.noMargin,e=a.secondaryIconColor;return"\\n    cursor: pointer;\\n    padding: 3px 6px;\\n    margin: ".concat(d?0:"0 4px",";\\n    display: inline-block;\\n\\n    svg {\\n      vertical-align: middle;\\n      margin: 0 auto;\\n    }\\n\\n    ").concat(c?"border: 0.5px solid ".concat(b.palette["borders-secondary"]):"",";\\n    color: ").concat(e?"#959DA8":"",";\\n\\n    &[aria-selected=\'true\'] {\\n      background: ").concat(b.palette["bg-primary-active"],";\\n\\n      * {\\n        color: ").concat(b.palette["accent-primary-active"],";\\n      }\\n    }\\n\\n    :hover {\\n      background: ").concat(b.palette["bg-primary-active"],";\\n    }\\n  ")});\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/AnnotationOptions/OpacityField.js\nvar MIN_PERCENTANGE=0,MAX_PERCENTANGE=1,OpacityField=function(a){var b=a.annotation,c=a.updateAnnotation,d=a.t,e=b.opacity;return react.createElement(StyledSpacedOptionFields,null,react.createElement(label_component,null,d("opacity")),react.createElement(common_Slider,{annotation:"%",onChange:function changeOpacity(a){c({opacity:utils_restrictNumber(a/100,MIN_PERCENTANGE,MAX_PERCENTANGE)})},value:Math.round(100*e)}))};/* harmony default export */ const AnnotationOptions_OpacityField = (OpacityField);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/delete-outline.js\n\n\nvar delete_outline_excluded = ["color", "size"];\n\n\nvar DeleteOutline = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, delete_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M15.75 17.3125C15.75 16.4496 16.4496 15.75 17.3125 15.75C18.1754 15.75 18.875 16.4496 18.875 17.3125L18.875 32.9375C18.875 33.8005 18.1754 34.5 17.3125 34.5C16.4496 34.5 15.75 33.8005 15.75 32.9375L15.75 17.3125Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.6875 15.75C25.8246 15.75 25.125 16.4496 25.125 17.3125L25.125 32.9375C25.125 33.8005 25.8246 34.5 26.6875 34.5C27.5504 34.5 28.25 33.8005 28.25 32.9375V17.3125C28.25 16.4496 27.5504 15.75 26.6875 15.75Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M12.625 6.37503V3.25003C12.625 1.52414 14.0241 0.125031 15.75 0.125031H28.25C29.9759 0.125031 31.375 1.52414 31.375 3.25003V6.37503H42.3125C43.1754 6.37503 43.875 7.07459 43.875 7.93753C43.875 8.80048 43.1754 9.50003 42.3125 9.50003H39.1875V40.75C39.1875 42.4759 37.7884 43.875 36.0625 43.875H7.9375C6.21161 43.875 4.8125 42.4759 4.8125 40.75V9.50003L1.6875 9.50003C0.824554 9.50003 0.125 8.80048 0.125 7.93753C0.125 7.07459 0.824555 6.37503 1.6875 6.37503H12.625ZM15.75 3.25003H28.25V6.37503H15.75V3.25003ZM7.9375 9.50003L7.9375 40.75H36.0625V9.50003H7.9375Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const delete_outline = ((/* unused pure expression or super */ null && (DeleteOutline)));\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/pin-outline.js\n\n\nvar pin_outline_excluded = ["color", "size"];\n\n\nvar PinOutline = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, pin_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M43.0081 15.2287L36.7869 17.6214L28.935 29.9601C30.5809 33.9266 30.3662 38.0903 27.1408 41.3158L26.5656 41.8909C25.9554 42.5011 24.9661 42.5011 24.3559 41.8909L14.4122 31.9472L2.99211 43.3673C2.38192 43.9775 1.3926 43.9775 0.782403 43.3673C0.17221 42.7571 0.172211 41.7678 0.782403 41.1576L12.2025 29.7375L2.25883 19.7938C1.64864 19.1836 1.64864 18.1943 2.25883 17.5841L2.50512 17.3378C5.73058 14.1123 10.2231 13.5688 14.1897 15.2147L26.5283 7.36283L28.9211 1.14165C29.327 0.0863053 30.6847 -0.201832 31.4843 0.597706L43.552 12.6655C44.3516 13.465 44.0634 14.8228 43.0081 15.2287ZM29.0752 9.44618L30.9747 4.50752L39.6422 13.1751L34.7035 15.0745L25.4251 29.655L26.0486 31.1577C27.234 34.0146 27.0773 36.5309 25.4342 38.5498L5.64209 18.7576C7.75439 17.2384 10.4304 17.0382 12.992 18.1011L14.4948 18.7246L29.0752 9.44618Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const pin_outline = ((/* unused pure expression or super */ null && (PinOutline)));\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/tick.js\n\n\nvar tick_excluded = ["color", "size"];\n\n\nvar Tick = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 12 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, tick_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 55 55",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M3.40256 25.4517C2.58445 24.1661 3.05194 21.8287 4.45442 20.8937C5.85689 19.9587 8.31122 20.5431 9.24621 21.5949L19.6479 36.0872L40.685 4.41461C41.62 3.01213 43.9575 2.42777 45.5937 3.71337C46.7624 4.64835 47.4636 6.28457 46.6455 7.68705L21.6347 45.437C20.5829 46.6057 18.8298 46.6057 17.7779 45.437L3.40256 25.4517Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const tick = (Tick);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/menu-item/menu-item-actions.component.js\n\n\nvar menu_item_actions_component_excluded = ["children"];\n\n\n\n\n\nvar MenuItemActions = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, menu_item_actions_component_excluded);\n\n  return /*#__PURE__*/react.createElement(menu_item_styles.Actions, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), children && typeof children === \'function\' ? children({\n    size: rest.size\n  }) : children);\n});\nMenuItemActions.displayName = \'MenuItemActions\';\nMenuItemActions.defaultProps = {\n  size: size_Size.Md\n};\nMenuItemActions.propTypes = {\n  size: prop_types_default().oneOf(objectValues(size_Size)),\n  children: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]).isRequired\n};\n/* harmony default export */ const menu_item_actions_component = (MenuItemActions);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/menu-item/menu-item-label.component.js\n\n\nvar menu_item_label_component_excluded = ["children"];\n\n\n\nvar MenuItemLabel = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, menu_item_label_component_excluded);\n\n  return /*#__PURE__*/react.createElement(menu_item_styles.Label, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), children);\n});\nMenuItemLabel.displayName = \'MenuItemLabel\';\n/* harmony default export */ const menu_item_label_component = (MenuItemLabel);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/select/types/size.js\nvar types_size_Size = {\n  Sm: \'sm\',\n  Md: \'md\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/select/select.utils.js\n\n\n\nfunction select_utils_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction select_utils_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { select_utils_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { select_utils_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\nvar select_utils_getIconSize = function getIconSize(size) {\n  switch (size) {\n    case Size.Md:\n      return 13;\n\n    case Size.Sm:\n    default:\n      return 11;\n  }\n};\nvar renderIcon = function renderIcon(_icon, size) {\n  return _icon ? /*#__PURE__*/React.createElement(Styled.Icon, null, typeof _icon === \'function\' ? _icon({\n    size: select_utils_getIconSize(size)\n  }) : _icon) : undefined;\n};\n\nvar generateChildren = function generateChildren(children) {\n  var isActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : types_size_Size.Md;\n\n  if (isActive && children) {\n    var miActions = /*#__PURE__*/react.createElement(menu_item_actions_component, null, /*#__PURE__*/react.createElement(tick, {\n      size: size === types_size_Size.Md ? 11 : 9\n    }));\n\n    if (react.Children.count(children) === 1) {\n      var _type;\n\n      var miChildren = children;\n\n      if ( /*#__PURE__*/react.isValidElement(children) && (children === null || children === void 0 ? void 0 : (_type = children.type) === null || _type === void 0 ? void 0 : _type.displayName) !== \'MenuItemLabel\') {\n        miChildren = /*#__PURE__*/react.createElement(menu_item_label_component, null, children);\n      }\n\n      return /*#__PURE__*/react.createElement(react.Fragment, null, miChildren, miActions);\n    }\n\n    if (react.Children.count(children) > 1 && !react.Children.toArray(children).some(function (child) {\n      var _child$type;\n\n      return (child === null || child === void 0 ? void 0 : (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) === \'MenuItemActions\';\n    })) {\n      return /*#__PURE__*/react.createElement(react.Fragment, null, children, miActions);\n    }\n  }\n\n  return children;\n};\n\nvar renderOption = function renderOption(menuItem, _ref) {\n  var _type2, _props, _props2;\n\n  var value = _ref.value,\n      _ref$multiple = _ref.multiple,\n      multiple = _ref$multiple === void 0 ? false : _ref$multiple,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? types_size_Size.Md : _ref$size,\n      onClose = _ref.onClose,\n      onChange = _ref.onChange;\n\n  if (! /*#__PURE__*/react.isValidElement(menuItem)) {\n    return menuItem;\n  }\n\n  if (((_type2 = menuItem.type) === null || _type2 === void 0 ? void 0 : _type2.displayName) !== \'MenuItem\') {\n    return /*#__PURE__*/react.cloneElement(menuItem);\n  }\n\n  var menuItemValue = menuItem === null || menuItem === void 0 ? void 0 : (_props = menuItem.props) === null || _props === void 0 ? void 0 : _props.value;\n  var valueArr = multiple ? Array.isArray(value) ? value : [] : [value];\n  var active = valueArr.length > 0 && valueArr.includes(menuItemValue);\n  return /*#__PURE__*/react.cloneElement(menuItem, {\n    active: active,\n    size: size,\n    children: generateChildren(menuItem === null || menuItem === void 0 ? void 0 : (_props2 = menuItem.props) === null || _props2 === void 0 ? void 0 : _props2.children, active, size),\n    onClick: function onClick() {\n      if (!multiple && typeof onClose === \'function\') {\n        onClose();\n      }\n\n      if (typeof onChange === \'function\') {\n        var newValue = menuItemValue;\n\n        if (multiple) {\n          newValue = (0,toConsumableArray/* default */.Z)(Array.isArray(value) ? value : []);\n          var index = newValue.indexOf(menuItemValue);\n\n          if (index > -1) {\n            newValue.splice(index, 1);\n          } else {\n            newValue.push(menuItemValue);\n          }\n        }\n\n        onChange(newValue);\n      }\n    }\n  });\n};\n\nvar renderOptionValue = function renderOptionValue(option) {\n  if (option && option.children) {\n    if (Array.isArray(option.children)) {\n      var _option$children, _option$children$filt;\n\n      return (_option$children = option.children) === null || _option$children === void 0 ? void 0 : (_option$children$filt = _option$children.filter(function (optionChild) {\n        return typeof optionChild === \'string\';\n      })) === null || _option$children$filt === void 0 ? void 0 : _option$children$filt.join(\' \');\n    }\n\n    return option.children;\n  }\n};\n\nvar renderValue = function renderValue(_ref2) {\n  var value = _ref2.value,\n      _ref2$multiple = _ref2.multiple,\n      multiple = _ref2$multiple === void 0 ? false : _ref2$multiple,\n      children = _ref2.children;\n  var optionsProps = [];\n  react.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/react.isValidElement(child)) {\n      var _type3 = child === null || child === void 0 ? void 0 : child.type,\n          displayName = _type3.displayName;\n\n      if (displayName === \'MenuItem\' && Boolean(child.props)) {\n        optionsProps.push(select_utils_objectSpread({}, child.props));\n      }\n    }\n  });\n  var activeOptions = multiple ? optionsProps.filter(function (itemProps) {\n    return Array.isArray(value) && value.includes(itemProps.value);\n  }) : [optionsProps.find(function (itemProps) {\n    return itemProps.value === value;\n  })];\n\n  if (activeOptions.length > 0) {\n    return activeOptions.map(renderOptionValue).join(\', \');\n  }\n\n  return Array.isArray(value) ? value.join(\', \') : value;\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/select/types/background.js\nvar Background = {\n  Primary: \'primary\',\n  Secondary: \'secondary\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/input/types/size.js\nvar input_types_size_Size = {\n  Sm: \'sm\',\n  Md: \'md\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/input/input.mixin.js\n\n\nvar _sizeInputMixin;\n\n\n\n\n\nvar sizeInputMixin = (_sizeInputMixin = {}, (0,defineProperty/* default */.Z)(_sizeInputMixin, input_types_size_Size.Sm, function (_ref) {\n  var font = _ref.theme.typography.font;\n  return Ce(["padding:4px 8px;height:24px;", ""], font[FontVariant.InputSm]);\n}), (0,defineProperty/* default */.Z)(_sizeInputMixin, input_types_size_Size.Md, function (_ref2) {\n  var font = _ref2.theme.typography.font;\n  return Ce(["padding:8px 12px;height:30px;", ""], font[FontVariant.InputMd]);\n}), _sizeInputMixin);\nvar input_mixin_errorMixin = function errorMixin(_ref3) {\n  var palette = _ref3.theme.palette;\n  return Ce(["background:", " !important;border:1px solid ", " !important;"], palette[Color.BackgroundSecondary], palette[Color.Error]);\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/input/types/background.js\nvar background_Background = {\n  Primary: \'primary\',\n  Secondary: \'secondary\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/input/input.styles.js\n\n\n\n\n\n\nvar input_styles_baseClassName = \'Input\';\nvar input_styles_Icon = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(input_styles_baseClassName, \'Icon\')\n}).withConfig({\n  componentId: "sc-150k0cz-0"\n})(function (_ref) {\n  var iconClickStart = _ref.iconClickStart,\n      iconClickEnd = _ref.iconClickEnd,\n      palette = _ref.theme.palette;\n  return Ce(["display:flex;color:", ";cursor:", ";&:first-child{margin-right:7px;}&:last-child{margin-left:7px;}"], palette[Color.IconsPrimary], iconClickStart || iconClickEnd ? \'pointer\' : \'default\');\n});\nvar Input = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(input_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-150k0cz-1"\n})(function (_ref2) {\n  var _ref2$size = _ref2.size,\n      size = _ref2$size === void 0 ? input_types_size_Size.Md : _ref2$size,\n      _ref2$error = _ref2.error,\n      error = _ref2$error === void 0 ? false : _ref2$error,\n      _ref2$fullWidth = _ref2.fullWidth,\n      fullWidth = _ref2$fullWidth === void 0 ? false : _ref2$fullWidth,\n      theme = _ref2.theme,\n      _ref2$background = _ref2.background,\n      background = _ref2$background === void 0 ? background_Background.Primary : _ref2$background;\n  return Ce(["position:relative;display:inline-flex;align-items:center;cursor:text;width:", ";background:", ";border:1px solid ", ";border-radius:", ";box-sizing:border-box;color:", ";", " &:focus-within{background-color:", "!important;border:1px solid ", ";}&:hover{background-color:", ";}", ""], fullWidth ? \'100%\' : \'300px\', background === \'primary\' ? theme.palette[Color.BackgroundPrimary] : theme.palette[Color.BackgroundSecondary], theme.palette[Color.BordersSecondary], theme.shape.borderRadius[BorderRadiusSize.Sm], theme.palette[Color.TextPrimary], sizeInputMixin[size], theme.palette[Color.BackgroundSecondary], theme.palette[Color.AccentPrimary], theme.palette[Color.BackgroundPrimaryHover], error && input_mixin_errorMixin);\n});\nvar Base = /*#__PURE__*/styled_components_browser_esm.input.attrs({\n  className: generateClassNames(input_styles_baseClassName, \'Base\')\n}).withConfig({\n  componentId: "sc-150k0cz-2"\n})(function (_ref3) {\n  var palette = _ref3.theme.palette;\n  return Ce(["display:block;color:inherit;width:100%;min-width:0;margin:0;padding:0;border:0;background-color:transparent;outline:none;&::placeholder{color:", ";}"], palette[Color.TextPlaceholder]);\n});\nvar input_styles_Styled = applyDisplayNames({\n  Input: Input,\n  Base: Base,\n  Icon: input_styles_Icon\n});\n/* harmony default export */ const input_styles = (input_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/select/select.styles.js\n\n\n // import { BorderRadiusSize as BRSize } from \'../../utils/types/shape\';\n\n\n\nvar select_styles_baseClassName = \'Select\';\nvar select_styles_Icon = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(select_styles_baseClassName, \'Icon\')\n}).withConfig({\n  componentId: "sc-mfrapg-0"\n})(function (_ref) {\n  var palette = _ref.theme.palette;\n  return Ce(["display:flex;flex-shrink:0;color:", ";"], palette[Color.IconsPrimary]);\n});\nvar select_styles_Container = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(select_styles_baseClassName, \'Container\')\n}).withConfig({\n  componentId: "sc-mfrapg-1"\n})(function (_ref2) {\n  var _ref2$fullWidth = _ref2.fullWidth,\n      fullWidth = _ref2$fullWidth === void 0 ? false : _ref2$fullWidth;\n  return Ce(["position:relative;display:inline-flex;", ""], fullWidth ? \'width: 100%\' : \'\');\n});\nvar Select = /*#__PURE__*/styled_components_browser_esm(input_styles.Input).attrs({\n  className: generateClassNames(select_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-mfrapg-2"\n})(function (_ref3) {\n  var palette = _ref3.theme.palette,\n      _ref3$background = _ref3.background,\n      background = _ref3$background === void 0 ? Background.Primary : _ref3$background;\n  return Ce(["cursor:pointer;user-select:none;background:", ";"], background === \'primary\' ? palette[Color.BackgroundPrimary] : palette[Color.BackgroundSecondary]);\n});\nvar select_styles_Label = /*#__PURE__*/styled_components_browser_esm.label.attrs({\n  className: generateClassNames(select_styles_baseClassName, \'Label\')\n}).withConfig({\n  componentId: "sc-mfrapg-3"\n})(["flex-grow:1;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;"]);\nvar select_styles_Input = /*#__PURE__*/styled_components_browser_esm.input.attrs({\n  className: generateClassNames(select_styles_baseClassName, \'Input\'),\n  \'aria-hidden\': \'true\',\n  tabindex: \'-1\'\n}).withConfig({\n  componentId: "sc-mfrapg-4"\n})(["left:0;width:100%;bottom:0;opacity:0;position:absolute;pointer-events:none;box-sizing:border-box;"]);\nvar select_styles_Styled = applyDisplayNames({\n  Container: select_styles_Container,\n  Select: Select,\n  Label: select_styles_Label,\n  Icon: select_styles_Icon,\n  Input: select_styles_Input\n});\n/* harmony default export */ const select_styles = (select_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/select/select.component.js\n\n\n\nvar select_component_excluded = ["children", "size", "error", "multiple", "onChange", "value", "fullWidth", "selectProps", "MenuProps", "readOnly", "disabled", "background", "renderLabel"];\n\n\n\n\n\n\n\n\n\nvar select_component_Select = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      size = _ref.size,\n      error = _ref.error,\n      multiple = _ref.multiple,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      fullWidth = _ref.fullWidth,\n      selectProps = _ref.selectProps,\n      MenuProps = _ref.MenuProps,\n      readOnly = _ref.readOnly,\n      disabled = _ref.disabled,\n      background = _ref.background,\n      renderLabel = _ref.renderLabel,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, select_component_excluded);\n\n  var _useState = (0,react.useState)(undefined),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  var handleClick = function handleClick(event) {\n    return setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    return setAnchorEl(undefined);\n  };\n\n  return /*#__PURE__*/react.createElement(select_styles.Container, {\n    ref: ref,\n    fullWidth: Boolean(fullWidth)\n  }, /*#__PURE__*/react.createElement(select_styles.Select, (0,esm_extends/* default */.Z)({}, rest, {\n    size: size,\n    background: background,\n    error: error,\n    fullWidth: Boolean(fullWidth),\n    readOnly: readOnly,\n    onClick: readOnly || disabled ? undefined : handleClick\n  }), /*#__PURE__*/react.createElement(select_styles.Label, null, typeof renderLabel === \'function\' ? renderLabel(value) : renderValue({\n    value: value,\n    multiple: multiple,\n    children: children\n  })), /*#__PURE__*/react.createElement(select_styles.Icon, null, /*#__PURE__*/react.createElement(arrow_tick_component, {\n    type: open ? \'top\' : \'bottom\' // IconProps={{ size: size === Size.Md ? 13 : 11 }}\n    ,\n    IconProps: {\n      size: 8\n    }\n  })), /*#__PURE__*/react.createElement(select_styles.Input, selectProps)), /*#__PURE__*/react.createElement(menu_component, (0,esm_extends/* default */.Z)({\n    onClose: handleClose,\n    open: open,\n    anchorEl: anchorEl\n  }, MenuProps), react.Children.map(children, function (child) {\n    return renderOption(child, {\n      value: value,\n      multiple: multiple,\n      size: size,\n      onClose: handleClose,\n      onChange: readOnly || disabled ? undefined : onChange\n    });\n  })));\n});\nvar select_component_defaultProps = {\n  size: types_size_Size.Md,\n  error: false,\n  multiple: false,\n  fullWidth: false,\n  readOnly: false,\n  disabled: false,\n  background: Background.Primary\n};\nselect_component_Select.defaultProps = select_component_defaultProps;\nvar simpleValuePropTypes = prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number, prop_types_default().oneOf([null])]);\nvar select_component_propTypes = {\n  size: prop_types_default().oneOf(objectValues(types_size_Size)),\n  error: (prop_types_default()).bool,\n  multiple: (prop_types_default()).bool,\n  fullWidth: (prop_types_default()).bool,\n  children: prop_types_default().oneOfType([(prop_types_default()).element, prop_types_default().arrayOf((prop_types_default()).element)]),\n  value: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number, prop_types_default().oneOf([null]), prop_types_default().arrayOf(simpleValuePropTypes)]),\n  onChange: (prop_types_default()).func,\n  MenuProps: prop_types_default().exact(menu_component_propTypes),\n  // eslint-disable-next-line react/forbid-prop-types\n  selectProps: (prop_types_default()).object,\n  readOnly: (prop_types_default()).bool,\n  disabled: (prop_types_default()).bool,\n  background: prop_types_default().oneOf(objectValues(Background)),\n  renderLabel: (prop_types_default()).func\n};\nselect_component_Select.propTypes = select_component_propTypes;\n/* harmony default export */ const select_component = (select_component_Select);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/input/input.component.js\n\n\nvar input_component_excluded = ["children", "iconStart", "iconEnd", "iconClickStart", "iconClickEnd", "size", "className", "style", "fullWidth", "readOnly", "background", "focusOnMount", "focusOnClick"];\n\n/* eslint-disable sonarjs/cognitive-complexity */\n\n\n\n\n\n\nvar input_component_getIconSize = function getIconSize(sizeName) {\n  switch (sizeName) {\n    case input_types_size_Size.Md:\n      return 16;\n\n    case input_types_size_Size.Sm:\n    default:\n      return 14;\n  }\n};\n\nvar input_component_Input = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      iconStart = _ref.iconStart,\n      iconEnd = _ref.iconEnd,\n      iconClickStart = _ref.iconClickStart,\n      iconClickEnd = _ref.iconClickEnd,\n      size = _ref.size,\n      className = _ref.className,\n      style = _ref.style,\n      fullWidth = _ref.fullWidth,\n      readOnly = _ref.readOnly,\n      _ref$background = _ref.background,\n      background = _ref$background === void 0 ? \'primary\' : _ref$background,\n      _ref$focusOnMount = _ref.focusOnMount,\n      focusOnMount = _ref$focusOnMount === void 0 ? false : _ref$focusOnMount,\n      _ref$focusOnClick = _ref.focusOnClick,\n      focusOnClick = _ref$focusOnClick === void 0 ? true : _ref$focusOnClick,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, input_component_excluded);\n\n  var inputRef = (0,react.useRef)(null);\n\n  var handleFocus = function handleFocus() {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  (0,react.useEffect)(function () {\n    if (focusOnMount) {\n      handleFocus();\n    }\n  }, []);\n\n  var handleIconClick = function handleIconClick(type) {\n    if (focusOnClick) {\n      handleFocus();\n    }\n\n    if (type === \'start\') {\n      if (iconClickStart) {\n        iconClickStart();\n      }\n    } else if (iconClickEnd) {\n      iconClickEnd();\n    }\n  };\n\n  var renderIcon = function renderIcon(_icon, type) {\n    return _icon ? /*#__PURE__*/react.createElement(input_styles.Icon, {\n      onClick: function onClick() {\n        return handleIconClick(type);\n      },\n      iconClickStart: iconClickStart,\n      iconClickEnd: iconClickEnd\n    }, typeof _icon === \'function\' ? _icon({\n      size: input_component_getIconSize(size)\n    }) : _icon) : undefined;\n  };\n\n  return /*#__PURE__*/react.createElement(input_styles.Input, {\n    onClick: focusOnClick ? handleFocus : undefined,\n    ref: ref,\n    size: size,\n    className: className,\n    style: style,\n    fullWidth: Boolean(fullWidth),\n    background: background\n  }, renderIcon(iconStart, \'start\'), /*#__PURE__*/react.createElement(input_styles.Base, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: inputRef,\n    readOnly: Boolean(readOnly)\n  })), renderIcon(iconEnd, \'end\'), children && /*#__PURE__*/react.createElement(react.Fragment, null, children));\n});\nvar input_component_defaultProps = {\n  size: input_types_size_Size.Md,\n  background: background_Background.Primary,\n  error: false,\n  fullWidth: false,\n  readOnly: false\n};\ninput_component_Input.defaultProps = input_component_defaultProps;\nvar input_component_propTypes = {\n  size: prop_types_default().oneOf(objectValues(input_types_size_Size)),\n  iconStart: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]),\n  iconEnd: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]),\n  error: (prop_types_default()).bool,\n  fullWidth: (prop_types_default()).bool,\n  // eslint-disable-next-line react/forbid-prop-types\n  value: (prop_types_default()).any,\n  readOnly: (prop_types_default()).bool,\n  iconClickStart: (prop_types_default()).func,\n  iconClickEnd: (prop_types_default()).func,\n  background: prop_types_default().oneOf(objectValues(background_Background)),\n  focusOnMount: (prop_types_default()).bool,\n  focusOnClick: (prop_types_default()).bool\n};\ninput_component_Input.propTypes = input_component_propTypes;\n/* harmony default export */ const input_component = (input_component_Input);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/hooks/use-drag.js\nfunction useDrag(onMove, onStart, onEnd) {\n  var onDragging = function onDragging(e) {\n    if (typeof onMove === \'function\') {\n      var _e$touches;\n\n      onMove(((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e);\n    }\n  };\n\n  var disableSliding = function disableSliding(e) {\n    document.removeEventListener(\'mousemove\', onDragging);\n    document.removeEventListener(\'mouseup\', disableSliding);\n    document.removeEventListener(\'mouseleave\', disableSliding);\n    document.removeEventListener(\'touchmove\', onDragging);\n    document.removeEventListener(\'touchend\', disableSliding);\n    document.removeEventListener(\'touchcancel\', disableSliding);\n\n    if (typeof onEnd === \'function\') {\n      var _e$touches2;\n\n      onEnd(((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e);\n    }\n  };\n\n  var enableDrag = function enableDrag(e) {\n    document.addEventListener(\'mousemove\', onDragging);\n    document.addEventListener(\'mouseup\', disableSliding);\n    document.addEventListener(\'mouseleave\', disableSliding);\n    document.addEventListener(\'touchmove\', onDragging);\n    document.addEventListener(\'touchend\', disableSliding);\n    document.addEventListener(\'touchcancel\', disableSliding);\n\n    if (typeof onStart === \'function\') {\n      var _e$touches3;\n\n      onStart(((_e$touches3 = e.touches) === null || _e$touches3 === void 0 ? void 0 : _e$touches3[0]) || e);\n    }\n  };\n\n  return {\n    onMouseDown: enableDrag,\n    onTouchStart: enableDrag\n  };\n}\n\n/* harmony default export */ const use_drag = (useDrag);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/color-picker/color-converters.js\n\n\n/* eslint-disable id-length */\nvar rgbStringToArray = function rgbStringToArray(rgbColorString) {\n  return rgbColorString.replaceAll(/[^\\d,]/gi, \'\').split(\',\').map(function (n) {\n    return +n;\n  });\n};\nvar hexToRgb = function hexToRgb(hexColor) {\n  // if (!hexColor) return { r: 0, g: 0, b: 0 };\n  if (!hexColor) return [0, 0, 0];\n  return [Number.parseInt(hexColor.slice(1, 3), 16), Number.parseInt(hexColor.slice(3, 5), 16), Number.parseInt(hexColor.slice(5, 7), 16)];\n};\n\nvar rgbChannelToHex = function rgbChannelToHex(channel) {\n  return channel.toString(16).padStart(2, \'0\');\n};\n\nvar rgbToHex = function rgbToHex() {\n  for (var _len = arguments.length, rgbColor = new Array(_len), _key = 0; _key < _len; _key++) {\n    rgbColor[_key] = arguments[_key];\n  }\n\n  return "#".concat(rgbColor.map(rgbChannelToHex).join(\'\'));\n};\nvar hslToHex = function hslToHex(h, s, l) {\n  var dividedL = l / 100;\n  var a = s * Math.min(dividedL, 1 - dividedL) / 100;\n\n  var f = function f(n) {\n    var k = (n + h / 30) % 12;\n    var color = dividedL - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return rgbChannelToHex(Math.round(255 * color));\n  };\n\n  return "#".concat(f(0)).concat(f(8)).concat(f(4));\n};\nvar rgbToHsl = function rgbToHsl() {\n  for (var _len2 = arguments.length, rgbColor = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    rgbColor[_key2] = arguments[_key2];\n  }\n\n  var r = rgbColor[0],\n      g = rgbColor[1],\n      b = rgbColor[2];\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var min = Math.min(r, g, b);\n  var max = Math.max(r, g, b);\n  var h;\n  var s;\n  var l = (max + min) / 2;\n\n  if (max === min) {\n    h = 0;\n    s = 0;\n  } else {\n    var diff = max - min;\n    s = l > 0.5 ? diff / (2 - max - min) : diff / (max + min);\n\n    switch (max) {\n      case r:\n        h = (g - b) / diff + (g < b ? 6 : 0);\n        break;\n\n      case g:\n        h = (b - r) / diff + 2;\n        break;\n\n      case b:\n        h = (r - g) / diff + 4;\n        break;\n\n      default:\n        h = 0;\n    }\n\n    h /= 6;\n  } // * 360 for having the hue in degrees\n\n\n  return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100)];\n};\nvar colorToHsl = function colorToHsl(color) {\n  if (color.startsWith(\'#\')) {\n    var hex = color;\n\n    if (color.length === 4) {\n      hex = "#".concat(color[1]).concat(color[1]).concat(color[2]).concat(color[2]).concat(color[3]).concat(color[3]);\n    }\n\n    return rgbToHsl.apply(void 0, (0,toConsumableArray/* default */.Z)(hexToRgb(hex)));\n  }\n\n  if (color.startsWith(\'rgb\')) {\n    var colorInRgb = rgbStringToArray(color);\n    return rgbToHsl.apply(void 0, (0,toConsumableArray/* default */.Z)(colorInRgb));\n  } // if the color is in text and no one from previous then return the default color which is black\n\n\n  if (typeof color === \'string\') {\n    return [0, 0, 0];\n  }\n\n  return color;\n};\nvar colorToRgb = function colorToRgb(color) {\n  // we are not handling (hsl/color name) here cause we are accepting only HEX and RGB colors as default colors from user.\n  if (color.startsWith(\'#\')) {\n    return hexToRgb(color);\n  }\n\n  if (color.startsWith(\'rgb\')) {\n    return rgbStringToArray(color);\n  }\n\n  if (typeof color === \'string\') {\n    return [0, 0, 0];\n  }\n\n  return color;\n};\nvar colorToHex = function colorToHex(color) {\n  if (color.startsWith(\'#\')) {\n    if (color.length === 7) {\n      return color;\n    }\n\n    return "#".concat(color[0]).concat(color[0]).concat(color[1]).concat(color[1]).concat(color[2]).concat(color[2]);\n  }\n\n  if (color.startsWith(\'rgb\')) {\n    return rgbToHex.apply(void 0, (0,toConsumableArray/* default */.Z)(rgbStringToArray(color)));\n  }\n\n  if (typeof color === \'string\') {\n    return \'#000000\';\n  }\n\n  return color;\n};\n\nvar checkIsBlack = function checkIsBlack(s, l) {\n  return l === 0 && (s === 0 || s === 1);\n};\n\nvar checkIsWhite = function checkIsWhite(s, l) {\n  return s === 0 && l === 1;\n}; // both hsv and hsl values are in [0, 1] except h is in [0, 360]\n\n\nvar hsvToHsl = function hsvToHsl(h, s, v) {\n  var newS = s;\n  var l = (2 - s) * v / 2;\n\n  if (l !== 0) {\n    if (l === 1) {\n      newS = 0;\n    } else if (l < 0.5) {\n      newS = newS * v / (l * 2);\n    } else {\n      newS = newS * v / (2 - l * 2);\n    }\n  }\n\n  var isBlack = checkIsBlack(newS, l);\n  return [isBlack || checkIsWhite(newS, l) ? 0 : h, isBlack ? 0 : Math.round(newS * 100), Math.round(l * 100)];\n}; // both hsv and hsl values are in [0, 1] except h is in [0, 360]\n\nvar hslToHsv = function hslToHsv(h, s, l) {\n  var newS = s;\n  var newL = l * 2;\n  newS *= newL <= 1 ? newL : 2 - newL;\n  var v = (newL + newS) / 2;\n  newS = 2 * newS / (newL + newS); // return [h, newS, v];\n\n  var isBlack = checkIsBlack(newS, l);\n  return [isBlack || checkIsWhite(newS, l) ? 0 : h, isBlack ? 0 : Math.round(newS * 100), Math.round(v * 100)];\n}; // TODO: validating 3 color code for Hex\n// /^#([\\da-f]{3}){1,2}$/i.test(color)colorToHex\n\nvar validateHex = function validateHex(color) {\n  return /^#[\\da-f]{6}$/i.test(color);\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/get-elem-document-coords.js\nfunction get_elem_document_coords_getElemDocumentCoords(elem) {\n  if (!elem) {\n    return null;\n  }\n\n  var box = elem.getBoundingClientRect();\n  var _document = document,\n      body = _document.body;\n  var docEl = document.documentElement;\n  var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n  var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var top = box.top + scrollTop - clientTop;\n  var left = box.left + scrollLeft - clientLeft;\n  return {\n    top: Math.round(top),\n    left: Math.round(left),\n    width: box.width,\n    height: box.height\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/color-picker/map-number.js\nfunction map_number_mapNumber(number, oldMin, oldMax, newMin, newMax) {\n  return (number - oldMin) * (newMax - newMin) / (oldMax - oldMin) + newMin;\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/utils/functions/color-picker/restrict-number.js\nfunction restrict_number_restrictNumber(number) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 ? arguments[2] : undefined;\n  // we are not assigning default value for it as if max was null it will override the default value.\n  var currentMax = max || 1000000;\n  var convertedNumber = +number;\n  return Math.min(Math.max(min, convertedNumber), currentMax);\n}\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/color-picker/color-picker.styles.js\n\n\nfunction color_picker_styles_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction color_picker_styles_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { color_picker_styles_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { color_picker_styles_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\nvar color_picker_styles_baseClassName = \'ColorPicker\';\nvar colorItemClassName = \'ColorItem\'; // const ColorPicker = styled.div.attrs({\n//   className: generateClassNames(baseClassName, \'root\'),\n// })`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n// `;\n\nvar ColorPickerWrapper = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(color_picker_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-qj4xo5-0"\n})(["background-color:", ";box-shadow:0px 1px 2px rgba(78,77,77,0.15);border-radius:2px;padding:12px;max-width:200px;"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.palette[Color.BackgroundSecondary];\n});\nvar ColorPickerIcon = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(color_picker_styles_baseClassName, \'icon\')\n}).withConfig({\n  componentId: "sc-qj4xo5-1"\n})(["display:flex;justify-content:space-between;align-items:center;cursor:pointer;"]);\nvar RangePickerWrapper = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(color_picker_styles_baseClassName, \'range-picker\')\n}).withConfig({\n  componentId: "sc-qj4xo5-2"\n})(function (_ref2) {\n  var color = _ref2.color;\n  return Ce(["position:relative;border-radius:2px;width:186px;height:180px;user-select:none;cursor:crosshair;background-color:", ";"], color);\n});\nvar WhiteGradient = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(color_picker_styles_baseClassName, \'white-gradient\')\n}).withConfig({\n  componentId: "sc-qj4xo5-3"\n})(["background:linear-gradient(to right,white 0%,rgba(255,255,255,0) 100%);z-index:0;position:absolute;width:100%;height:100%;border-radius:2px;user-select:none;pointer-events:none;top:-1px;"]);\nvar BlackGradient = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(color_picker_styles_baseClassName, \'black-gradient\')\n}).withConfig({\n  componentId: "sc-qj4xo5-4"\n})(["background:linear-gradient(to bottom,rgba(0,0,0,0) 0%,black 100%);z-index:1;position:absolute;width:100%;height:100%;border-radius:2px;user-select:none;pointer-events:none;"]);\nvar ColorPointer = /*#__PURE__*/styled_components_browser_esm.span.attrs(function (_ref3) {\n  var _ref3$left = _ref3.left,\n      left = _ref3$left === void 0 ? 0 : _ref3$left,\n      _ref3$top = _ref3.top,\n      top = _ref3$top === void 0 ? 0 : _ref3$top,\n      _ref3$considerTopWidt = _ref3.considerTopWidth,\n      considerTopWidth = _ref3$considerTopWidt === void 0 ? false : _ref3$considerTopWidt,\n      style = _ref3.style;\n  return {\n    className: generateClassNames(color_picker_styles_baseClassName, \'pointer\'),\n    style: color_picker_styles_objectSpread({\n      left: left - 7,\n      // 7\n      top: top - (considerTopWidth ? 7 : 0)\n    }, style)\n  };\n}).withConfig({\n  componentId: "sc-qj4xo5-5"\n})(function (_ref4) {\n  var theme = _ref4.theme;\n  return Ce(["display:inline-block;box-sizing:border-box;width:15px;height:15px;border-radius:20px;box-shadow:0px 1px 2px rgba(78,77,77,0.15);border:2px solid ", ";background-color:", ";position:absolute;cursor:pointer;z-index:11;user-select:none;outline:none;"], theme.palette[Color.BackgroundSecondary], theme.palette[Color.AccentPrimary]);\n});\nvar BarWrapper = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(color_picker_styles_baseClassName, \'bar-wrapper\')\n}).withConfig({\n  componentId: "sc-qj4xo5-6"\n})(["margin-top:8px;position:relative;width:186px;height:12px;"]);\nvar Bar = /*#__PURE__*/styled_components_browser_esm.table.attrs({\n  className: generateClassNames(color_picker_styles_baseClassName, \'bar\')\n}).withConfig({\n  componentId: "sc-qj4xo5-7"\n})(["border-radius:4px;width:100%;height:8px;border-collapse:collapse;"]);\nvar BarColorStop = /*#__PURE__*/styled_components_browser_esm.td.attrs(function (_ref5) {\n  var $color = _ref5.$color;\n  return {\n    className: generateClassNames(color_picker_styles_baseClassName, \'stop\'),\n    style: {\n      backgroundColor: $color\n    }\n  };\n}).withConfig({\n  componentId: "sc-qj4xo5-8"\n})(["padding:0;user-select:none;pointer-events:none;&:first-child{width:4px;border-top-left-radius:4px;border-bottom-left-radius:4px;}&:last-child{width:4px;border-top-right-radius:4px;border-bottom-right-radius:4px;}"]);\nvar ColorPickerAction = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(color_picker_styles_baseClassName, \'action\')\n}).withConfig({\n  componentId: "sc-qj4xo5-9"\n})(["display:flex;justify-content:space-between;align-items:center;"]);\nvar ColorItemWrapper = /*#__PURE__*/styled_components_browser_esm.label.attrs({\n  className: generateClassNames(colorItemClassName, \'label\')\n}).withConfig({\n  componentId: "sc-qj4xo5-10"\n})(function (_ref6) {\n  var theme = _ref6.theme,\n      size = _ref6.size,\n      color = _ref6.color,\n      stroke = _ref6.stroke,\n      value = _ref6.value;\n  return Ce(["border-radius:2px;border:", ";box-sizing:border-box;width:", "px;height:", "px;background-color:", ";user-select:none;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all 300ms;margin-bottom:8px;background:", ";input{display:none;}"], "1px solid ".concat(stroke), size, size, color, value === \'rgba(0,0,0,0)\' && "repeating-conic-gradient(".concat(theme.palette[Color.LinkPrimary], " 0% 25%, transparent 0% 50%) 50% / 8px 8px"));\n});\nvar ColorItemsContainer = /*#__PURE__*/styled_components_browser_esm.div.withConfig({\n  componentId: "sc-qj4xo5-11"\n})(["display:flex;flex-wrap:wrap;align-content:space-between;margin-top:14px;margin-bottom:12px;margin-left:12px;& > .item{margin-right:8px;display:flex;justify-content:center;}"]);\nvar color_picker_styles_Select = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(color_picker_styles_baseClassName, \'select\')\n}).withConfig({\n  componentId: "sc-qj4xo5-12"\n})(function (_ref7) {\n  var value = _ref7.value;\n  return Ce(["width:", ";"], value === \'rgb\' ? \'25%\' : \'35%\');\n});\nvar color_picker_styles_Styled = applyDisplayNames({\n  ColorPickerWrapper: ColorPickerWrapper,\n  RangePickerWrapper: RangePickerWrapper,\n  WhiteGradient: WhiteGradient,\n  BlackGradient: BlackGradient,\n  ColorPointer: ColorPointer,\n  BarWrapper: BarWrapper,\n  Bar: Bar,\n  BarColorStop: BarColorStop,\n  ColorPickerAction: ColorPickerAction,\n  ColorPickerIcon: ColorPickerIcon,\n  ColorItemsContainer: ColorItemsContainer,\n  ColorItemWrapper: ColorItemWrapper,\n  Select: color_picker_styles_Select\n});\n/* harmony default export */ const color_picker_styles = (color_picker_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/color-picker/color-item.component.js\n/* eslint-disable import/no-unresolved */\n\n\n\n\n\nvar ColorItem = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      checked = _ref.checked,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size;\n  var checkIconColor = (0,react.useMemo)(function () {\n    if (value === \'#ffffff\' || value === \'rgba(0,0,0,0)\') {\n      return \'black\';\n    }\n\n    return \'white\';\n  }, [value]);\n  return /*#__PURE__*/react.createElement(color_picker_styles.ColorItemWrapper, {\n    ref: ref,\n    color: value,\n    size: size,\n    stroke: value === \'rgba(0,0,0,0)\' ? \'#a8a8a8\' : \'#E9EEF2\',\n    value: value\n  }, /*#__PURE__*/react.createElement("input", {\n    type: "radio",\n    value: value,\n    checked: checked,\n    onChange: onChange\n  }), checked && /*#__PURE__*/react.createElement(tick, {\n    color: checkIconColor\n  }));\n});\nColorItem.defaultProps = {};\nColorItem.propTypes = {\n  value: (prop_types_default()).string.isRequired,\n  checked: (prop_types_default()).bool,\n  onChange: (prop_types_default()).func.isRequired,\n  size: (prop_types_default()).number\n};\n/* harmony default export */ const color_item_component = (ColorItem);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/color-picker/color-picker.component.js\n\n\n\n\n\nvar color_picker_component_excluded = ["defaultColor", "onChange", "pinnedColors", "showTransparentColor"];\n\nfunction color_picker_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction color_picker_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { color_picker_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { color_picker_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\n\n/* eslint-disable no-constant-condition */\n\n/* eslint-disable react/no-array-index-key */\n\n/* eslint-disable sonarjs/cognitive-complexity */\n\n/* eslint-disable id-length */\n\n\n\n\n\n\n\n\n\n\nvar transparentColor = [\'rgba(0,0,0,0)\'];\nvar transparentColorHex = \'#00000000\';\nvar colorsHuesCount = 360;\nvar ColorPicker = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$defaultColor = _ref.defaultColor,\n      defaultColor = _ref$defaultColor === void 0 ? \'#000000\' : _ref$defaultColor,\n      onChange = _ref.onChange,\n      _ref$pinnedColors = _ref.pinnedColors,\n      pinnedColors = _ref$pinnedColors === void 0 ? [] : _ref$pinnedColors,\n      _ref$showTransparentC = _ref.showTransparentColor,\n      showTransparentColor = _ref$showTransparentC === void 0 ? false : _ref$showTransparentC,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, color_picker_component_excluded);\n\n  var showedColors = showTransparentColor ? transparentColor.concat(pinnedColors) : pinnedColors;\n\n  var isTransparentColor = function isTransparentColor(color) {\n    return color === transparentColorHex || color === transparentColor[0];\n  };\n\n  var _useState = (0,react.useState)({\n    color: \'#ff0000\',\n    pointerLeft: 0\n  }),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      bar = _useState2[0],\n      setBar = _useState2[1];\n\n  var _useState3 = (0,react.useState)({\n    color: isTransparentColor(defaultColor) ? \'#00000000\' : colorToHex(defaultColor) || \'#000000\',\n    pointer: {\n      left: 0,\n      top: 0\n    }\n  }),\n      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n      rangePicker = _useState4[0],\n      setRangePicker = _useState4[1];\n\n  var _useState5 = (0,react.useState)(showedColors),\n      _useState6 = (0,slicedToArray/* default */.Z)(_useState5, 2),\n      localPinnedColors = _useState6[0],\n      setLocalPinnedColors = _useState6[1];\n\n  var _useState7 = (0,react.useState)(\'hex\'),\n      _useState8 = (0,slicedToArray/* default */.Z)(_useState7, 2),\n      inputType = _useState8[0],\n      setInputType = _useState8[1];\n\n  var _useState9 = (0,react.useState)([]),\n      _useState10 = (0,slicedToArray/* default */.Z)(_useState9, 2),\n      rgbColorValue = _useState10[0],\n      setRgbColorValue = _useState10[1];\n\n  var _useState11 = (0,react.useState)(colorToHex(rangePicker.color)),\n      _useState12 = (0,slicedToArray/* default */.Z)(_useState11, 2),\n      hexInputValue = _useState12[0],\n      setHexInputValue = _useState12[1];\n\n  var _useState13 = (0,react.useState)(null),\n      _useState14 = (0,slicedToArray/* default */.Z)(_useState13, 2),\n      barRef = _useState14[0],\n      setBarRef = _useState14[1];\n\n  var _useState15 = (0,react.useState)(null),\n      _useState16 = (0,slicedToArray/* default */.Z)(_useState15, 2),\n      rangePickerRef = _useState16[0],\n      setRangePickerRef = _useState16[1];\n\n  var isColorChecked = function isColorChecked(checkedColor) {\n    if (checkedColor === transparentColor[0] && rangePicker.color === transparentColorHex) {\n      return true;\n    }\n\n    return checkedColor === rangePicker.color;\n  };\n\n  var filterTransparentColor = function filterTransparentColor(colors) {\n    return colors.filter(function (item) {\n      return item !== \'rgba(0,0,0,0)\';\n    });\n  };\n\n  var getRgbColor = function getRgbColor(color) {\n    return isTransparentColor(color) ? transparentColor[0] : "rgb(".concat(hexToRgb(color).join(\', \'), ")");\n  };\n\n  var handlePinnedColors = function handlePinnedColors(hexColor, type) {\n    if (type === \'add\') {\n      var newLocalPinnedColors = [].concat((0,toConsumableArray/* default */.Z)(localPinnedColors), [hexColor]);\n      setLocalPinnedColors(newLocalPinnedColors);\n\n      if (typeof onChange === \'function\') {\n        onChange(rangePicker.color, getRgbColor(hexColor), filterTransparentColor(newLocalPinnedColors));\n      }\n    } else {\n      var _newLocalPinnedColors = localPinnedColors.filter(function (item) {\n        return item !== rangePicker.color;\n      });\n\n      setLocalPinnedColors(_newLocalPinnedColors);\n\n      if (typeof onChange === \'function\') {\n        onChange(rangePicker.color, getRgbColor(hexColor), filterTransparentColor(_newLocalPinnedColors));\n      }\n    }\n  };\n\n  var changeBarPosByColor = function changeBarPosByColor(color) {\n    if (barRef !== null) {\n      var _ref2 = get_elem_document_coords_getElemDocumentCoords(barRef),\n          left = _ref2.left;\n\n      var _colorToHsl = colorToHsl(color || rangePicker.color),\n          _colorToHsl2 = (0,slicedToArray/* default */.Z)(_colorToHsl, 1),\n          h = _colorToHsl2[0];\n\n      var targetColorElem = barRef.querySelector("[data-hue=\'".concat(h, "\']"));\n\n      if (targetColorElem !== null) {\n        var targetColorRgb = targetColorElem.style.backgroundColor || bar.color;\n        setBar({\n          color: targetColorRgb,\n          pointerLeft: get_elem_document_coords_getElemDocumentCoords(targetColorElem).left - left || bar.pointerLeft\n        });\n      }\n    }\n  };\n\n  var handleRgbInput = function handleRgbInput(value, index) {\n    var rgbArr = rgbColorValue;\n    rgbArr[index] = value;\n    var newHexColor = rgbToHex.apply(void 0, (0,toConsumableArray/* default */.Z)(rgbArr));\n\n    if (value > 255 || Number.isNaN(value)) {\n      return;\n    }\n\n    setRgbColorValue((0,toConsumableArray/* default */.Z)(rgbArr));\n\n    if (validateHex(newHexColor)) {\n      setRangePicker(color_picker_component_objectSpread(color_picker_component_objectSpread({}, rangePicker), {}, {\n        color: newHexColor\n      }));\n      changeBarPosByColor(newHexColor);\n    }\n  };\n\n  var updateRgb = function updateRgb(color) {\n    if (color.includes(\'rgb\')) {\n      setRgbColorValue(rgbStringToArray(color));\n    } else {\n      setRgbColorValue(hexToRgb(color));\n    }\n  };\n\n  var getHexColor = function getHexColor(color) {\n    return isTransparentColor(color) ? transparentColorHex : color;\n  };\n\n  var changeRangePickerPointerPosByColor = function changeRangePickerPointerPosByColor(color) {\n    if (rangePickerRef !== null) {\n      var _ref3 = get_elem_document_coords_getElemDocumentCoords(rangePickerRef),\n          width = _ref3.width,\n          height = _ref3.height;\n\n      var colorHsl = colorToHsl(color);\n      var colorHsv = hslToHsv(colorHsl[0], colorHsl[1] / 100, colorHsl[2] / 100);\n      var left = map_number_mapNumber(colorHsv[1], 0, 100, 0, width);\n      var top = height - map_number_mapNumber(colorHsv[2], 0, 100, 0, height);\n      setRangePicker({\n        color: getHexColor(color),\n        pointer: {\n          left: left,\n          top: top\n        }\n      });\n      changeBarPosByColor(color);\n      updateRgb(color);\n\n      if (typeof onChange === \'function\') {\n        onChange(getHexColor(color), getRgbColor(color), filterTransparentColor(localPinnedColors));\n      }\n    }\n  };\n\n  var changeRangePickerColorByPosition = function changeRangePickerColorByPosition(left, top, barColor) {\n    if (rangePickerRef !== null) {\n      var _ref4 = get_elem_document_coords_getElemDocumentCoords(rangePickerRef),\n          width = _ref4.width,\n          height = _ref4.height;\n\n      var _colorToHsl3 = colorToHsl(barColor),\n          _colorToHsl4 = (0,slicedToArray/* default */.Z)(_colorToHsl3, 1),\n          barColorHue = _colorToHsl4[0];\n\n      var restrictedLeft = restrict_number_restrictNumber(left, 0, width) || 0;\n      var restrictedTop = restrict_number_restrictNumber(top, 0, height) || 0;\n      var hsl = hsvToHsl(barColorHue, restrictedLeft / width, (height - restrictedTop) / height);\n      var hexColor = hslToHex(hsl[0], hsl[1], hsl[2]);\n      setRangePicker({\n        color: hexColor,\n        pointer: {\n          left: restrictedLeft,\n          top: restrictedTop\n        }\n      });\n\n      if (typeof onChange === \'function\') {\n        onChange(hexColor, "rgb(".concat(hexToRgb(hexColor).join(\', \'), ")"), filterTransparentColor(localPinnedColors));\n      }\n    }\n  };\n\n  var changeBarColorByPosition = function changeBarColorByPosition(pointerLeft) {\n    var barElem = barRef;\n\n    if (barElem !== null) {\n      var _ref5 = get_elem_document_coords_getElemDocumentCoords(barElem),\n          width = _ref5.width;\n\n      var mappedPointerLeft = restrict_number_restrictNumber(Math.round(map_number_mapNumber(pointerLeft, 0, width, 0, colorsHuesCount)), 0, colorsHuesCount);\n      var targetColorElem = barElem.querySelector("[data-hue=\'".concat(mappedPointerLeft, "\']"));\n      var targetColorRgb = targetColorElem.style.backgroundColor;\n      setBar({\n        color: targetColorRgb,\n        pointerLeft: restrict_number_restrictNumber(pointerLeft, 0, width)\n      });\n      return targetColorRgb;\n    }\n\n    return bar.color;\n  };\n\n  var updateBarColor = function updateBarColor(e) {\n    var barElem = barRef;\n\n    if (barElem !== null) {\n      var _e$touches;\n\n      var _ref6 = get_elem_document_coords_getElemDocumentCoords(barElem),\n          left = _ref6.left;\n\n      var pointerEvent = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n      var barColor = changeBarColorByPosition(pointerEvent.pageX - left);\n      changeRangePickerColorByPosition(rangePicker.pointer.left, rangePicker.pointer.top, barColor);\n    }\n  };\n\n  var updateRangePickerColor = function updateRangePickerColor(e) {\n    var rangePickerElem = rangePickerRef;\n\n    if (rangePickerElem !== null) {\n      var _ref7 = get_elem_document_coords_getElemDocumentCoords(rangePickerElem),\n          left = _ref7.left,\n          top = _ref7.top,\n          height = _ref7.height,\n          width = _ref7.width;\n\n      var pointerLeft = e ? restrict_number_restrictNumber(e.pageX - left, 0, width) : rangePicker.pointer.left || 0;\n      var pointerTop = e ? restrict_number_restrictNumber(e.pageY - top, 0, height) : rangePicker.pointer.left || 0;\n      changeRangePickerColorByPosition(pointerLeft, pointerTop, bar.color);\n    }\n  };\n\n  var moveBarPointerByArrows = function moveBarPointerByArrows(e) {\n    if (e.key !== \'ArrowLeft\' && e.key !== \'ArrowRight\') {\n      return;\n    }\n\n    changeBarColorByPosition(bar.pointerLeft + (e.key === \'ArrowLeft\' ? -1 : 1));\n  };\n\n  var moveRangePickerPointerByArrows = function moveRangePickerPointerByArrows(e) {\n    var currentDirection = 0;\n\n    if (e.key === \'ArrowLeft\' || e.key === \'ArrowUp\') {\n      currentDirection = -1;\n    } else if (e.key === \'ArrowRight\' || e.key === \'ArrowDown\') {\n      currentDirection = 1;\n    }\n\n    if (currentDirection) {\n      changeRangePickerColorByPosition((rangePicker.pointer.left || 0) + ([\'ArrowLeft\', \'ArrowRight\'].includes(e.key) ? currentDirection : 0), (rangePicker.pointer.top || 0) + ([\'ArrowUp\', \'ArrowDown\'].includes(e.key) ? currentDirection : 0), bar.color);\n    }\n  };\n\n  var validateHexAndUpdate = function validateHexAndUpdate(color) {\n    var testHex = validateHex(color);\n\n    if (testHex) {\n      changeRangePickerPointerPosByColor(color);\n    }\n\n    setHexInputValue(color);\n  };\n\n  (0,react.useEffect)(function () {\n    changeBarPosByColor(rangePicker.color);\n    changeRangePickerPointerPosByColor(rangePicker.color);\n  }, [barRef]);\n  (0,react.useEffect)(function () {\n    setHexInputValue(rangePicker.color);\n    updateRgb(rangePicker.color);\n  }, [rangePicker.color]);\n  var barColors = (0,react.useMemo)(function () {\n    return (0,toConsumableArray/* default */.Z)(new Array(colorsHuesCount + 1)).map(function (_, h) {\n      return /*#__PURE__*/react.createElement(color_picker_styles.BarColorStop, {\n        key: h,\n        $color: "hsl(".concat(h, ", 100%, 50%)"),\n        "data-hue": h\n      });\n    });\n  }, []);\n  var barPointSliding = use_drag(updateBarColor, updateBarColor, null);\n  var rangePickerPointSliding = use_drag(updateRangePickerColor, updateRangePickerColor, null);\n  return /*#__PURE__*/react.createElement(color_picker_styles.ColorPickerWrapper, (0,esm_extends/* default */.Z)({\n    ref: ref\n  }, rest), /*#__PURE__*/react.createElement(color_picker_styles.RangePickerWrapper, (0,esm_extends/* default */.Z)({\n    ref: setRangePickerRef,\n    color: bar.color\n  }, rangePickerPointSliding), /*#__PURE__*/react.createElement(color_picker_styles.WhiteGradient, null), /*#__PURE__*/react.createElement(color_picker_styles.BlackGradient, null), /*#__PURE__*/react.createElement(color_picker_styles.ColorPointer, {\n    tabIndex: -1,\n    left: rangePicker.pointer.left || 0,\n    top: rangePicker.pointer.top || 0,\n    onKeyDown: moveRangePickerPointerByArrows,\n    considerTopWidth: true\n  })), /*#__PURE__*/react.createElement(color_picker_styles.BarWrapper, barPointSliding, /*#__PURE__*/react.createElement(color_picker_styles.Bar, {\n    ref: setBarRef\n  }, /*#__PURE__*/react.createElement("tbody", null, /*#__PURE__*/react.createElement("tr", null, barColors))), /*#__PURE__*/react.createElement(color_picker_styles.ColorPointer, {\n    tabIndex: -1,\n    left: bar.pointerLeft,\n    onKeyDown: moveBarPointerByArrows,\n    considerTopWidth: false,\n    style: {\n      top: -3\n    }\n  })), /*#__PURE__*/react.createElement(color_picker_styles.ColorItemsContainer, null, localPinnedColors.map(function (color) {\n    return /*#__PURE__*/react.createElement("div", {\n      className: "item",\n      key: color\n    }, /*#__PURE__*/react.createElement(color_item_component, {\n      value: color,\n      checked: isColorChecked(color),\n      onChange: function onChange(ev) {\n        return changeRangePickerPointerPosByColor(ev.target.value);\n      }\n    }));\n  })), /*#__PURE__*/react.createElement(color_picker_styles.ColorPickerAction, null, /*#__PURE__*/react.createElement(color_picker_styles.Select, {\n    value: inputType\n  }, /*#__PURE__*/react.createElement(select_component, {\n    size: "sm",\n    value: inputType,\n    MenuProps: {\n      zIndex: 11112\n    },\n    onChange: function onChange(ev) {\n      return setInputType(ev);\n    },\n    fullWidth: true\n  }, /*#__PURE__*/react.createElement(menu_item_component, {\n    value: "hex"\n  }, "Hex"), /*#__PURE__*/react.createElement(menu_item_component, {\n    value: "rgb"\n  }, "RGB"))), inputType === \'hex\' ? /*#__PURE__*/react.createElement(input_component, {\n    size: "sm",\n    error: !/^#([\\da-f]{3}){1,2}$/i.test(rangePicker.color),\n    value: hexInputValue,\n    onChange: function onChange(e) {\n      return validateHexAndUpdate(e.target.value);\n    },\n    style: {\n      width: \'45%\'\n    }\n  }) : rgbColorValue.map(function (rgb, index) {\n    return /*#__PURE__*/react.createElement(input_component // eslint-disable-next-line react/no-array-index-key\n    , {\n      key: index,\n      size: "sm",\n      value: rgb,\n      onChange: function onChange(e) {\n        var _e$target;\n\n        return handleRgbInput(Number((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value), index);\n      },\n      style: {\n        width: \'20%\'\n      }\n    });\n  }), rangePicker.color !== transparentColorHex && /*#__PURE__*/react.createElement(color_picker_styles.ColorPickerIcon, {\n    onClick: function onClick() {\n      return localPinnedColors.some(function (checkedColor) {\n        return isColorChecked(checkedColor);\n      }) ? handlePinnedColors(rangePicker.color, \'delete\') : handlePinnedColors(rangePicker.color, \'add\');\n    }\n  }, localPinnedColors.some(function (checkedColor) {\n    return isColorChecked(checkedColor);\n  }) ? /*#__PURE__*/react.createElement(DeleteOutline, null) : /*#__PURE__*/react.createElement(PinOutline, null))));\n});\nColorPicker.defaultProps = {\n  defaultColor: \'#000000\',\n  pinnedColors: [],\n  showTransparentColor: false\n};\nColorPicker.propTypes = {\n  defaultColor: (prop_types_default()).string,\n  onChange: (prop_types_default()).func,\n  // eslint-disable-next-line react/forbid-prop-types\n  pinnedColors: (prop_types_default()).array,\n  showTransparentColor: (prop_types_default()).bool\n};\n/* harmony default export */ const color_picker_component = (ColorPicker);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/ColorInput/ColorInput.styled.js\nvar StyledPickerTrigger=styled_components_browser_esm.div.attrs(function(a){var b=a.$color;return{style:{background:"rgba(0,0,0,0)"===b?"repeating-conic-gradient(#5d6d7e 0% 25%, transparent 0% 50%) 50% / 8px 8px":b}}}).withConfig({componentId:"sc-zmv0gj-0"})(["background:",";border-radius:2px;width:24px;height:24px;border:2px solid ",";cursor:pointer;box-sizing:border-box;"],function(a){var b=a.theme;return b.palette["icons-primary"]},function(a){var b=a.theme;return b.palette["borders-strong"]}),StyledColorPicker=styled_components_browser_esm(color_picker_component).withConfig({componentId:"sc-zmv0gj-1"})(["max-width:212px;"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/ColorInput/index.js\nvar pinnedColorsKey="FIE_pinnedColors",ColorInput=function(a){var b,c=a.position,d=void 0===c?"top":c,e=a.onChange,f=a.color,g=hooks_useStore(),h=g.selectionsIds,i=void 0===h?[]:h,j=g.config.annotationsCommon,k=void 0===j?{}:j,l=g.dispatch,m=g.latestColor,n=(0,react.useState)(),o=(0,slicedToArray/* default */.Z)(n,2),p=o[0],q=o[1],r=(0,react.useState)(function(){return m||f||k.fill}),s=(0,slicedToArray/* default */.Z)(r,2),t=s[0],u=s[1],v=(0,react.useState)(null!==(b=window)&&void 0!==b&&b.localStorage?JSON.parse(localStorage.getItem(pinnedColorsKey)||"[]"):[]),w=(0,slicedToArray/* default */.Z)(v,2),x=w[0],y=w[1],z=function(a){var b;if(null!==(b=window)&&void 0!==b&&b.localStorage){var c=window.localStorage.getItem(pinnedColorsKey);if(JSON.stringify(a)!==c){var d=a.slice(-9);window.localStorage.setItem(pinnedColorsKey,JSON.stringify(d)),y(d)}}},A=function(a){q(p?null:a.currentTarget)};return (0,react.useEffect)(function(){var a=0===i.length&&m||f;u(a),e(a)},[f,i]),react.createElement(react.Fragment,null,react.createElement(StyledPickerTrigger,{className:"FIE_color-picker-triggerer",onClick:A,$color:t,onChange:e}),react.createElement(popper_component,{className:"FIE_color-picker",anchorEl:p,open:!!p,position:d,onClick:A,overlay:!0,zIndex:11111},react.createElement(StyledColorPicker,{onChange:function changeColor(a,b,c){u(b),e(b),z(c),m!==b&&l({type:SET_LATEST_COLOR,payload:{latestColor:b}})},defaultColor:t,pinnedColors:x,showTransparentColor:!0})))};ColorInput.defaultProps={position:"top",color:void 0};/* harmony default export */ const common_ColorInput = (ColorInput);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/AnnotationOptions/StrokeFields.js\nvar StrokeFields_MIN_PERCENTANGE=0,StrokeFields_MAX_PERCENTANGE=100,StrokeFields=function(a){var b=a.annotation,c=a.updateAnnotation,d=a.t,e=b.stroke,f=b.strokeWidth;return react.createElement(StyledSpacedOptionFields,null,react.createElement(label_component,null,d("stroke")),react.createElement(common_Slider,{annotation:"px",onChange:function changeStrokeWidth(a){c({strokeWidth:utils_restrictNumber(a,StrokeFields_MIN_PERCENTANGE,StrokeFields_MAX_PERCENTANGE)})},value:f}),react.createElement(common_ColorInput,{color:e,onChange:function changeStrokeColor(a){c({stroke:a})}}))};/* harmony default export */ const AnnotationOptions_StrokeFields = (StrokeFields);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/AnnotationOptions/ShadowFields.js\nvar ShadowFields=function(a){var b=a.annotation,c=a.updateAnnotation,d=a.t,e=b.shadowOffsetX,f=b.shadowOffsetY,g=b.shadowBlur,h=b.shadowColor,i=b.shadowOpacity,j=function(a,b){var d=2<arguments.length&&arguments[2]!==void 0?arguments[2]:0,e=3<arguments.length&&arguments[3]!==void 0?arguments[3]:100;c((0,defineProperty/* default */.Z)({},a,utils_restrictNumber(b,d,e)))};return react.createElement(StyledSpacedOptionFields,null,react.createElement(StyledHeadline,null,d("shadow")),react.createElement(StyledTwoColumnsContainer,null,react.createElement(StyledColumn,null,react.createElement(label_component,null,d("horizontal")),react.createElement(common_Slider,{annotation:"px",min:-100,max:100,onChange:function onChange(a){return j("shadowOffsetX",a,-100,100)},value:e||0,hideTrack:!0})),react.createElement(StyledColumn,null,react.createElement(label_component,null,d("vertical")),react.createElement(common_Slider,{annotation:"px",min:-100,max:100,onChange:function onChange(a){return j("shadowOffsetY",a,-100,100)},value:f||0,hideTrack:!0}))),react.createElement(StyledTwoColumnsContainer,null,react.createElement(StyledColumn,null,react.createElement(label_component,null,d("blur")),react.createElement(common_Slider,{annotation:"%",onChange:function onChange(a){return j("shadowBlur",a)},value:g})),react.createElement(StyledColumn,null,react.createElement(label_component,null,d("opacity")),react.createElement(common_Slider,{annotation:"%",onChange:function onChange(a){return j("shadowOpacity",a/100,0,1)},value:Math.round(100*i)}))),react.createElement(common_ColorInput,{color:h,onChange:function changeShadowColor(a){c({shadowColor:a})}}))};/* harmony default export */ const AnnotationOptions_ShadowFields = (ShadowFields);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/arrow-right-alt.js\n\n\nvar arrow_right_alt_excluded = ["color", "size"];\n\n\nvar ArrowRightAlt = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, arrow_right_alt_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M49.7025 23.7268L49.7008 23.725L39.4953 13.5687C38.7308 12.8079 37.4941 12.8107 36.7331 13.5754C35.9722 14.3399 35.9751 15.5766 36.7397 16.3375L43.5916 23.1562H2.22852C1.1498 23.1562 0.275391 24.0307 0.275391 25.1094C0.275391 26.1881 1.1498 27.0625 2.22852 27.0625H43.5915L36.7397 33.8812C35.9752 34.6422 35.9723 35.8788 36.7332 36.6433C37.4942 37.4081 38.731 37.4107 39.4954 36.65L49.7009 26.4937L49.7026 26.4919C50.4676 25.7284 50.4651 24.4878 49.7025 23.7268Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const arrow_right_alt = (ArrowRightAlt);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/point.js\n\n\nvar point_excluded = ["color", "size"];\n\n\nvar Point = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, point_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("circle", {\n    cx: "25",\n    cy: "25",\n    r: "8.33333",\n    fill: color\n  }));\n});\n/* harmony default export */ const point = (Point);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/mapPositionStringToPoint.js\nvar mapPositionStringToPoint=function(a,b,c){var d,e=a.width,f=a.height,g=a.scaleX,h=void 0===g?1:g,i=a.scaleY,j=void 0===i?1:i,k=a.rotation,l=void 0===k?0:k,m=a.padding,n=void 0===m?0:m,o=a.radius,p=a.radiusX,q=a.radiusY,r=utils_getSizeAfterRotation((e||2*(o||p))*h,(f||2*(o||q))*j,l),s=b.attrs,t=s.clipWidth,u=s.clipHeight,v=s.clipX,w=void 0===v?0:v,x=s.clipY,y=void 0===x?0:x,z={left:w+r.offsetLeft+n,center:w+t/2-(r.width/2-r.offsetLeft)+n,right:w+t-r.width-n+r.offsetLeft},A={top:y+r.offsetTop+n,middle:y+u/2-(r.height/2-r.offsetTop)+n,bottom:y+u-r.height-n+r.offsetTop},B=(d={},(0,defineProperty/* default */.Z)(d,POSITIONS.TOP_LEFT,function(){return{x:z.left,y:A.top}}),(0,defineProperty/* default */.Z)(d,POSITIONS.TOP_CENTER,function(){return{x:z.center,y:A.top}}),(0,defineProperty/* default */.Z)(d,POSITIONS.TOP_RIGHT,function(){return{x:z.right,y:A.top}}),(0,defineProperty/* default */.Z)(d,POSITIONS.MIDDLE_LEFT,function(){return{x:z.left,y:A.middle}}),(0,defineProperty/* default */.Z)(d,POSITIONS.MIDDLE_CENTER,function(){return{x:z.center,y:A.middle}}),(0,defineProperty/* default */.Z)(d,POSITIONS.MIDDLE_RIGHT,function(){return{x:z.right,y:A.middle}}),(0,defineProperty/* default */.Z)(d,POSITIONS.BOTTOM_LEFT,function(){return{x:z.left,y:A.bottom}}),(0,defineProperty/* default */.Z)(d,POSITIONS.BOTTOM_CENTER,function(){return{x:z.center,y:A.bottom}}),(0,defineProperty/* default */.Z)(d,POSITIONS.BOTTOM_RIGHT,function(){return{x:z.right,y:A.bottom}}),d);return B[c]()};/* harmony default export */ const utils_mapPositionStringToPoint = (mapPositionStringToPoint);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/AnnotationOptions/AnnotationOptions.constants.js\nvar _posCssRotateDegFromR;var AVAILABLE_POSITIONS=Object.values(POSITIONS);var posCssRotateDegFromRightSide=(_posCssRotateDegFromR={},(0,defineProperty/* default */.Z)(_posCssRotateDegFromR,POSITIONS.TOP_LEFT,-145),(0,defineProperty/* default */.Z)(_posCssRotateDegFromR,POSITIONS.TOP_CENTER,-90),(0,defineProperty/* default */.Z)(_posCssRotateDegFromR,POSITIONS.TOP_RIGHT,-45),(0,defineProperty/* default */.Z)(_posCssRotateDegFromR,POSITIONS.MIDDLE_LEFT,180),(0,defineProperty/* default */.Z)(_posCssRotateDegFromR,POSITIONS.MIDDLE_CENTER,0),(0,defineProperty/* default */.Z)(_posCssRotateDegFromR,POSITIONS.MIDDLE_RIGHT,0),(0,defineProperty/* default */.Z)(_posCssRotateDegFromR,POSITIONS.BOTTOM_LEFT,135),(0,defineProperty/* default */.Z)(_posCssRotateDegFromR,POSITIONS.BOTTOM_CENTER,90),(0,defineProperty/* default */.Z)(_posCssRotateDegFromR,POSITIONS.BOTTOM_RIGHT,45),_posCssRotateDegFromR);var POPPABLE_OPTIONS={OPACITY:"opacity",STROKE:"stroke",SHADOW:"shadow",POSITION:"position"};\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/AnnotationOptions/PositionFields.js\nvar PositionFields=function(a){var b=a.annotation,c=a.updateAnnotation,d=hooks_useStore(),e=d.designLayer,f=function(a){c(utils_mapPositionStringToPoint(b,e,a))},g=AVAILABLE_POSITIONS.length;return AVAILABLE_POSITIONS.map(function(a,b){return react.createElement(react.Fragment,{key:a},react.createElement(StyledIconWrapper,{onClick:function onClick(){return f(a)},secondaryIconColor:!0,addThinBorder:!0,noMargin:!0},a===POSITIONS.MIDDLE_CENTER?react.createElement(point,null):react.createElement(arrow_right_alt,{style:{transform:"rotate(".concat(posCssRotateDegFromRightSide[a],"deg)")}})),0==(b+1)%3&&b+1!==g&&react.createElement("div",null))})};/* harmony default export */ const AnnotationOptions_PositionFields = (PositionFields);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/AnnotationOptions/index.js\nvar AnnotationOptions_excluded=["children","morePoppableOptionsPrepended","moreOptionsPopupComponentsObj","morePoppableOptionsAppended","annotation","updateAnnotation","hideFillOption","hidePositionField","className"];function AnnotationOptions_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function AnnotationOptions_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?AnnotationOptions_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):AnnotationOptions_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var AnnotationOptions=function(a){var b=a.children,c=a.morePoppableOptionsPrepended,d=a.moreOptionsPopupComponentsObj,e=a.morePoppableOptionsAppended,f=a.annotation,g=a.updateAnnotation,h=a.hideFillOption,i=a.hidePositionField,j=a.className,k=(0,objectWithoutProperties/* default */.Z)(a,AnnotationOptions_excluded),l=(0,react.useState)(null),m=(0,slicedToArray/* default */.Z)(l,2),n=m[0],o=m[1],p=(0,react.useState)(null),q=(0,slicedToArray/* default */.Z)(p,2),r=q[0],s=q[1],u=hooks_useStore(),v=u.config.useCloudimage,w=u.t,t=(0,react.useMemo)(function(){return[].concat((0,toConsumableArray/* default */.Z)(c),[{titleKey:"opacity",name:POPPABLE_OPTIONS.OPACITY,Icon:transparency}],(0,toConsumableArray/* default */.Z)(v?[]:[{titleKey:"stroke",name:POPPABLE_OPTIONS.STROKE,Icon:stroke},{titleKey:"shadow",name:POPPABLE_OPTIONS.SHADOW,Icon:shadow}]),[i?void 0:{titleKey:"position",name:POPPABLE_OPTIONS.POSITION,Icon:position}])},[c]),x=(0,react.useMemo)(function(){var a;return AnnotationOptions_objectSpread(AnnotationOptions_objectSpread({},d),{},(a={},(0,defineProperty/* default */.Z)(a,POPPABLE_OPTIONS.OPACITY,AnnotationOptions_OpacityField),(0,defineProperty/* default */.Z)(a,POPPABLE_OPTIONS.STROKE,AnnotationOptions_StrokeFields),(0,defineProperty/* default */.Z)(a,POPPABLE_OPTIONS.SHADOW,AnnotationOptions_ShadowFields),(0,defineProperty/* default */.Z)(a,POPPABLE_OPTIONS.POSITION,AnnotationOptions_PositionFields),a),e)},[d]),y=(0,react.useCallback)(function(a,b){var c=null===a||void 0===a?void 0:a.currentTarget;o(c),s(b)},[]),z=(0,react.useCallback)(function(a){g({fill:a})},[g]),A=n&&r&&x[r];return react.createElement(StyledOptions,{className:"FIE_annotations-options".concat(j?" ".concat(j):"")},!h&&react.createElement(common_ColorInput,{color:f.fill,onChange:z}),b,t.map(function(a){return a&&react.createElement(StyledIconWrapper,{className:"FIE_annotation-option-triggerer",key:a.name,title:w(a.titleKey),onClick:function onClick(b){return y(b,a.name)}},react.createElement(a.Icon,{size:18}))}),A&&react.createElement(menu_component,{className:"FIE_annotation-option-popup",anchorEl:n,open:!!n,onClose:y,position:"top"},react.createElement(StyledOptionPopupContent,null,react.createElement(A,(0,esm_extends/* default */.Z)({annotation:f,updateAnnotation:g},k)))))};AnnotationOptions.defaultProps={children:void 0,morePoppableOptionsPrepended:[],moreOptionsPopupComponentsObj:{},morePoppableOptionsAppended:[],hideFillOption:!1,hidePositionField:!1,className:void 0};/* harmony default export */ const common_AnnotationOptions = (AnnotationOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Text/TextOptions/TextOptions.styled.js\nvar StyledFontFamilySelect=styled_components_browser_esm(select_component).withConfig({componentId:"sc-1cwdnjz-0"})(["width:88px;margin:0 4px;"]),StyledFontSizeInput=styled_components_browser_esm(input_component).withConfig({componentId:"sc-1cwdnjz-1"})(["width:70px;margin:0 4px;"]);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/align-center.js\n\n\nvar align_center_excluded = ["color", "size"];\n\n\nvar AlignCenter = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, align_center_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M38 1.5C38 0.809644 37.4404 0.25 36.75 0.25H9.25C8.55964 0.25 8 0.809644 8 1.5C8 2.19036 8.55964 2.75 9.25 2.75H36.75C37.4404 2.75 38 2.19036 38 1.5Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 14C45.5 13.3096 44.9404 12.75 44.25 12.75H1.75C1.05964 12.75 0.5 13.3096 0.5 14C0.5 14.6904 1.05964 15.25 1.75 15.25H44.25C44.9404 15.25 45.5 14.6904 45.5 14Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M36.75 25.25C37.4404 25.25 38 25.8096 38 26.5C38 27.1904 37.4404 27.75 36.75 27.75H9.25C8.55964 27.75 8 27.1904 8 26.5C8 25.8096 8.55964 25.25 9.25 25.25H36.75Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const align_center = (AlignCenter);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/spacing.js\n\n\nvar spacing_excluded = ["color", "size"];\n\n\nvar Spacing = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, spacing_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M4.29986 0.991788C4.78802 0.503633 5.57947 0.503633 6.06763 0.991788L9.367 4.29116C9.85516 4.77932 9.85516 5.57077 9.367 6.05893C8.87885 6.54708 8.08739 6.54708 7.59924 6.05893L6.43374 4.89344V34.0829L7.59924 32.9174C8.08739 32.4293 8.87885 32.4293 9.367 32.9174C9.85516 33.4056 9.85516 34.197 9.367 34.6852L6.06763 37.9846C5.8332 38.219 5.51524 38.3507 5.18371 38.3507C4.85217 38.3507 4.53422 38.219 4.29981 37.9845L1.00084 34.6851C0.512712 34.1969 0.512761 33.4055 1.00095 32.9174C1.48913 32.4292 2.28059 32.4293 2.76871 32.9175L3.93374 34.0827V4.89344L2.76825 6.05893C2.2801 6.54708 1.48864 6.54708 1.00049 6.05893C0.51233 5.57077 0.51233 4.77932 1.00049 4.29116L4.29986 0.991788ZM13.1588 8.34109V1.49725H46.3156V8.34102H43.398V7.19776C43.398 5.54595 42.0562 4.20442 40.4047 4.20442H31.8516V26.0992C31.8516 28.1387 33.5088 29.7957 35.5481 29.7957H36.5137V32.4599H23.01V29.7957H23.9756C26.0151 29.7957 27.6721 28.1387 27.6721 26.0992V4.20448H19.0697C17.418 4.20448 16.0763 5.54604 16.0763 7.19783V8.34109H13.1588ZM46.9995 39.7088C47.4877 39.2207 47.4877 38.4292 46.9995 37.9411L43.7001 34.6417C43.212 34.1535 42.4205 34.1535 41.9324 34.6417C41.4442 35.1298 41.4442 35.9213 41.9324 36.4095L43.0979 37.5749L15.0832 37.5749L16.2484 36.4099C16.7366 35.9218 16.7366 35.1303 16.2485 34.6421C15.7604 34.154 14.9689 34.1539 14.4807 34.642L11.1814 37.941C10.9469 38.1754 10.8152 38.4934 10.8152 38.8249C10.8152 39.1564 10.9469 39.4744 11.1813 39.7088L14.4807 43.0082C14.9688 43.4964 15.7603 43.4964 16.2485 43.0082C16.7366 42.5201 16.7366 41.7286 16.2485 41.2404L15.083 40.0749L43.0979 40.0749L41.9324 41.2404C41.4442 41.7286 41.4442 42.5201 41.9324 43.0082C42.4205 43.4964 43.212 43.4964 43.7001 43.0082L46.9995 39.7088Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const spacing = (Spacing);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Text/TextOptions/TextSpacingsFields.js\nvar TextSpacingsFields_MIN_VALUE=0,TextSpacingsFields_MAX_VALUE=100,SLIDER_STEP=1,TextSpacingsFields=function(a){var b=a.annotation,c=a.updateAnnotation,d=a.t,e=b.letterSpacing,f=b.lineHeight,g=function(a,b){c((0,defineProperty/* default */.Z)({},a,utils_restrictNumber(b,TextSpacingsFields_MIN_VALUE,TextSpacingsFields_MAX_VALUE)))};return react.createElement(StyledSpacedOptionFields,null,react.createElement(label_component,null,d("letterSpacing")),react.createElement(common_Slider,{annotation:"px",isActive:!!e,onChange:function onChange(a){return g("letterSpacing",a)},value:e,step:SLIDER_STEP}),react.createElement(label_component,null,d("lineHeight")),react.createElement(common_Slider,{annotation:"px",isActive:!!f,onChange:function onChange(a){return g("lineHeight",a)},value:f,step:SLIDER_STEP}))};/* harmony default export */ const TextOptions_TextSpacingsFields = (TextSpacingsFields);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/align-left.js\n\n\nvar align_left_excluded = ["color", "size"];\n\n\nvar AlignLeft = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, align_left_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M0 1.89453C0 1.20418 0.559644 0.644531 1.25 0.644531H28.75C29.4404 0.644531 30 1.20418 30 1.89453C30 2.58489 29.4404 3.14453 28.75 3.14453H1.25C0.559645 3.14453 0 2.58489 0 1.89453Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M0 14.3945C0 13.7042 0.559644 13.1445 1.25 13.1445H43.75C44.4404 13.1445 45 13.7042 45 14.3945C45 15.0849 44.4404 15.6445 43.75 15.6445H1.25C0.559645 15.6445 0 15.0849 0 14.3945Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M1.25 25.6445C0.559644 25.6445 0 26.2042 0 26.8945C0 27.5849 0.559645 28.1445 1.25 28.1445H28.75C29.4404 28.1445 30 27.5849 30 26.8945C30 26.2042 29.4404 25.6445 28.75 25.6445H1.25Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const align_left = (AlignLeft);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Text/TextOptions/TextAlignmentFields.js\nvar rightAlignmentCssTransform={transform:"scaleX(-1)"},TextAlignmentFields=function(a){var b=a.annotation,c=a.updateAnnotation,d=b.align,e=function(a){c({align:a})};return react.createElement(StyledSpacedOptionFields,null,react.createElement(StyledIconWrapper,{onClick:function onClick(){return e("left")},"aria-selected":"left"===d},react.createElement(align_left,null)),react.createElement(StyledIconWrapper,{onClick:function onClick(){return e("center")},"aria-selected":"center"===d},react.createElement(align_center,null)),react.createElement(StyledIconWrapper,{onClick:function onClick(){return e("right")},"aria-selected":"right"===d},react.createElement(align_left,{style:rightAlignmentCssTransform})))};/* harmony default export */ const TextOptions_TextAlignmentFields = (TextAlignmentFields);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Text/TextOptions/TextOptions.constants.js\nvar _textOptionsPopupComp;var TEXT_ALIGNMENT="text-alignment";var TEXT_SPACINGS="text-spacings";var TEXT_POPPABLE_OPTIONS=[{titleKey:"textAlignment",name:"text-alignment",Icon:align_center},{titleKey:"textSpacings",name:"text-spacings",Icon:spacing}];var textOptionsPopupComponents=(_textOptionsPopupComp={},(0,defineProperty/* default */.Z)(_textOptionsPopupComp,"text-alignment",TextOptions_TextAlignmentFields),(0,defineProperty/* default */.Z)(_textOptionsPopupComp,"text-spacings",TextOptions_TextSpacingsFields),_textOptionsPopupComp);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Text/TextOptions/handleTextChangeArea.js\nvar handleTextChangeArea_textarea,textNode,transformer,editFinishCallback,disableTextEditCallback,handleOutsideClick=function(a){if(a.target!==handleTextChangeArea_textarea){var b=handleTextChangeArea_textarea.value;deactivateTextChange(),editFinishCallback(b)}},deactivateTextChange=function(){handleTextChangeArea_textarea&&handleTextChangeArea_textarea.remove(handleTextChangeArea_textarea),window&&window.removeEventListener("click",handleOutsideClick),textNode&&textNode.show(),transformer&&(transformer.show(),transformer.forceUpdate()),"function"==typeof disableTextEditCallback&&disableTextEditCallback(),textNode=null,handleTextChangeArea_textarea=null,transformer=null},activateTextChange=function(a,b,c,d,e){function f(a){var b=a;b||(b=textNode.placeholder.length*textNode.fontSize());var c=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);(c||k)&&(b=Math.ceil(b));var d=document.documentMode||/Edge/.test(navigator.userAgent);d&&(b+=1),handleTextChangeArea_textarea.style.width="".concat(b,"px")}editFinishCallback=d,disableTextEditCallback=e,transformer=c,textNode=b.findOne("#".concat(a)),textNode.hide(),transformer.hide();var g=textNode.absolutePosition();handleTextChangeArea_textarea=document.createElement("textarea"),b.container().parentNode.appendChild(handleTextChangeArea_textarea),handleTextChangeArea_textarea.value=textNode.text(),handleTextChangeArea_textarea.style.position="absolute",handleTextChangeArea_textarea.style.top="".concat(g.y,"px"),handleTextChangeArea_textarea.style.left="".concat(g.x,"px"),handleTextChangeArea_textarea.style.width="".concat(textNode.width()-2*textNode.padding(),"px"),handleTextChangeArea_textarea.style.height="".concat(textNode.height()-2*textNode.padding()+5,"px"),handleTextChangeArea_textarea.style.maxWidth="".concat(textNode.width()-2*textNode.padding(),"px"),handleTextChangeArea_textarea.style.maxHeight="".concat(textNode.height()-2*textNode.padding()+5,"px"),handleTextChangeArea_textarea.style.fontSize="".concat(textNode.fontSize(),"px"),handleTextChangeArea_textarea.style.border="1px solid rgba(0, 0, 0, 0.5)",handleTextChangeArea_textarea.style.padding="0px",handleTextChangeArea_textarea.style.margin="0px",handleTextChangeArea_textarea.style.overflow="hidden",handleTextChangeArea_textarea.style.background="none",handleTextChangeArea_textarea.style.outline="none",handleTextChangeArea_textarea.style.resize="none",handleTextChangeArea_textarea.style.lineHeight=textNode.lineHeight(),handleTextChangeArea_textarea.style.fontFamily=textNode.fontFamily(),handleTextChangeArea_textarea.style.transformOrigin="left top",handleTextChangeArea_textarea.style.textAlign=textNode.align(),handleTextChangeArea_textarea.style.fontStyle=textNode.fontStyle(),handleTextChangeArea_textarea.style.letterSpacing=textNode.letterSpacing(),handleTextChangeArea_textarea.style.lineHeight=textNode.lineHeight(),handleTextChangeArea_textarea.style.color=textNode.fill();var h=textNode.rotation(),i="";h&&(i+="rotateZ(".concat(h,"deg)"));var j=0,k=-1<navigator.userAgent.toLowerCase().indexOf("firefox");k&&(j+=2+Math.round(textNode.fontSize()/20)),i+="translateY(-".concat(j,"px)"),handleTextChangeArea_textarea.style.transform=i,handleTextChangeArea_textarea.style.height="auto",handleTextChangeArea_textarea.style.height="".concat(handleTextChangeArea_textarea.scrollHeight+3,"px"),handleTextChangeArea_textarea.focus(),handleTextChangeArea_textarea.addEventListener("keydown",function(a){if("Enter"===a.key&&!a.shiftKey){var b=handleTextChangeArea_textarea.value;deactivateTextChange(),editFinishCallback(b)}"Escape"===a.key&&deactivateTextChange()}),handleTextChangeArea_textarea.addEventListener("keydown",function(a){if("Enter"!==a.key&&"Escape"!==a.key){var b=textNode.getAbsoluteScale().x;f(textNode.width()*b),handleTextChangeArea_textarea.style.height="auto",handleTextChangeArea_textarea.style.height="".concat(handleTextChangeArea_textarea.scrollHeight+textNode.fontSize(),"px")}}),window&&setTimeout(function(){window.addEventListener("click",handleOutsideClick)})};\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Text/TextOptions/TextControls.js\nvar TextControls=function(a){var b=a.text,c=a.saveText,d=a.children,e=hooks_useStore(),f=e.dispatch,g=e.textIdOfEditableContent,h=e.designLayer,i=e.t,j=e.config,k=j.useCloudimage,l=j[TOOLS_IDS.TEXT],m=l.fonts,n=void 0===m?[]:m,o=l.onFontChange,p=(0,react.useCallback)(function(a){var b=a.target,d=b.name,e=b.value,f=b.type;c(function(a){return (0,defineProperty/* default */.Z)({id:a.id},d,"number"===f?utils_restrictNumber(e,1,500):e)})},[c]),q=(0,react.useCallback)(function(a){if(p({target:{name:"fontFamily",value:a}}),b.fontFamily!==a&&"function"==typeof o){var c=h.draw.bind(h);o(a,c)}},[p,b,h]),r=(0,react.useCallback)(function(a){var c,d=(null===(c=b.fontStyle)||void 0===c?void 0:c.replace("normal","").split(" "))||[];0<Object.keys(d).length&&d.includes(a)?d=d.filter(function(b){return b!==a}):d.push(a),p({target:{name:"fontStyle",value:d.join(" ").trim()||"normal"}})},[b]),s=(0,react.useCallback)(function(){f({type:ENABLE_TEXT_CONTENT_EDIT,payload:{textIdOfEditableContent:null}})},[]),t=(0,react.useCallback)(function(a){p({target:{name:"text",value:a}}),s()},[]);return (0,react.useEffect)(function(){var a;if(g&&b.id===g){var c=h.getStage(),d=(0,slicedToArray/* default */.Z)(c.findOne("#".concat(TRANSFORMERS_LAYER_ID)).children,1);a=d[0],activateTextChange(g,c,a,t,s)}return function(){a&&g&&deactivateTextChange()}},[g]),react.createElement(common_AnnotationOptions,{className:"FIE_text-tool-options",annotation:b,updateAnnotation:c,morePoppableOptionsPrepended:k?[]:TEXT_POPPABLE_OPTIONS,moreOptionsPopupComponentsObj:k?{}:textOptionsPopupComponents,t:i},Array.isArray(n)&&1<n.length&&react.createElement(StyledFontFamilySelect,{className:"FIE_text-font-family-option",onChange:q,value:b.fontFamily,placeholder:i("fontFamily"),size:"sm"},n.map(function(){var a,b,c,d=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"";return react.createElement(menu_item_component,{className:"FIE_text-font-family-item",key:null!==(a=d.value)&&void 0!==a?a:d,value:null!==(b=d.value)&&void 0!==b?b:d},null!==(c=d.label)&&void 0!==c?c:d)})),react.createElement(StyledFontSizeInput,{className:"FIE_text-size-option",value:b.fontSize||"",name:"fontSize",onChange:p,inputMode:"numeric",type:"number",size:"sm",placeholder:i("size")}),!k&&react.createElement(react.Fragment,null,react.createElement(StyledIconWrapper,{className:"FIE_text-bold-option","aria-selected":(b.fontStyle||"").includes("bold"),onClick:function onClick(){return r("bold")}},react.createElement(font_bold,null)),react.createElement(StyledIconWrapper,{className:"FIE_text-italic-option","aria-selected":(b.fontStyle||"").includes("italic"),onClick:function onClick(){return r("italic")}},react.createElement(font_italic,null))),d)};TextControls.defaultProps={children:null};/* harmony default export */ const TextOptions_TextControls = (TextControls);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Text/TextOptions/index.js\nvar TextOptions=function(a){var b=a.t,c=hooks_useAnnotation({name:TOOLS_IDS.TEXT}),d=(0,slicedToArray/* default */.Z)(c,2),e=d[0],f=d[1];return react.createElement(TextOptions_TextControls,{text:e,saveText:f,t:b})};/* harmony default export */ const Text_TextOptions = (TextOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Text/index.js\n\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Image/ImageButton.js\nvar ImageButton=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_image-tool-button",id:TOOLS_IDS.IMAGE,label:d("imageTool"),Icon:ImageOutline,onClick:b,isSelected:c})};ImageButton.defaultProps={isSelected:!1};/* harmony default export */ const Image_ImageButton = (ImageButton);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/HiddenUploadInput/HiddenUploadInput.styled.js\nvar StyledHiddenUploadInput=styled_components_browser_esm.input.withConfig({componentId:"sc-h20emh-0"})(["display:none;width:1px;height:1px;position:absolute;z-index:-1;"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/HiddenUploadInput/index.js\nvar HiddenUploadInput=function(a,b){return react.createElement(StyledHiddenUploadInput,(0,esm_extends/* default */.Z)({type:"file",ref:b},a))};/* harmony default export */ const common_HiddenUploadInput = ((0,react.forwardRef)(HiddenUploadInput));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Image/ImageControls.js\nvar ImageControls=function(a){var b=a.image,c=a.saveImage,d=a.children,e=a.t;return react.createElement(common_AnnotationOptions,{className:"FIE_image-tool-options",annotation:b,updateAnnotation:c,t:e,hideFillOption:!0},d)};ImageControls.defaultProps={children:null};/* harmony default export */ const Image_ImageControls = (ImageControls);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Image/ImageOptions.js\nvar ADDED_IMG_SPACING_PERCENT=.15,ImageOptions=function(){var a=(0,react.useState)(),b=(0,slicedToArray/* default */.Z)(a,2),c=b[0],d=b[1],e=(0,react.useRef)(),f=hooks_useStore(),g=f.shownImageDimensions,h=f.dispatch,i=f.adjustments.crop,j=void 0===i?{}:i,k=f.t,l=hooks_useAnnotation({name:TOOLS_IDS.IMAGE,opacity:1},!1),m=(0,slicedToArray/* default */.Z)(l,3),n=m[0],o=m[1],p=m[2],q=(0,react.useRef)(0),r=function(a){var b=j.width||g.width,c=j.height||g.height,d=j.x||0,e=j.y||0,f=Math.min(1,b/(a.width+a.width*ADDED_IMG_SPACING_PERCENT),c/(a.height+a.height*ADDED_IMG_SPACING_PERCENT));p({image:a,x:d+b/2-a.width*f/2,y:e+c/2-a.height*f/2,width:a.width*f,height:a.height*f})},s=function(a){q.current+=1,q.current===a&&(q.current=0,d(!1))},t=function(a){h({type:SET_FEEDBACK,payload:{feedback:{message:a,status:FEEDBACK_STATUSES.WARNING}}})};return react.createElement(Image_ImageControls,{image:n,saveImage:o,t:k},react.createElement(button_component,{className:"FIE_image-tool-add-option",color:"secondary",onClick:c?void 0:function triggerUploadInput(){e.current&&e.current.click()},disabled:c,size:"sm",style:{maxHeight:24}},c?k("importing"):k("addImage")),react.createElement(common_HiddenUploadInput,{ref:e,onChange:c?void 0:function importImages(a){if(a.target.files){d(!0);var b=[],c=Array.from(a.target.files),e=c.length;if(c.forEach(function(a){if(a.type.startsWith("image/")){var c=new Image;c.onload=function(){r(c),URL.revokeObjectURL(a),s(e)},c.onerror=function(){t(k("uploadImageError")),s(e)},c.src=URL.createObjectURL(a)}else b.push(a.name),s(e)}),0<b.length){var f=1<b.length?k("areNotImages"):k("isNotImage");t("".concat(b.join(", ")," ").concat(f," ").concat(k("toBeUploaded"),"."))}}a.target.value=""},disabled:c,multiple:!0}))};/* harmony default export */ const Image_ImageOptions = (ImageOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Image/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/square.js\n\n\nvar square_excluded = ["color", "size"];\n\n\nvar Square = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, square_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M42.4624 0H8.0874C3.77959 0 0.274902 3.50469 0.274902 7.8125V42.1875C0.274902 46.4953 3.77959 50 8.0874 50H42.4624C46.7702 50 50.2749 46.4953 50.2749 42.1875V7.8125C50.2749 3.50469 46.7702 0 42.4624 0ZM46.3687 42.1875C46.3687 44.3414 44.6163 46.0938 42.4624 46.0938H8.0874C5.9335 46.0938 4.18115 44.3414 4.18115 42.1875V7.8125C4.18115 5.65859 5.9335 3.90625 8.0874 3.90625H42.4624C44.6163 3.90625 46.3687 5.65859 46.3687 7.8125V42.1875Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const square = ((/* unused pure expression or super */ null && (Square)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Rect/RectButton.js\nvar RectButton=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_rect-tool-button",id:TOOLS_IDS.RECT,label:d("rectangleTool"),Icon:Square,onClick:b,isSelected:c})};RectButton.defaultProps={isSelected:!1};/* harmony default export */ const Rect_RectButton = (RectButton);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/radius-corner.js\n\n\nvar radius_corner_excluded = ["color", "size"];\n\n\nvar RadiusCorner = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, radius_corner_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M3 3H23V0.5H3C1.61929 0.5 0.5 1.61929 0.5 3V43C0.5 44.3807 1.61929 45.5 3 45.5H43C44.3807 45.5 45.5 44.3807 45.5 43V23H43V43H3V3Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 7.25076H43V5.50076C43 5.15718 42.9321 4.83576 42.8113 4.54446L45.1206 3.58682C45.3651 4.17636 45.5 4.82281 45.5 5.50076V7.25076Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M24.75 0.500763V3.00076H28.25V0.500763H24.75Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M31.75 0.500763V3.00076H35.25V0.500763H31.75Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M38.75 0.500763V3.00076H40.5C40.8436 3.00076 41.165 3.06868 41.4563 3.18948L42.414 0.880166C41.8244 0.635694 41.178 0.500763 40.5 0.500763H38.75Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 10.7508H43V14.2508H45.5V10.7508Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 17.7508H43V21.2508H45.5V17.7508Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const radius_corner = (RadiusCorner);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Rect/RectCornerField.js\nvar RectCornerField_MIN_VALUE=0,RectCornerField_MAX_VALUE=150,RectCornerField=function(a){var b=a.annotation,c=a.updateAnnotation,d=a.t,e=b.cornerRadius;return react.createElement(StyledSpacedOptionFields,null,react.createElement(label_component,null,d("cornerRadius")),react.createElement(common_Slider,{annotation:"px",onChange:function updateCornerRadius(a){c({cornerRadius:utils_restrictNumber(a,RectCornerField_MIN_VALUE,RectCornerField_MAX_VALUE)})},value:e,min:RectCornerField_MIN_VALUE,max:RectCornerField_MAX_VALUE}))};/* harmony default export */ const Rect_RectCornerField = (RectCornerField);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Rect/Rect.constants.js\nvar CORNER_RADIUS="corner-radius";var RECT_POPPABLE_OPTIONS=[{titleKey:"cornerRadius",name:"corner-radius",Icon:radius_corner}];var rectOptionsPopupComponents=(0,defineProperty/* default */.Z)({},"corner-radius",Rect_RectCornerField);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Rect/RectOptions.js\nvar RectOptions=function(a){var b=a.t,c=hooks_useAnnotation({name:TOOLS_IDS.RECT}),d=(0,slicedToArray/* default */.Z)(c,2),e=d[0],f=d[1];return react.createElement(common_AnnotationOptions,{className:"FIE_rect-tool-options",moreOptionsPopupComponentsObj:rectOptionsPopupComponents,morePoppableOptionsPrepended:RECT_POPPABLE_OPTIONS,annotation:e,updateAnnotation:f,t:b})};/* harmony default export */ const Rect_RectOptions = (RectOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Rect/index.js\n\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Ellipse/EllipseButton.js\nvar EllipseButton=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_ellipse-tool-button",id:TOOLS_IDS.ELLIPSE,label:d("ellipseTool"),Icon:ellipse_Ellipse,onClick:b,isSelected:c})};EllipseButton.defaultProps={isSelected:!1};/* harmony default export */ const Ellipse_EllipseButton = (EllipseButton);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Ellipse/EllipseOptions.js\nvar EllipseOptions=function(a){var b=a.t,c=hooks_useAnnotation({name:TOOLS_IDS.ELLIPSE}),d=(0,slicedToArray/* default */.Z)(c,2),e=d[0],f=d[1];return react.createElement(common_AnnotationOptions,{className:"FIE_ellipse-tool-options",annotation:e,updateAnnotation:f,t:b})};/* harmony default export */ const Ellipse_EllipseOptions = (EllipseOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Ellipse/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/annotation.js\n\n\nvar annotation_excluded = ["color", "size"];\n\n\nvar Annotation = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, annotation_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M48.8326 38.9412H35.1306C32.0818 38.9412 29.6019 41.4211 29.6019 44.4698C29.6019 45.9278 28.4155 47.1142 26.9576 47.1142H5.80392C4.34557 47.1142 3.15958 45.9278 3.15958 44.4698V42.5446C3.15958 41.0873 4.34518 39.9014 5.8024 39.9006L9.61443 39.8987C9.61557 39.8987 9.6171 39.8983 9.61824 39.8983C9.66173 39.8983 9.70522 39.8956 9.74908 39.8918C9.76701 39.8903 9.78456 39.8872 9.80249 39.885C9.82118 39.8823 9.84026 39.8808 9.85895 39.8777L20.0385 38.1218C20.0438 38.1207 20.0488 38.1195 20.0537 38.1184C20.0697 38.1153 20.0854 38.1119 20.101 38.1084C20.1266 38.1027 20.1518 38.097 20.1766 38.0898C20.1941 38.0852 20.2117 38.0798 20.2292 38.0745C20.2525 38.0669 20.2757 38.0589 20.299 38.0501C20.3158 38.0436 20.333 38.0379 20.3497 38.031C20.3856 38.0158 20.4207 37.9997 20.4554 37.9818C20.4691 37.9746 20.4829 37.9662 20.4966 37.9585C20.521 37.9448 20.5451 37.9311 20.5687 37.9158C20.5832 37.9067 20.5977 37.8967 20.6122 37.8868C20.6351 37.8708 20.658 37.854 20.6801 37.8365C20.6919 37.8273 20.7041 37.8181 20.716 37.8082C20.7495 37.7804 20.7823 37.7514 20.8132 37.7201L46.5228 12.011C48.5846 9.94911 48.5846 6.59409 46.5228 4.53186L43.5381 1.54762C41.4763 -0.514601 38.1209 -0.514219 36.0591 1.54762L10.3499 27.2568C10.3186 27.2877 10.2896 27.3209 10.2614 27.3544C10.2519 27.3659 10.2427 27.3777 10.2336 27.3895C10.216 27.412 10.1992 27.4349 10.1832 27.4582C10.1733 27.4723 10.1634 27.4868 10.1542 27.5013C10.1393 27.5246 10.1256 27.5482 10.1122 27.5723C10.1035 27.5879 10.0943 27.6035 10.0859 27.6192C10.0691 27.6524 10.0539 27.6856 10.0394 27.7199C10.0321 27.737 10.026 27.755 10.0192 27.7725C10.0112 27.7947 10.0031 27.8172 9.9959 27.8397C9.99017 27.858 9.98483 27.8763 9.97987 27.8946C9.97339 27.9182 9.96767 27.9423 9.96233 27.9667C9.95851 27.9835 9.9547 28.0003 9.95164 28.017C9.9505 28.022 9.94936 28.0266 9.94859 28.0312L8.39868 37.0148L5.80087 37.0159C2.75369 37.0174 0.274902 39.4978 0.274902 42.5446V44.4698C0.274902 47.5185 2.75522 49.9989 5.80392 49.9989H26.9576C30.0063 49.9989 32.4866 47.5185 32.4866 44.4698C32.4866 43.0119 33.6726 41.8255 35.1306 41.8255H48.8326C49.6291 41.8255 50.2749 41.18 50.2749 40.3835C50.2749 39.5866 49.6291 38.9412 48.8326 38.9412ZM12.3179 31.2645L16.8055 35.7521L11.3825 36.6875L12.3179 31.2645ZM33.8316 7.85408L36.0037 10.0262L15.5814 30.4485L13.4093 28.2764L33.8316 7.85408ZM19.7932 34.6603L17.6211 32.4883L38.0438 12.0659L40.2159 14.238L19.7932 34.6603ZM38.0988 3.58696C39.036 2.65007 40.5608 2.65007 41.4984 3.58696L44.4827 6.57158C45.4199 7.50885 45.4199 9.03397 44.4827 9.97124L42.2553 12.1986L35.8714 5.81436L38.0988 3.58696Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const annotation = ((/* unused pure expression or super */ null && (Annotation)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Pen/PenButton.js\nvar PenButton=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_pen-tool-button",id:TOOLS_IDS.PEN,label:d("penTool"),Icon:Annotation,onClick:b,isSelected:c})};PenButton.defaultProps={isSelected:!1};/* harmony default export */ const Pen_PenButton = (PenButton);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Pen/PenOptions.js\nfunction PenOptions_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function PenOptions_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?PenOptions_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):PenOptions_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var PenOptions_eventsOptions={passive:!0},PenOptions=function(a){var b=a.t,c=hooks_useStore(),d=c.dispatch,e=c.designLayer,f=c.previewGroup,g=c.config,h=hooks_useAnnotation(PenOptions_objectSpread(PenOptions_objectSpread(PenOptions_objectSpread({},g.annotationsCommon),g[TOOLS_IDS.PEN]),{},{name:TOOLS_IDS.PEN}),!1),i=(0,slicedToArray/* default */.Z)(h,3),j=i[0],k=i[1],l=i[2],m=(0,react.useRef)(null),n=(0,react.useRef)({points:[],moved:!1,id:""}),o=(0,react.useCallback)(function(){var a=utils_getElemDocumentCoords(m.current.content),b=utils_getPointerOffsetPositionBoundedToObject(f,a);return[b.offsetX-(e.attrs.xPadding||0),b.offsetY-(e.attrs.yPadding||0)]},[]),p=(0,react.useCallback)(function(){n.current.moved?(n.current.points=n.current.points.concat(o()),d({type:SET_ANNOTATION,payload:{id:n.current.id,points:n.current.points,dismissHistory:!0}})):(n.current={moved:!0,id:utils_randomId(TOOLS_IDS.PEN),points:[].concat((0,toConsumableArray/* default */.Z)(n.current.points),(0,toConsumableArray/* default */.Z)(o()))},l({id:n.current.id,name:TOOLS_IDS.PEN,points:n.current.points}))},[]),q=(0,react.useCallback)(function(){n.current.id&&d({type:SELECT_ANNOTATION,payload:{annotationId:n.current.id}}),n.current=null,m.current.off("mousemove touchmove",p),m.current.off("mouseleave touchcancel",q),document.removeEventListener("mouseup",q,PenOptions_eventsOptions),document.removeEventListener("touchend",q,PenOptions_eventsOptions),document.removeEventListener("mouseleave",q,PenOptions_eventsOptions),document.removeEventListener("touchcancel",q,PenOptions_eventsOptions)},[]),r=(0,react.useCallback)(function(a){a.target.attrs.draggable||(a.evt.preventDefault(),n.current={points:o()},m.current.on("mousemove touchmove",p),m.current.on("mouseleave touchcancel",q),document.addEventListener("mouseup",q,PenOptions_eventsOptions),document.addEventListener("touchend",q,PenOptions_eventsOptions),document.addEventListener("mouseleave",q,PenOptions_eventsOptions),document.addEventListener("touchcancel",q,PenOptions_eventsOptions))},[]);return (0,react.useEffect)(function(){return m.current=null===e||void 0===e?void 0:e.getStage(),m.current&&m.current.on("mousedown touchstart",r),function(){m.current&&m.current.off("mousedown touchstart",r)}},[]),react.createElement(common_AnnotationOptions,{className:"FIE_pen-tool-options",annotation:j,updateAnnotation:k,t:b,hidePositionField:!0,hideFillOption:!0})};/* harmony default export */ const Pen_PenOptions = (PenOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Pen/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/line.js\n\n\nvar line_excluded = ["color", "size"];\n\n\nvar line_Line = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, line_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M40.1901 7.27549L7.59689 39.8687C6.83412 40.6315 6.83412 41.8681 7.59689 42.6308C8.35965 43.3936 9.59626 43.3936 10.359 42.6308L42.9522 10.0376C43.715 9.27486 43.715 8.03825 42.9522 7.27549C42.1895 6.51272 40.9529 6.51272 40.1901 7.27549Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const line = (line_Line);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Line/LineButton.js\nvar LineButton=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_line-tool-button",id:TOOLS_IDS.LINE,label:d("lineTool"),Icon:line,onClick:b,isSelected:c})};LineButton.defaultProps={isSelected:!1};/* harmony default export */ const Line_LineButton = (LineButton);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Line/LineOptions.js\nvar LineOptions=function(a){var b=a.t,c=hooks_useAnnotation({name:TOOLS_IDS.LINE}),d=(0,slicedToArray/* default */.Z)(c,2),e=d[0],f=d[1];return react.createElement(common_AnnotationOptions,{className:"FIE_line-tool-options",annotation:e,updateAnnotation:f,t:b,hidePositionField:!0,hideFillOption:!0})};/* harmony default export */ const Line_LineOptions = (LineOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Line/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/arrow-tool.js\n\n\nvar arrow_tool_excluded = ["color", "size"];\n\n\nvar ArrowTool = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, arrow_tool_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M1.04757 38.9503C0.437373 38.3401 0.437373 37.3508 1.04757 36.7406L33.9229 3.86697L23.8354 3.33584C22.9736 3.29047 22.3118 2.5551 22.3572 1.69335C22.4026 0.831601 23.138 0.169794 23.9997 0.215167L37.5909 0.930759C38.3892 0.972794 39.027 1.61063 39.0691 2.40894L39.7846 16.0001C39.83 16.8619 39.1682 17.5972 38.3065 17.6426C37.4447 17.688 36.7093 17.0262 36.664 16.1644L36.1328 6.07651L3.25728 38.9503C2.64708 39.5605 1.65776 39.5605 1.04757 38.9503Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const arrow_tool = ((/* unused pure expression or super */ null && (ArrowTool)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Arrow/ArrowButton.js\nvar ArrowButton=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_arrow-tool-button",id:TOOLS_IDS.ARROW,label:d("arrowTool"),Icon:ArrowTool,onClick:b,isSelected:c})};ArrowButton.defaultProps={isSelected:!1};/* harmony default export */ const Arrow_ArrowButton = (ArrowButton);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Arrow/ArrowOptions.js\nvar ArrowOptions=function(a){var b=a.t,c=hooks_useAnnotation({name:TOOLS_IDS.ARROW}),d=(0,slicedToArray/* default */.Z)(c,2),e=d[0],f=d[1];return react.createElement(common_AnnotationOptions,{className:"FIE_arrow-tool-options",annotation:e,updateAnnotation:f,t:b,hidePositionField:!0,hideFillOption:!0})};/* harmony default export */ const Arrow_ArrowOptions = (ArrowOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Arrow/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/polygon.js\n\n\nvar polygon_excluded = ["color", "size"];\n\n\nvar Polygon = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, polygon_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M44.103 18.4866L24.0002 3.8811L3.89749 18.4866L11.5761 42.1188H36.4244L44.103 18.4866ZM25.8371 1.35293C24.7418 0.557164 23.2587 0.557162 22.1634 1.35292L2.06066 15.9584C0.96539 16.7542 0.507082 18.1647 0.925439 19.4523L8.604 43.0845C9.02236 44.372 10.2222 45.2438 11.5761 45.2438H36.4244C37.7782 45.2438 38.9781 44.372 39.3965 43.0845L47.075 19.4523C47.4934 18.1647 47.0351 16.7542 45.9398 15.9584L25.8371 1.35293Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const polygon = ((/* unused pure expression or super */ null && (Polygon)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Polygon/PolygonButton.js\nvar PolygonButton=function(a){var b=a.selectTool,c=a.isSelected,d=a.t;return react.createElement(ToolsBar_ToolsBarItemButton,{className:"FIE_polygon-tool-button",id:TOOLS_IDS.POLYGON,label:d("polygonTool"),Icon:Polygon,onClick:b,isSelected:c})};PolygonButton.defaultProps={isSelected:!1};/* harmony default export */ const Polygon_PolygonButton = (PolygonButton);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/polygon-sides.js\n\n\nvar polygon_sides_excluded = ["color", "size"];\n\n\nvar PolygonSides = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, polygon_sides_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M23.0078 29.9668H25.835L24.7803 35.9727H27.4609L28.5156 29.9668H32.2363V27.4473H28.9551L29.6875 23.2871H33.3496V20.7383H30.1416L31.2109 14.6445H28.5303L27.4609 20.7383H24.6191L25.6885 14.6445H23.0225L21.9531 20.7383H18.1006V23.2871H21.499L20.7666 27.4473H17.002V29.9668H20.3271L19.2725 35.9727H21.9531L23.0078 29.9668ZM26.2744 27.4473H23.4473L24.165 23.2871H27.0068L26.2744 27.4473Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M23.5448 0.821147C24.421 0.184537 25.6075 0.184536 26.4837 0.821146L48.4803 16.8026C49.3565 17.4392 49.7231 18.5676 49.3885 19.5977L40.9865 45.4561C40.6518 46.4862 39.692 47.1836 38.6089 47.1836H11.4197C10.3366 47.1836 9.37672 46.4862 9.04204 45.4561L0.640107 19.5977C0.305422 18.5676 0.672067 17.4392 1.54829 16.8026L23.5448 0.821147ZM25.0143 2.84369L47.0108 18.8251L38.6089 44.6836H11.4197L3.01775 18.8251L25.0143 2.84369Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const polygon_sides = (PolygonSides);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Polygon/PolygonSidesField.js\nvar PolygonSidesField_MIN_VALUE=3,PolygonSidesField_MAX_VALUE=25,PolygonSidesField=function(a){var b=a.annotation,c=a.updateAnnotation,d=a.t,e=b.sides;return react.createElement(StyledSpacedOptionFields,null,react.createElement(label_component,null,d("sides")),react.createElement(common_Slider,{annotation:"",onChange:function updateSidesNumber(a){c({sides:utils_restrictNumber(a,PolygonSidesField_MIN_VALUE,PolygonSidesField_MAX_VALUE)})},value:e,min:PolygonSidesField_MIN_VALUE,max:PolygonSidesField_MAX_VALUE}))};/* harmony default export */ const Polygon_PolygonSidesField = (PolygonSidesField);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Polygon/Polygon.constants.js\nvar SIDES_NUMBER="sides-number";var POLYGON_POPPABLE_OPTIONS=[{titleKey:"sides",name:"sides-number",Icon:polygon_sides}];var polygonOptionsPopupComponents=(0,defineProperty/* default */.Z)({},"sides-number",Polygon_PolygonSidesField);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Polygon/PolygonOptions.js\nvar PolygonOptions=function(a){var b=a.t,c=hooks_useAnnotation({name:TOOLS_IDS.POLYGON}),d=(0,slicedToArray/* default */.Z)(c,2),e=d[0],f=d[1];return react.createElement(common_AnnotationOptions,{className:"FIE_polygon-tool-options",morePoppableOptionsPrepended:POLYGON_POPPABLE_OPTIONS,moreOptionsPopupComponentsObj:polygonOptionsPopupComponents,annotation:e,updateAnnotation:f,t:b,hidePositionField:!0})};/* harmony default export */ const Polygon_PolygonOptions = (PolygonOptions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Polygon/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/lock-outline.js\n\n\nvar lock_outline_excluded = ["color", "size"];\n\n\nvar LockOutline = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, lock_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M40.5 20H38V12.5C38 5.6 32.4 0 25.5 0C18.6 0 13 5.6 13 12.5V20H10.5C9.1 20 8 21.1 8 22.5V47.5C8 48.9 9.1 50 10.5 50H40.5C41.9 50 43 48.9 43 47.5V22.5C43 21.1 41.9 20 40.5 20ZM15.5 12.5C15.5 7 20 2.5 25.5 2.5C31 2.5 35.5 7 35.5 12.5V20H15.5V12.5ZM40.5 47.5H10.5V22.5H40.5V47.5Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M24.3 37.3V41.3H26.8V37.3C28.3 36.8 29.3 35.4 29.3 33.8C29.3 31.7 27.6 30 25.5 30C23.4 30 21.7 31.7 21.7 33.8C21.8 35.4 22.8 36.8 24.3 37.3ZM25.5 32.5C26.2 32.5 26.8 33.1 26.8 33.8C26.8 34.5 26.2 35.1 25.5 35.1C24.8 35.1 24.2 34.5 24.2 33.8C24.3 33.1 24.8 32.5 25.5 32.5Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const lock_outline = (LockOutline);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/unlock-outline.js\n\n\nvar unlock_outline_excluded = ["color", "size"];\n\n\nvar UnlockOutline = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, unlock_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M36.2754 7.5C34.2754 3.1 29.8754 0 24.7754 0C17.8754 0 12.2754 5.6 12.2754 12.5V20H9.77539C8.37539 20 7.27539 21.1 7.27539 22.5V47.5C7.27539 48.9 8.37539 50 9.77539 50H39.7754C41.1754 50 42.2754 48.9 42.2754 47.5V22.5C42.2754 21.1 41.1754 20 39.7754 20H14.7754V12.5C14.7754 7 19.2754 2.5 24.7754 2.5C28.4754 2.5 31.7754 4.5 33.4754 7.6L36.2754 7.5ZM39.7754 47.5H9.77539V22.5H39.7754V47.5Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M24.7754 30C22.6754 30 20.9754 31.7 20.9754 33.7C20.9754 35.3 21.9754 36.7 23.4754 37.2V41.2H25.9754V37.2C27.4754 36.7 28.4754 35.3 28.4754 33.7C28.5754 31.7 26.8754 30 24.7754 30ZM24.7754 35C24.0754 35 23.4754 34.4 23.4754 33.7C23.4754 33 24.0754 32.4 24.7754 32.4C25.4754 32.4 25.9754 33 25.9754 33.7C25.9754 34.4 25.4754 35 24.7754 35Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const unlock_outline = (UnlockOutline);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getProperDimensions.js\nfunction getProperDimensions_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function getProperDimensions_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?getProperDimensions_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):getProperDimensions_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var getProperDimensions=function(a,b,c,d){var e=4<arguments.length&&arguments[4]!==void 0?arguments[4]:0;if(a.width&&a.height)return a;var f=utils_mapCropBox(b,c,d),g=utils_getSizeAfterRotation(f.width,f.height,e);return a.width||a.height?{width:a.width||g.width,height:a.height||g.height}:g.width&&g.height&&g||getProperDimensions_objectSpread(getProperDimensions_objectSpread({},d),utils_getSizeAfterRotation(d.width,d.height,e))};/* harmony default export */ const utils_getProperDimensions = (getProperDimensions);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/icon-button/icon-button.styles.js\n\n\nvar _squarePaddingMixin;\n\n\n\n\n\nvar icon_button_styles_baseClassName = \'IconButton\';\nvar squarePaddingMixin = (_squarePaddingMixin = {}, (0,defineProperty/* default */.Z)(_squarePaddingMixin, ButtonSize.Xs, Ce(["padding:6px;"])), (0,defineProperty/* default */.Z)(_squarePaddingMixin, ButtonSize.Sm, Ce(["padding:8px;"])), (0,defineProperty/* default */.Z)(_squarePaddingMixin, ButtonSize.Md, Ce(["padding:8px;"])), (0,defineProperty/* default */.Z)(_squarePaddingMixin, ButtonSize.Lg, Ce(["padding:10px;"])), (0,defineProperty/* default */.Z)(_squarePaddingMixin, ButtonSize.Xl, Ce(["padding:11px;"])), _squarePaddingMixin);\nvar IconButton = /*#__PURE__*/styled_components_browser_esm(button_styles.Button).attrs({\n  className: generateClassNames(icon_button_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-10edh45-0"\n})(function (_ref) {\n  var _ref$square = _ref.square,\n      square = _ref$square === void 0 ? false : _ref$square,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? ButtonSize.Md : _ref$size;\n  return Ce(["", ""], square && squarePaddingMixin[size]);\n});\nvar icon_button_styles_Styled = applyDisplayNames({\n  IconButton: IconButton\n});\n/* harmony default export */ const icon_button_styles = (icon_button_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/icon-button/icon-button.component.js\n\n\nvar icon_button_component_excluded = ["children"];\n\n\n\n\n\n\nvar getIconSizeWithSquare = function getIconSizeWithSquare(sizeName, square) {\n  switch (sizeName) {\n    case ButtonSize.Xl:\n      return square ? 18 : 16;\n\n    case ButtonSize.Lg:\n    case ButtonSize.Md:\n      return square ? 16 : 14;\n\n    default:\n      return getIconSize(sizeName);\n  }\n};\nvar icon_button_component_IconButton = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, icon_button_component_excluded);\n\n  return /*#__PURE__*/react.createElement(icon_button_styles.IconButton, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), children && (typeof children === \'function\' ? children({\n    size: getIconSizeWithSquare(rest.size, rest.square)\n  }) : children));\n});\nicon_button_component_IconButton.defaultProps = {\n  size: ButtonSize.Md,\n  color: ButtonColor.Secondary,\n  square: false\n};\nicon_button_component_IconButton.propTypes = {\n  children: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]).isRequired,\n  size: prop_types_default().oneOf(objectValues(ButtonSize)),\n  color: prop_types_default().oneOf(objectValues(ButtonColor)),\n  square: (prop_types_default()).bool\n};\n/* harmony default export */ const icon_button_component = (icon_button_component_IconButton);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Resize/Resize.styled.js\nvar StyledResizeWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-17otqpz-0"})(["display:flex;justify-content:",";align-items:center;flex-wrap:wrap;"],function(a){var b=a.alignLeft;return b?"left":"center"}),StyledResizeInput=styled_components_browser_esm(input_component).withConfig({componentId:"sc-17otqpz-1"})(["width:70px;height:24px;margin:",";"],function(a){var b=a.noLeftMargin;return b?"8px 8px 8px 0":"8px"}),StyledRatioLockIcon=styled_components_browser_esm(icon_button_component).withConfig({componentId:"sc-17otqpz-2"})(["margin-right:16px;"]),StyledXLabel=styled_components_browser_esm(label_component).withConfig({componentId:"sc-17otqpz-3"})(["font-size:13px;line-height:15px;"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Resize/Resize.js\nvar Resize=function(a){var b=a.onChange,c=a.currentSize,d=a.hideResetButton,e=a.alignLeft,f=hooks_useStore(),g=f.dispatch,h=f.originalImage,i=f.resize,j=f.shownImageDimensions,k=f.adjustments,l=k.crop,m=k.rotation,n=void 0===m?0:m,o=f.theme,p=f.t,q=function(a){var d,e=a.target,f=e.name,k=e.value,m=utils_getSizeAfterRotation(h.width,h.height,n),o=(0,defineProperty/* default */.Z)({},f,utils_restrictNumber(k,1)),p="height"===f,q=p?"width":"height",r=null!==(d=c.ratioUnlocked)&&void 0!==d?d:i.ratioUnlocked;if(!r){var s=m.width/m.height;o[q]=p?Math.round(o[f]*s):Math.round(o[f]/s)}if(o[f]!==i[f]||o[q]!==i[q]){if("function"==typeof b)return void b(o);if(g({type:SET_RESIZE,payload:o}),!i.width||!i.height){var t=l.width&&l.height&&l||j;g({type:ZOOM_CANVAS,payload:{factor:utils_getZoomFitFactor(t,o)}})}}},r=!i.width&&!i.height||h.width===i.width&&h.height===i.height,s=utils_getProperDimensions((c.width||c.height)&&c||i,l,j,h,n),t=i.manualChangeDisabled;return react.createElement(StyledResizeWrapper,{className:"FIE_resize-tool-options",alignLeft:e},react.createElement(StyledResizeInput,{className:"FIE_resize-width-option",value:s.width,name:"width",onChange:t?void 0:q,inputMode:"numeric",title:p("resizeWidthTitle"),type:"number",size:"sm",placeholder:"Width",noLeftMargin:e,disabled:t}),react.createElement(StyledXLabel,{className:"FIE_resize-x-label"},"x"),react.createElement(StyledResizeInput,{className:"FIE_resize-height-option",value:s.height,name:"height",onChange:t?void 0:q,inputMode:"numeric",title:p("resizeHeightTitle"),type:"number",size:"sm",placeholder:"Height",disabled:t}),react.createElement(StyledRatioLockIcon,{className:"FIE_resize-ratio-locker",title:p("toggleRatioLockTitle"),onClick:t?void 0:function toggleRatioLock(){return"function"==typeof b?void b({ratioUnlocked:!c.ratioUnlocked}):void g({type:SET_RESIZE,payload:{ratioUnlocked:!i.ratioUnlocked}})},color:"link",size:"sm",disabled:t},c.ratioUnlocked||i.ratioUnlocked?react.createElement(unlock_outline,{color:o.palette["icons-secondary"]}):react.createElement(lock_outline,{color:o.palette["icons-secondary"]})),!d&&react.createElement(button_component,{className:"FIE_resize-reset-button",size:"sm",onClick:r||t?void 0:function resetResize(){g({type:SET_RESIZE,payload:{width:null,height:null,ratioUnlocked:!1}});var a=l.width&&l.height&&l||j;g({type:ZOOM_CANVAS,payload:{factor:utils_getZoomFitFactor(a,a)}})},disabled:r||t,title:p("resetSize")},p("reset")))};Resize.defaultProps={onChange:void 0,currentSize:{},hideResetButton:!1,alignLeft:!1};/* harmony default export */ const Resize_Resize = (Resize);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Resize/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/upload-outline.js\n\n\nvar upload_outline_excluded = ["color", "size"];\n\n\nvar UploadOutline = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, upload_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M17.5911 1.54582C16.7075 0.680052 15.2937 0.680014 14.4101 1.54573L4.05296 11.6925C3.15635 12.5709 3.14159 14.0098 4.01999 14.9064C4.89839 15.8031 6.33733 15.8178 7.23394 14.9394L13.7278 8.57741V30.4419C13.7278 31.6971 14.7454 32.7147 16.0006 32.7147C17.2558 32.7147 18.2733 31.6971 18.2733 30.4419V8.57782L24.766 14.9393C25.6625 15.8178 27.1015 15.8031 27.9799 14.9065C28.8584 14.01 28.8437 12.571 27.9471 11.6926L17.5911 1.54582Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M2.78827 36.5543C1.53308 36.5543 0.515541 37.5719 0.515541 38.827C0.515541 40.0822 1.53308 41.0998 2.78827 41.0998H29.1519C30.4071 41.0998 31.4246 40.0822 31.4246 38.827C31.4246 37.5719 30.4071 36.5543 29.1519 36.5543H2.78827Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const upload_outline = (UploadOutline);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/arrow-left-outline.js\n\n\nvar arrow_left_outline_excluded = ["color", "size"];\n\n\nvar ArrowLeftOutline = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, arrow_left_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M26.907 0.710361C25.7493 -0.293042 23.9445 -0.225257 22.8758 0.861763L0.931376 23.1832C-0.0773525 24.2092 -0.0773525 25.7908 0.931376 26.8168L22.8758 49.1383C23.9445 50.2253 25.7493 50.2931 26.907 49.2897C28.0647 48.2863 28.1369 46.5916 27.0683 45.5046L6.90997 25L27.0683 4.49541C28.1369 3.40839 28.0647 1.71376 26.907 0.710361Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const arrow_left_outline = (ArrowLeftOutline);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/menu-item/menu-item-icon.component.js\n\n\nvar menu_item_icon_component_excluded = ["children", "size"];\n\n\n\n\n\n\nvar menu_item_icon_component_getIconSize = function getIconSize(sizeName) {\n  switch (sizeName) {\n    case size_Size.Md:\n      return 16;\n\n    case size_Size.Sm:\n    default:\n      return 12;\n  }\n};\n\nvar MenuItemIcon = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? size_Size.Md : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, menu_item_icon_component_excluded);\n\n  return /*#__PURE__*/react.createElement(menu_item_styles.Icon, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), children && typeof children === \'function\' ? children({\n    size: menu_item_icon_component_getIconSize(size)\n  }) : children);\n});\nMenuItemIcon.defaultProps = {\n  size: size_Size.Md\n};\nMenuItemIcon.propTypes = {\n  size: prop_types_default().oneOf(objectValues(size_Size)),\n  children: prop_types_default().oneOfType([(prop_types_default()).node, (prop_types_default()).func]).isRequired\n};\n/* harmony default export */ const menu_item_icon_component = (MenuItemIcon);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/ButtonWithMenu/ButtonWithMenu.styled.js\nvar StyledButtonWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-m9ezm7-0"})(["height:22px;display:flex;align-items:center;margin-right:4px;"]),StyledMainButton=styled_components_browser_esm(button_component).withConfig({componentId:"sc-m9ezm7-1"})(["height:100%;padding:4px 8px;flex-grow:1;justify-content:center;align-items:center;",";span{font-size:12px !important;line-height:14px !important;}"],function(a){var b=a.keepBorderRadius;return b?"":"border-top-right-radius: 0; border-bottom-right-radius: 0"}),StyledMenuButton=styled_components_browser_esm(icon_button_component).withConfig({componentId:"sc-m9ezm7-2"})(["border-top-left-radius:0;border-bottom-left-radius:0;margin-left:1px;height:100%;padding:4px 8px;svg{transform:rotate(-90deg);width:10px;margin-top:-4px;}"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/ButtonWithMenu/index.js\nvar isFieButtonWithMenuMounted=!0,ButtonWithMenu=function(a){var b=a.label,c=a.onClick,d=a.title,e=a.color,f=a.menuFromBtn,g=a.menuItems,h=a.menuPosition,i=void 0===h?"bottom":h,j=a.arrowColor,k=a.disabled,l=void 0!==k&&k,m=a.className,n=a.menuStyle,o=a.wrapperStyle,p=(0,react.useState)(null),q=(0,slicedToArray/* default */.Z)(p,2),r=q[0],s=q[1],t="md",u=function(a){isFieButtonWithMenuMounted&&(a.stopPropagation(),s(a.currentTarget))},v=function(){isFieButtonWithMenuMounted&&s(null)},w=function(a){"function"==typeof a&&a(),v()};(0,react.useEffect)(function(){return isFieButtonWithMenuMounted=!0,function(){isFieButtonWithMenuMounted=!1}},[]);var x=0<g.length;return react.createElement(react.Fragment,null,react.createElement(StyledButtonWrapper,{className:"".concat(m,"-wrapper"),onClick:l?void 0:function handleButtonClick(a){f&&u(a),"function"==typeof c&&c()},style:o},react.createElement(StyledMainButton,{className:"".concat(m,"-button"),color:e,size:t,title:d,keepBorderRadius:!x,disabled:l},b),x&&react.createElement(StyledMenuButton,{className:"".concat(m,"-menu-opener"),color:e,size:t,onClick:f||l?void 0:u,disabled:l},react.createElement(arrow_left_outline,{color:j}))),x&&react.createElement(menu_component,{className:"".concat(m,"-menu"),anchorEl:r,onClose:v,open:!0,style:n,position:i},g.map(function(a){return a&&react.createElement(menu_item_component,{className:"".concat(m,"-menu-item"),key:a.key,active:a.isActive,onClick:function(){return w(a.onClick)},size:t},a.icon&&react.createElement(menu_item_icon_component,{size:t},"string"==typeof a.icon?react.createElement("span",{dangerouslySetInnerHTML:{__html:a.icon}}):react.createElement(a.icon,null)),react.createElement(menu_item_label_component,null,a.label))})))};ButtonWithMenu.defaultProps={title:"",color:"primary",menuFromBtn:!1,menuPosition:"bottom",onClick:void 0,disabled:!1,arrowColor:void 0,menuStyle:void 0,wrapperStyle:void 0};/* harmony default export */ const common_ButtonWithMenu = (ButtonWithMenu);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Watermark/Watermark.styled.js\nvar StyledWatermarkWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-fvaj5j-0"})(["display:flex;align-items:center;justify-content:center;flex-wrap:wrap;overflow:hidden;",";"],function(a){var b=a.noWrap;return b?"margin-left: 4px; flex-wrap: nowrap;":""}),StyledControlsWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-fvaj5j-1"})(["margin-bottom:8px;"]),StyledWatermarkGalleryItem=styled_components_browser_esm.div.withConfig({componentId:"sc-fvaj5j-2"})(function(a){var b=a.theme;return"\\n    padding: 4px;\\n    border: 1px solid ".concat(b.palette["borders-primary"],";\\n    width: fit-content;\\n    height: 32px;\\n    border-radius: 2px;\\n    overflow: hidden;\\n    cursor: pointer;\\n\\n    :hover {\\n      background: ").concat(b.palette["bg-primary-active"],";\\n    }\\n\\n    &[aria-selected=\'true\'] {\\n      background: ").concat(b.palette["bg-primary-active"],";\\n      border-color: ").concat(b.palette["accent-primary-active"],";\\n    }\\n\\n    img {\\n      max-width: 100%;\\n      max-height: 100%;\\n    }\\n  ")});\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Watermark/WatermarksGallery.js\nvar WatermarksGallery=function(a){var b=a.selectWatermark,c=a.style,d=hooks_useStore(),e=d.config,f=d.annotations,g=(0,react.useMemo)(function(){var a;return null===(a=(f[WATERMARK_ANNOTATION_ID]||{}).image)||void 0===a?void 0:a.src},[f[WATERMARK_ANNOTATION_ID]]),h=function(a){b(a.currentTarget.children[0])},i=e[TOOLS_IDS.WATERMARK]||{},j=i.gallery,k=void 0===j?[]:j;return 0===k.length?null:react.createElement(common_Carousel,{className:"FIE_watermark-gallery",style:c},k.map(function(a){return react.createElement(StyledWatermarkGalleryItem,{className:"FIE_watermark-selected-item",onClick:h,key:a,"aria-selected":a===g},react.createElement("img",{src:a,alt:a,crossOrigin:"Anonymous",draggable:!1}))}))};WatermarksGallery.defaultProps={style:void 0};/* harmony default export */ const Watermark_WatermarksGallery = (WatermarksGallery);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/padding.js\n\n\nvar padding_excluded = ["color", "size"];\n\n\nvar Padding = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, padding_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M13.8334 9.19949C13.8334 8.50914 14.3931 7.94949 15.0834 7.94949H31.3334C32.0238 7.94949 32.5834 8.50914 32.5834 9.19949C32.5834 9.88985 32.0238 10.4495 31.3334 10.4495H15.0834C14.3931 10.4495 13.8334 9.88985 13.8334 9.19949Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M15.0834 35.5496C14.3931 35.5496 13.8334 36.1092 13.8334 36.7996C13.8334 37.4899 14.3931 38.0496 15.0834 38.0496H31.3334C32.0238 38.0496 32.5834 37.4899 32.5834 36.7996C32.5834 36.1092 32.0238 35.5496 31.3334 35.5496H15.0834Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M36.8001 13.4163C37.4905 13.4163 38.0501 13.9759 38.0501 14.6663V30.9163C38.0501 31.6066 37.4905 32.1663 36.8001 32.1663C36.1098 32.1663 35.5501 31.6066 35.5501 30.9163V14.6663C35.5501 13.9759 36.1098 13.4163 36.8001 13.4163Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M10.45 14.6663C10.45 13.9759 9.89038 13.4163 9.20003 13.4163C8.50967 13.4163 7.95003 13.9759 7.95003 14.6663L7.95003 30.9163C7.95003 31.6066 8.50967 32.1663 9.20003 32.1663C9.89038 32.1663 10.45 31.6066 10.45 30.9163L10.45 14.6663Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M3 0.5C1.61929 0.5 0.5 1.61929 0.5 3V43C0.5 44.3807 1.61929 45.5 3 45.5H43C44.3807 45.5 45.5 44.3807 45.5 43V3C45.5 1.61929 44.3807 0.5 43 0.5H3ZM43 3H3V43H43V3Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const padding = (Padding);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Watermark/WatermarkPadding.js\nvar WatermarkPadding=function(a){var b=a.watermark,c=a.saveWatermark,d=a.t,e=(0,react.useState)(null),f=(0,slicedToArray/* default */.Z)(e,2),g=f[0],h=f[1],i=b.padding;return react.createElement(react.Fragment,null,react.createElement(StyledIconWrapper,{className:"FIE_watermark-padding-triggerer",title:d("padding"),onClick:function openOptionPopup(a){h(a.currentTarget)}},react.createElement(padding,{size:18})),react.createElement(menu_component,{className:"FIE_watermark-padding-popup",anchorEl:g,open:!!g,onClose:function closeOptionPopup(){h(null)},position:"top"},react.createElement(StyledOptionPopupContent,null,react.createElement(StyledSpacedOptionFields,null,react.createElement(label_component,null,d("padding")),react.createElement(common_Slider,{annotation:"px",onChange:function updatePadding(a){c({padding:utils_restrictNumber(a,0,100)})},value:i})))))};/* harmony default export */ const Watermark_WatermarkPadding = (WatermarkPadding);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Watermark/Watermark.js\nfunction Watermark_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function Watermark_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?Watermark_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):Watermark_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var WATERMARK_IMG_RATIO_FROM_ORIGINAL=.33,Watermark_WATERMARK_ANNOTATION_ID="watermark",Watermark=function(){var a=hooks_useStore(),b=a.annotations,c=a.shownImageDimensions,d=a.selectionsIds,e=a.config,f=a.dispatch,g=a.t,h=a.adjustments.crop,i=void 0===h?{}:h,j=hooks_usePhoneScreen(),k=(0,react.useState)(!1),l=(0,slicedToArray/* default */.Z)(k,2),m=l[0],n=l[1],o=(0,react.useRef)(),p=(0,react.useMemo)(function(){return b[Watermark_WATERMARK_ANNOTATION_ID]},[b[Watermark_WATERMARK_ANNOTATION_ID]]),q=i.width||c.width,r=i.height||c.height,s=i.x||0,t=i.y||0,u=function(a){var b=a.width/a.height,c={};if(r>q){var g=r*WATERMARK_IMG_RATIO_FROM_ORIGINAL/a.height;c.height=a.height*g,c.width=c.height*b}else{var h=q*WATERMARK_IMG_RATIO_FROM_ORIGINAL/a.width;c.width=a.width*h,c.height=c.width/b}var d=Watermark_objectSpread(Watermark_objectSpread(Watermark_objectSpread(Watermark_objectSpread({},e.annotationsCommon),e[TOOLS_IDS.IMAGE]),c),{},{padding:1,image:a,x:s+q/2-c.width/2,y:t+r/2-c.height/2,id:Watermark_WATERMARK_ANNOTATION_ID,name:TOOLS_IDS.IMAGE,replaceCurrent:!0});f({type:SET_ANNOTATION,payload:d})},v=function(a){f({type:SET_ANNOTATION,payload:Watermark_objectSpread(Watermark_objectSpread({},"function"==typeof a?a(p):a),{},{id:Watermark_WATERMARK_ANNOTATION_ID})})},w=[!e.useCloudimage&&{key:"upload-watermark",label:g("uploadWatermark"),icon:upload_outline,onClick:function onClick(){o.current&&o.current.click()}},{key:"add-text-watermark",label:g("addWatermarkAsText"),icon:icons_text,onClick:function addTextWatermark(){var a={height:r*WATERMARK_IMG_RATIO_FROM_ORIGINAL,width:q*WATERMARK_IMG_RATIO_FROM_ORIGINAL},b=Watermark_objectSpread(Watermark_objectSpread(Watermark_objectSpread(Watermark_objectSpread({},e.annotationsCommon),e[TOOLS_IDS.TEXT]),a),{},{padding:1,x:s+q/2-a.width/2,y:t+r/2-a.height/2,fill:"#000000",id:Watermark_WATERMARK_ANNOTATION_ID,name:TOOLS_IDS.TEXT,replaceCurrent:!0});f({type:SET_ANNOTATION,payload:b})}}],x=function(a){f({type:SET_FEEDBACK,payload:{feedback:{message:a,status:FEEDBACK_STATUSES.WARNING}}})};(0,react.useEffect)(function(){p&&(f({type:CLEAR_ANNOTATIONS_SELECTIONS}),f({type:SELECT_ANNOTATION,payload:{annotationId:"watermark"}}))},[p]),(0,react.useEffect)(function(){p&&(0===d.length||d[0].id!==Watermark_WATERMARK_ANNOTATION_ID)&&f({type:SELECT_ANNOTATION,payload:{annotationId:"watermark"}})},[d]);var y=function(){return react.createElement(Watermark_WatermarkPadding,{watermark:p,saveWatermark:v,t:g})};return react.createElement("div",{className:"FIE_watermark-tool-wrapper"},(null===p||void 0===p?void 0:p.name)===TOOLS_IDS.TEXT&&react.createElement(StyledControlsWrapper,{className:"FIE_watermark-options-wrapper"},react.createElement(TextOptions_TextControls,{text:p,saveText:v,t:g},y())),(null===p||void 0===p?void 0:p.name)===TOOLS_IDS.IMAGE&&react.createElement(StyledControlsWrapper,{className:"FIE_watermark-options-wrapper"},react.createElement(Image_ImageControls,{image:p,saveImage:v,t:g},y())),react.createElement(StyledWatermarkWrapper,{className:"FIE_watermark-add-wrapper",noWrap:!(!(null!==p&&void 0!==p)||!p.name)},react.createElement(common_ButtonWithMenu,{className:"FIE_watermark-add",color:"secondary",label:g("addWatermark"),title:g("addWatermarkTitle"),menuPosition:"top",menuItems:w,menuFromBtn:!0}),react.createElement(Watermark_WatermarksGallery,{selectWatermark:u,style:j&&!(!(null!==p&&void 0!==p)||!p.name)?{width:"55%"}:void 0}),react.createElement(common_HiddenUploadInput,{onChange:m?void 0:function importWatermarkImg(a){if(a.target.files){n(!0);var b=a.target.files[0];if(b.type.startsWith("image/")){var c=new Image;c.onload=function(){u(c),URL.revokeObjectURL(b),n(!1)},c.onerror=function(){x(g("uploadImageError")),n(!1)},c.src=URL.createObjectURL(b)}}a.target.value=""},disabled:m,ref:o})))};/* harmony default export */ const Watermark_Watermark = (Watermark);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/Watermark/index.js\n\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/tools/tools.constants.js\nvar _TOOLS_ITEMS,_TABS_TOOLS;var TOOLS_ITEMS=(_TOOLS_ITEMS={},(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.CROP,{id:TOOLS_IDS.CROP,Item:tools_Crop_Crop}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.ROTATE,{id:TOOLS_IDS.ROTATE,Item:Rotate_RotateButton,ItemOptions:Rotate_RotateOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.FLIP_X,{id:TOOLS_IDS.FLIP_X,Item:Flip_FlipX}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.FLIP_Y,{id:TOOLS_IDS.FLIP_Y,Item:Flip_FlipY}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.BRIGHTNESS,{id:TOOLS_IDS.BRIGHTNESS,Item:tools_Brightness_Brightness,ItemOptions:Brightness_BrightnessOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.CONTRAST,{id:TOOLS_IDS.CONTRAST,Item:tools_Contrast_Contrast,ItemOptions:Contrast_ContrastOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.HSV,{id:TOOLS_IDS.HSV,Item:tools_HSV_HSV,ItemOptions:HSV_HSVOptions,hideFn:function hideFn(a){var b=a.useCloudimage;return b}}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.BLUR,{id:TOOLS_IDS.BLUR,Item:tools_Blur_Blur,ItemOptions:Blur_BlurOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.WARMTH,{id:TOOLS_IDS.WARMTH,Item:tools_Warmth_Warmth,ItemOptions:Warmth_WarmthOptions,hideFn:function hideFn(a){var b=a.useCloudimage;return b}}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.FILTERS,{id:TOOLS_IDS.FILTERS,Item:Filters_Filters}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.WATERMARK,{id:TOOLS_IDS.WATERMARK,Item:Watermark_Watermark}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.TEXT,{id:TOOLS_IDS.TEXT,Item:Text_TextButton,ItemOptions:Text_TextOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.IMAGE,{id:TOOLS_IDS.IMAGE,Item:Image_ImageButton,ItemOptions:Image_ImageOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.RECT,{id:TOOLS_IDS.RECT,Item:Rect_RectButton,ItemOptions:Rect_RectOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.POLYGON,{id:TOOLS_IDS.POLYGON,Item:Polygon_PolygonButton,ItemOptions:Polygon_PolygonOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.ELLIPSE,{id:TOOLS_IDS.ELLIPSE,Item:Ellipse_EllipseButton,ItemOptions:Ellipse_EllipseOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.PEN,{id:TOOLS_IDS.PEN,Item:Pen_PenButton,ItemOptions:Pen_PenOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.LINE,{id:TOOLS_IDS.LINE,Item:Line_LineButton,ItemOptions:Line_LineOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.ARROW,{id:TOOLS_IDS.ARROW,Item:Arrow_ArrowButton,ItemOptions:Arrow_ArrowOptions}),(0,defineProperty/* default */.Z)(_TOOLS_ITEMS,TOOLS_IDS.RESIZE,{id:TOOLS_IDS.RESIZE,Item:Resize_Resize}),_TOOLS_ITEMS);var TABS_TOOLS=(_TABS_TOOLS={},(0,defineProperty/* default */.Z)(_TABS_TOOLS,TABS_IDS.ADJUST,[TOOLS_IDS.CROP,TOOLS_IDS.ROTATE,TOOLS_IDS.FLIP_X,TOOLS_IDS.FLIP_Y]),(0,defineProperty/* default */.Z)(_TABS_TOOLS,TABS_IDS.FINETUNE,[TOOLS_IDS.BRIGHTNESS,TOOLS_IDS.CONTRAST,TOOLS_IDS.HSV,TOOLS_IDS.BLUR,TOOLS_IDS.WARMTH]),(0,defineProperty/* default */.Z)(_TABS_TOOLS,TABS_IDS.FILTERS,[TOOLS_IDS.FILTERS]),(0,defineProperty/* default */.Z)(_TABS_TOOLS,TABS_IDS.WATERMARK,[TOOLS_IDS.WATERMARK]),(0,defineProperty/* default */.Z)(_TABS_TOOLS,TABS_IDS.ANNOTATE,[TOOLS_IDS.TEXT,TOOLS_IDS.IMAGE,TOOLS_IDS.RECT,TOOLS_IDS.ELLIPSE,TOOLS_IDS.POLYGON,TOOLS_IDS.PEN,TOOLS_IDS.LINE,TOOLS_IDS.ARROW]),(0,defineProperty/* default */.Z)(_TABS_TOOLS,TABS_IDS.RESIZE,[TOOLS_IDS.RESIZE]),_TABS_TOOLS);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/selectTab.js\nfunction selectTab_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function selectTab_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?selectTab_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):selectTab_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SELECT_TAB="SELECT_TAB";var selectTab=function(a,b){return b.tabId===a.tabId?a:selectTab_objectSpread(selectTab_objectSpread({},a),{},{tabId:b.tabId,toolId:TABS_TOOLS[b.tabId][0],selectionsIds:[],pointerCssIcon:b.tabId===TABS_IDS.ANNOTATE?POINTER_ICONS.DRAW:POINTER_ICONS.DEFAULT})};/* harmony default export */ const actions_selectTab = (selectTab);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setFinetune.js\nfunction setFinetune_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setFinetune_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setFinetune_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setFinetune_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_FINETUNE="SET_FINETUNE";var setFinetune=function(a,b){return setFinetune_objectSpread(setFinetune_objectSpread({},a),{},{isDesignState:!b.dismissHistory,finetunes:!b.finetune||a.finetunes.includes(b.finetune)?a.finetunes:[].concat((0,toConsumableArray/* default */.Z)(a.finetunes),[b.finetune]),finetunesProps:setFinetune_objectSpread(setFinetune_objectSpread({},a.finetunesProps),b.finetuneProps)})};/* harmony default export */ const actions_setFinetune = (setFinetune);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setAnnotation.js\nvar setAnnotation_excluded=["dismissHistory","replaceCurrent"];function setAnnotation_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setAnnotation_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setAnnotation_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setAnnotation_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_ANNOTATION="SET_ANNOTATION";var setAnnotation=function(a){var b,c=1<arguments.length&&arguments[1]!==void 0?arguments[1]:{},d=c.dismissHistory,e=c.replaceCurrent,f=(0,objectWithoutProperties/* default */.Z)(c,setAnnotation_excluded),g=null!==(b=f.id)&&void 0!==b?b:utils_randomId(f.name),h=a.annotations[g];return h&&!Object.keys(f).some(function(a){return(f[a]||0===f[a])&&f[a]!==h[a]})?a:setAnnotation_objectSpread(setAnnotation_objectSpread({},a),{},{isDesignState:!(void 0!==d&&d),annotations:setAnnotation_objectSpread(setAnnotation_objectSpread({},a.annotations),{},(0,defineProperty/* default */.Z)({},g,setAnnotation_objectSpread(setAnnotation_objectSpread({},void 0!==e&&e?{}:h),f)))})};/* harmony default export */ const actions_setAnnotation = (setAnnotation);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/changePointerIcon.js\nfunction changePointerIcon_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function changePointerIcon_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?changePointerIcon_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):changePointerIcon_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var CHANGE_POINTER_ICON="CHANGE_POINTER_ICON";var changingPointerIcon=function(a,b){return a.pointerCssIcon===b.pointerCssIcon?a:changePointerIcon_objectSpread(changePointerIcon_objectSpread({},a),{},{pointerCssIcon:b.pointerCssIcon})};/* harmony default export */ const changePointerIcon = (changingPointerIcon);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/selectAnnotation.js\nfunction selectAnnotation_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function selectAnnotation_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?selectAnnotation_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):selectAnnotation_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SELECT_ANNOTATION="SELECT_ANNOTATION";var selectAnnotation=function(a,b){if(1===a.selectionsIds.length&&a.selectionsIds[0]===b.annotationId)return a;var c;if(b.multiple){c=a.selectionsIds.filter(function(a){return a!==b.annotationId});var d=c.length!==a.selectionsIds.length;d||c.push(b.annotationId)}else c=[b.annotationId];return selectAnnotation_objectSpread(selectAnnotation_objectSpread({},a),{},{selectionsIds:c})};/* harmony default export */ const actions_selectAnnotation = (selectAnnotation);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/clearAnnotationsSelections.js\nfunction clearAnnotationsSelections_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function clearAnnotationsSelections_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?clearAnnotationsSelections_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):clearAnnotationsSelections_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var CLEAR_ANNOTATIONS_SELECTIONS="CLEAR_ANNOTATIONS_SELECTIONS";var clearAnnotationsSelections=function(a){return 0===a.selectionsIds.length?a:clearAnnotationsSelections_objectSpread(clearAnnotationsSelections_objectSpread({},a),{},{selectionsIds:[]})};/* harmony default export */ const actions_clearAnnotationsSelections = (clearAnnotationsSelections);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/toggleOriginalImageDisplay.js\nfunction toggleOriginalImageDisplay_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function toggleOriginalImageDisplay_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?toggleOriginalImageDisplay_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):toggleOriginalImageDisplay_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var TOGGLE_ORIGINAL_IMAGE_DISPLAY="TOGGLE_ORIGINAL_IMAGE_DISPLAY";var toggleOriginalImageDisplay=function(a,b){return toggleOriginalImageDisplay_objectSpread(toggleOriginalImageDisplay_objectSpread({},a),{},{isShowOriginalImage:b.isShow})};/* harmony default export */ const actions_toggleOriginalImageDisplay = (toggleOriginalImageDisplay);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/selectTool.js\nfunction selectTool_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function selectTool_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?selectTool_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):selectTool_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SELECT_TOOL="SELECT_TOOL";var selectTool=function(a,b){return a.toolId===b.toolId?a:selectTool_objectSpread(selectTool_objectSpread({},a),{},{toolId:b.toolId,selectionsIds:b.keepSelections?a.selectionsIds:[]})};/* harmony default export */ const actions_selectTool = (selectTool);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/toggleFlip.js\nfunction toggleFlip_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function toggleFlip_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?toggleFlip_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):toggleFlip_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var TOGGLE_FLIP="TOGGLE_FLIP";var toggleFlip=function(a,b){var c="isFlipped".concat(b.direction===FLIP_DIRECTIONS.X?"X":"Y");return toggleFlip_objectSpread(toggleFlip_objectSpread({},a),{},{isDesignState:!b.dismissHistory,adjustments:toggleFlip_objectSpread(toggleFlip_objectSpread({},a.adjustments),{},(0,defineProperty/* default */.Z)({},c,!a.adjustments[c]))})};/* harmony default export */ const actions_toggleFlip = (toggleFlip);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setCrop.js\nfunction setCrop_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setCrop_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setCrop_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setCrop_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_CROP="SET_CROP";var setCrop=function(a,b){var c,d,e,f,g,h,i,j=null!==(c=a.adjustments.crop)&&void 0!==c?c:{},k={x:null!==(d=utils_toPrecisedFloat(b.x))&&void 0!==d?d:j.x,y:null!==(e=utils_toPrecisedFloat(b.y))&&void 0!==e?e:j.y,ratio:"string"==typeof b.ratio?b.ratio:null!==(f=utils_toPrecisedFloat(b.ratio))&&void 0!==f?f:j.ratio,width:null!==(g=utils_toPrecisedFloat(b.width))&&void 0!==g?g:j.width,height:null!==(h=utils_toPrecisedFloat(b.height))&&void 0!==h?h:j.height,ratioTitleKey:null!==(i=b.ratioTitleKey)&&void 0!==i?i:j.ratioTitleKey,ratioGroupKey:b.ratioGroupKey,ratioFolderKey:b.ratioFolderKey};return j.x!==k.x||j.y!==k.y||j.width!==k.width&&(k.width!==utils_toPrecisedFloat(a.shownImageDimensions.width)||j.width)||j.height!==k.height&&(k.height!==utils_toPrecisedFloat(a.shownImageDimensions.height)||j.height)||j.ratio!==k.ratio||j.ratioTitleKey!==k.ratioTitleKey||j.ratioGroupKey!==k.ratioGroupKey||j.ratioFolderKey!==k.ratioFolderKey?setCrop_objectSpread(setCrop_objectSpread({},a),{},{isDesignState:!b.dismissHistory,adjustments:setCrop_objectSpread(setCrop_objectSpread({},a.adjustments),{},{crop:setCrop_objectSpread(setCrop_objectSpread({},j),k)})}):a};/* harmony default export */ const actions_setCrop = (setCrop);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/changeRotation.js\nfunction changeRotation_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function changeRotation_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?changeRotation_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):changeRotation_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var CHANGE_ROTATION="CHANGE_ROTATION";var changeRotation=function(a,b){return a.adjustments.rotation===b.rotation?a:changeRotation_objectSpread(changeRotation_objectSpread({},a),{},{isDesignState:!b.dismissHistory,adjustments:changeRotation_objectSpread(changeRotation_objectSpread({},a.adjustments),{},{rotation:b.rotation})})};/* harmony default export */ const actions_changeRotation = (changeRotation);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/calculateZoomData.js\nfunction calculateZoomData_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function calculateZoomData_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?calculateZoomData_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):calculateZoomData_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var calculateZoomData=function(a,b,c,d){if(a.factor===DEFAULT_ZOOM_FACTOR)return{x:0,y:0,factor:DEFAULT_ZOOM_FACTOR};var e=a.factor>b.factor,f={x:(a.x-b.x||0)/b.factor,y:(a.y-b.y||0)/b.factor},g={x:a.x-f.x*a.factor,y:a.y-f.y*a.factor};if(e&&1===b.factor||(g.x=Math.min(0,Math.max(g.x,c*(1-b.factor))),g.y=Math.min(0,Math.max(g.y,d*(1-b.factor)))),1>a.factor){var h=c-c*a.factor,i=d-d*a.factor;g.x+=h/2,g.y+=i/2}return calculateZoomData_objectSpread(calculateZoomData_objectSpread({},g),{},{factor:a.factor})};/* harmony default export */ const utils_calculateZoomData = (calculateZoomData);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/zoomCanvas.js\nvar zoomCanvas_excluded=["preparedDimensions"];function zoomCanvas_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function zoomCanvas_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?zoomCanvas_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):zoomCanvas_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var ZOOM_CANVAS="ZOOM_CANVAS";var MIN_ZOOM_FACTOR=.05,MAX_ZOOM_FACTOR=55,zoomCanvas=function(a,b){var c,d=utils_restrictNumber(parseFloat(b.factor).toFixed(2),MIN_ZOOM_FACTOR,MAX_ZOOM_FACTOR);if(b.preparedDimensions){var e=b.preparedDimensions,f=(0,objectWithoutProperties/* default */.Z)(b,zoomCanvas_excluded);c=f}else{var g,h,i={x:b.x||0===b.x?null!==(g=b.x)&&void 0!==g?g:a.zoom.x:a.canvasWidth/2,y:b.y||0===b.y?null!==(h=b.y)&&void 0!==h?h:a.zoom.y:a.canvasHeight/2};c=utils_calculateZoomData(zoomCanvas_objectSpread(zoomCanvas_objectSpread({},i),{},{factor:d}),a.zoom,a.canvasWidth,a.canvasHeight)}return c.factor===a.zoom.factor&&c.x===a.zoom.x&&c.y===a.zoom.y?a:zoomCanvas_objectSpread(zoomCanvas_objectSpread({},a),{},{zoom:zoomCanvas_objectSpread(zoomCanvas_objectSpread({},a.zoom),c)})};/* harmony default export */ const actions_zoomCanvas = (zoomCanvas);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setCanvasSize.js\nfunction setCanvasSize_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setCanvasSize_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setCanvasSize_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setCanvasSize_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_CANVAS_SIZE="SET_CANVAS_SIZE";var setCanvasSize=function(a,b){if(a.canvasWidth===b.canvasWidth&&a.canvasHeight===b.canvasHeight)return a;var c=a.initialCanvasWidth,d=void 0===c?b.canvasWidth:c,e=a.initialCanvasHeight,f=void 0===e?b.canvasHeight:e,g=utils_getDimensionsMinimalRatio(a.initialCanvasWidth,a.initialCanvasHeight,a.originalImage.width,a.originalImage.height),h=g*a.originalImage.width,i=g*a.originalImage.height,j=1;if(d!==b.canvasWidth||f!==b.canvasHeight){var k=b.canvasWidth/h,l=b.canvasHeight/i;j=Math.min(k,l)}return setCanvasSize_objectSpread(setCanvasSize_objectSpread({},a),{},{initialCanvasWidth:d,initialCanvasHeight:f,canvasWidth:b.canvasWidth,canvasHeight:b.canvasHeight,canvasScale:j})};/* harmony default export */ const actions_setCanvasSize = (setCanvasSize);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setOriginalImage.js\nfunction setOriginalImage_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setOriginalImage_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setOriginalImage_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setOriginalImage_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_ORIGINAL_IMAGE="SET_ORIGINAL_IMAGE";var setOriginalImage=function(a,b){return setOriginalImage_objectSpread(setOriginalImage_objectSpread({},a),{},{feedback:{},originalImage:b.originalImage,imgSrc:b.originalImage.src})};/* harmony default export */ const actions_setOriginalImage = (setOriginalImage);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setShownImageDimensions.js\nfunction setShownImageDimensions_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setShownImageDimensions_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setShownImageDimensions_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setShownImageDimensions_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_SHOWN_IMAGE_DIMENSIONS="SET_SHOWN_IMAGE_DIMENSIONS";var setShownImageDimensions=function(a,b){return setShownImageDimensions_objectSpread(setShownImageDimensions_objectSpread({},a),{},{shownImageDimensions:setShownImageDimensions_objectSpread(setShownImageDimensions_objectSpread({},a.shownImageDimensions),b.shownImageDimensions),designLayer:b.designLayer||a.designLayer,previewGroup:b.previewGroup||a.previewGroup})};/* harmony default export */ const actions_setShownImageDimensions = (setShownImageDimensions);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/removeAnnotations.js\nfunction removeAnnotations_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function removeAnnotations_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?removeAnnotations_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):removeAnnotations_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var REMOVE_ANNOTATIONS="REMOVE_ANNOTATIONS";var removeAnnotations=function(a,b){var c=a.annotations,d=a.selectionsIds;return b.annotationsIds.forEach(function(b){if(d=d.filter(function(a){return a!==b}),a.designLayer&&c[b]){var e=a.designLayer.findOne("#".concat(b));e&&e.destroy(),delete c[b]}}),removeAnnotations_objectSpread(removeAnnotations_objectSpread({},a),{},{isDesignState:b.isDesignState||!0,annotations:c,selectionsIds:[]})};/* harmony default export */ const actions_removeAnnotations = (removeAnnotations);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/duplicateAnnotations.js\nfunction duplicateAnnotations_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function duplicateAnnotations_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?duplicateAnnotations_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):duplicateAnnotations_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var DUPLICATE_ANNOTATIONS="DUPLICATE_ANNOTATIONS";var duplicateAnnotations=function(a,b){var c=a.annotations,d={};return b.annotationsIds.forEach(function(a){var b=c[a];if(b){var e=utils_randomId(b.name);d[e]=duplicateAnnotations_objectSpread(duplicateAnnotations_objectSpread({},b),{},{id:e,x:b.x+20,y:b.y+20})}}),duplicateAnnotations_objectSpread(duplicateAnnotations_objectSpread({},a),{},{isDesignState:!b.dismissHistory,annotations:duplicateAnnotations_objectSpread(duplicateAnnotations_objectSpread({},c),d)})};/* harmony default export */ const actions_duplicateAnnotations = (duplicateAnnotations);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/enableTextContentEdit.js\nfunction enableTextContentEdit_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function enableTextContentEdit_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?enableTextContentEdit_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):enableTextContentEdit_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var ENABLE_TEXT_CONTENT_EDIT="ENABLE_TEXT_CONTENT_EDIT";var enableTextContentEdit=function(a,b){return enableTextContentEdit_objectSpread(enableTextContentEdit_objectSpread({},a),{},{textIdOfEditableContent:b.textIdOfEditableContent||null})};/* harmony default export */ const actions_enableTextContentEdit = (enableTextContentEdit);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setResize.js\nfunction setResize_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setResize_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setResize_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setResize_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_RESIZE="SET_RESIZE";var setResize=function(a,b){var c;return setResize_objectSpread(setResize_objectSpread({},a),{},{isDesignState:!b.dismissHistory,resize:setResize_objectSpread(setResize_objectSpread(setResize_objectSpread({},a.resize),b),{},{manualChangeDisabled:!(null===(c=b.manualChangeDisabled)||void 0===c)&&c})})};/* harmony default export */ const actions_setResize = (setResize);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setSaved.js\nfunction setSaved_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setSaved_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setSaved_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setSaved_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_SAVED="SET_SAVED";var setSaved=function(a){return a.haveNotSavedChanges?setSaved_objectSpread(setSaved_objectSpread({},a),{},{haveNotSavedChanges:!1}):a};/* harmony default export */ const actions_setSaved = (setSaved);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/deepMerge.js\nfunction deepMerge_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function deepMerge_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?deepMerge_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):deepMerge_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var deepMerge=function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},c=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],d=deepMerge_objectSpread({},a),e=Object.keys(b);return e.forEach(function(e){var f=b[e];if(void 0!==f){var g=(0,esm_typeof/* default */.Z)(f);if("object"!==g||null===f||Array.isArray(f)||!a[e]||"object"!==(0,esm_typeof/* default */.Z)(a[e]))return void(d[e]=c&&Array.isArray(d[e])&&Array.isArray(f)?[].concat((0,toConsumableArray/* default */.Z)(d[e]),(0,toConsumableArray/* default */.Z)(f)):f);d[e]=deepMerge(a[e],f)}}),d};/* harmony default export */ const utils_deepMerge = (deepMerge);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/updateState.js\nvar UPDATE_STATE="UPDATE_STATE";var updateState=function(a,b){var c=b&&"function"==typeof b?b(a):b;return c?utils_deepMerge(a,c):a};/* harmony default export */ const actions_updateState = (updateState);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/setLatestColor.js\nfunction setLatestColor_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function setLatestColor_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?setLatestColor_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):setLatestColor_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SET_LATEST_COLOR="SET_LATEST_COLOR";var setLatestColor=function(a,b){return a.latestColor===b.latestColor?a:setLatestColor_objectSpread(setLatestColor_objectSpread({},a),{},{latestColor:b.latestColor})};/* harmony default export */ const actions_setLatestColor = (setLatestColor);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/actions/index.js\nvar _SET_ORIGINAL_IMAGE$S;/* harmony default export */ const actions = (_SET_ORIGINAL_IMAGE$S={},(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_ORIGINAL_IMAGE,actions_setOriginalImage),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_FEEDBACK,actions_setFeedback),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SHOW_LOADER,actions_showLoader),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,HIDE_LOADER,actions_hideLoader),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,CHANGE_POINTER_ICON,changePointerIcon),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SELECT_ANNOTATION,actions_selectAnnotation),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,CLEAR_ANNOTATIONS_SELECTIONS,actions_clearAnnotationsSelections),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,TOGGLE_ORIGINAL_IMAGE_DISPLAY,actions_toggleOriginalImageDisplay),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SELECT_TAB,actions_selectTab),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SELECT_TOOL,actions_selectTool),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,ZOOM_CANVAS,actions_zoomCanvas),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_CANVAS_SIZE,actions_setCanvasSize),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_SHOWN_IMAGE_DIMENSIONS,actions_setShownImageDimensions),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,ENABLE_TEXT_CONTENT_EDIT,actions_enableTextContentEdit),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_LATEST_COLOR,actions_setLatestColor),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,ADD_FILTER,actions_addFilter),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_FINETUNE,actions_setFinetune),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_ANNOTATION,actions_setAnnotation),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_CROP,actions_setCrop),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,CHANGE_ROTATION,actions_changeRotation),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,TOGGLE_FLIP,actions_toggleFlip),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_RESIZE,actions_setResize),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,REMOVE_ANNOTATIONS,actions_removeAnnotations),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,DUPLICATE_ANNOTATIONS,actions_duplicateAnnotations),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,UNDO,actions_undo),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,REDO,actions_redo),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,RESET,actions_reset),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,SET_SAVED,actions_setSaved),(0,defineProperty/* default */.Z)(_SET_ORIGINAL_IMAGE$S,UPDATE_STATE,actions_updateState),_SET_ORIGINAL_IMAGE$S);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getProperImageToCanvasSpacing.js\nvar SPACING_PERCENTAGE=.05,DEFAULT_SPACING=12,getProperImageToCanvasSpacing=function(){return 2*(window?Math.min(window.innerHeight,window.innerWidth)*SPACING_PERCENTAGE:DEFAULT_SPACING)};/* harmony default export */ const utils_getProperImageToCanvasSpacing = (getProperImageToCanvasSpacing);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/getCenterRotatedPoint.js\nvar getRotatedPoint=function(a,b){var c=a.x,d=a.y,e=b*Math.PI/180,f=Math.cos(e),g=Math.sin(e);return{x:c*f-d*g,y:d*f+c*g}},getCenterRotatedPoint=function(a,b,c){if(!a||!b||!c&&0!==c)return{x:0,y:0,rotation:c};var d={x:-a/2,y:-b/2},e=getRotatedPoint(d,0),f=getRotatedPoint(d,c),g=f.x-e.x,h=f.y-e.y;return{x:g,y:h,rotation:c}};/* harmony default export */ const utils_getCenterRotatedPoint = (getCenterRotatedPoint);\n// EXTERNAL MODULE: ./node_modules/react-filerobot-image-editor/node_modules/prop-types/index.js\nvar node_modules_prop_types = __webpack_require__(42298);\nvar node_modules_prop_types_default = /*#__PURE__*/__webpack_require__.n(node_modules_prop_types);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/nodesCommonPropTypes.js\nvar nodesCommonPropTypes={definitions:{id:(node_modules_prop_types_default()).string.isRequired,name:(node_modules_prop_types_default()).string.isRequired,rotation:(node_modules_prop_types_default()).number,scaleX:(node_modules_prop_types_default()).number,scaleY:(node_modules_prop_types_default()).number,stroke:(node_modules_prop_types_default()).string,strokeWidth:(node_modules_prop_types_default()).number,shadowOffsetX:(node_modules_prop_types_default()).number,shadowOffsetY:(node_modules_prop_types_default()).number,shadowBlur:(node_modules_prop_types_default()).number,shadowColor:(node_modules_prop_types_default()).string,shadowOpacity:(node_modules_prop_types_default()).number,opacity:(node_modules_prop_types_default()).number},defaults:{rotation:0,scaleX:1,scaleY:1,stroke:void 0,strokeWidth:void 0,shadowOffsetX:void 0,shadowOffsetY:void 0,shadowBlur:void 0,shadowColor:void 0,shadowOpacity:void 0,opacity:1}};/* harmony default export */ const DesignLayer_nodesCommonPropTypes = (nodesCommonPropTypes);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/RectNode.js\nvar RectNode_excluded=["id","name","fill","x","y","width","height","scaleX","scaleY","rotation","annotationEvents","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadowOpacity","opacity","cornerRadius"];function RectNode_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function RectNode_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?RectNode_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):RectNode_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var RectNode=function(a){var b=a.id,c=a.name,d=a.fill,e=a.x,f=a.y,g=a.width,h=a.height,i=a.scaleX,j=a.scaleY,k=a.rotation,l=a.annotationEvents,m=a.stroke,n=a.strokeWidth,o=a.shadowOffsetX,p=a.shadowOffsetY,q=a.shadowBlur,r=a.shadowColor,s=a.shadowOpacity,t=a.opacity,u=a.cornerRadius,v=(0,objectWithoutProperties/* default */.Z)(a,RectNode_excluded);return react.createElement(ReactKonvaCore_Rect,(0,esm_extends/* default */.Z)({id:b,name:c,rotation:k,scaleX:i,scaleY:j,stroke:m,strokeWidth:n,shadowOffsetX:o,shadowOffsetY:p,shadowBlur:q,shadowColor:r,shadowOpacity:s,fill:d,x:e,y:f,width:g,height:h,opacity:t,cornerRadius:u},l,v))};RectNode.defaultProps=RectNode_objectSpread(RectNode_objectSpread({},DesignLayer_nodesCommonPropTypes.defaults),{},{fill:"#000",cornerRadius:0,width:0,height:0});/* harmony default export */ const AnnotationNodes_RectNode = (RectNode);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/EllipseNode.js\nvar EllipseNode_excluded=["id","name","fill","x","y","radiusX","radiusY","scaleX","scaleY","rotation","annotationEvents","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadowOpacity","opacity"];function EllipseNode_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function EllipseNode_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?EllipseNode_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):EllipseNode_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var EllipseNode=function(a){var b=a.id,c=a.name,d=a.fill,e=a.x,f=a.y,g=a.radiusX,h=a.radiusY,i=a.scaleX,j=a.scaleY,k=a.rotation,l=a.annotationEvents,m=a.stroke,n=a.strokeWidth,o=a.shadowOffsetX,p=a.shadowOffsetY,q=a.shadowBlur,r=a.shadowColor,s=a.shadowOpacity,t=a.opacity,u=(0,objectWithoutProperties/* default */.Z)(a,EllipseNode_excluded);return react.createElement(ReactKonvaCore_Ellipse,(0,esm_extends/* default */.Z)({id:b,name:c,rotation:k,scaleX:i,scaleY:j,stroke:m,strokeWidth:n,shadowOffsetX:o,shadowOffsetY:p,shadowBlur:q,shadowColor:r,shadowOpacity:s,fill:d,x:e,y:f,radiusX:g,radiusY:h,offsetX:-g,offsetY:-h,opacity:t},l,u))};EllipseNode.defaultProps=EllipseNode_objectSpread(EllipseNode_objectSpread({},DesignLayer_nodesCommonPropTypes.defaults),{},{fill:"#000",radiusX:0,radiusY:0});/* harmony default export */ const AnnotationNodes_EllipseNode = (EllipseNode);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/PolygonNode.js\nvar PolygonNode_excluded=["id","name","fill","x","y","radius","scaleX","scaleY","rotation","sides","annotationEvents","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadowOpacity","opacity"];function PolygonNode_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function PolygonNode_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?PolygonNode_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):PolygonNode_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var PolygonNode=function(a){var b=a.id,c=a.name,d=a.fill,e=a.x,f=a.y,g=a.radius,h=a.scaleX,i=a.scaleY,j=a.rotation,k=a.sides,l=a.annotationEvents,m=a.stroke,n=a.strokeWidth,o=a.shadowOffsetX,p=a.shadowOffsetY,q=a.shadowBlur,r=a.shadowColor,s=a.shadowOpacity,t=a.opacity,u=(0,objectWithoutProperties/* default */.Z)(a,PolygonNode_excluded);return react.createElement(ReactKonvaCore_RegularPolygon,(0,esm_extends/* default */.Z)({id:b,name:c,rotation:j,scaleX:h,scaleY:i,stroke:m,strokeWidth:n,shadowOffsetX:o,shadowOffsetY:p,shadowBlur:q,shadowColor:r,shadowOpacity:s,fill:d,x:e,y:f,radius:g,offsetX:-g,offsetY:-g,sides:k,opacity:t},l,u))};PolygonNode.defaultProps=PolygonNode_objectSpread(PolygonNode_objectSpread({},DesignLayer_nodesCommonPropTypes.defaults),{},{fill:"#000",sides:3});/* harmony default export */ const AnnotationNodes_PolygonNode = (PolygonNode);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/TextNode.js\nvar TextNode_excluded=["id","name","text","fontFamily","fontSize","fontStyle","fill","x","y","width","height","scaleX","scaleY","rotation","annotationEvents","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadowOpacity","opacity","letterSpacing","lineHeight","align"];function TextNode_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function TextNode_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?TextNode_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):TextNode_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var TextNode=function(a){var b=a.id,c=a.name,d=a.text,e=a.fontFamily,f=a.fontSize,g=a.fontStyle,h=a.fill,i=a.x,j=a.y,k=a.width,l=a.height,m=a.scaleX,n=a.scaleY,o=a.rotation,p=a.annotationEvents,q=a.stroke,r=a.strokeWidth,s=a.shadowOffsetX,t=a.shadowOffsetY,u=a.shadowBlur,v=a.shadowColor,w=a.shadowOpacity,x=a.opacity,y=a.letterSpacing,z=a.lineHeight,A=a.align,B=(0,objectWithoutProperties/* default */.Z)(a,TextNode_excluded);return react.createElement(ReactKonvaCore_Text,(0,esm_extends/* default */.Z)({id:b,name:c,rotation:o,scaleX:m,scaleY:n,stroke:q,strokeWidth:r,shadowOffsetX:s,shadowOffsetY:t,shadowBlur:u,shadowColor:v,shadowOpacity:w,opacity:x,fill:h,text:d,fontFamily:e,fontStyle:g,fontSize:f,letterSpacing:y,lineHeight:z,align:A,x:i,y:j,width:k,height:l},p,B))};TextNode.defaultProps=TextNode_objectSpread(TextNode_objectSpread({},DesignLayer_nodesCommonPropTypes.defaults),{},{text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur imperdiet tortor quis odio facilisis, id aliquet nulla facilisis. Etiam tincidunt tempor odio nec placerat.",fontFamily:"Arial",fontSize:14,fill:"#000",width:0,height:0,letterSpacing:void 0,lineHeight:void 0,align:"left"});/* harmony default export */ const AnnotationNodes_TextNode = (TextNode);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/extractNameFromUrl.js\nvar extractNameFromUrl=function(a){var b=a.split("/");return b[b.length-1].split("?")[0]};/* harmony default export */ const utils_extractNameFromUrl = (extractNameFromUrl);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/loadImage.js\nvar loadImage=function(a,b){return new Promise(function(c,d){var e=new Image;e.src=a,e.crossOrigin="Anonymous",e.name=null!==b&&void 0!==b?b:utils_extractNameFromUrl(a),e.onload=function(){c(e)},e.onerror=function(){d(new Error("Error in loading the image with the provided url: ".concat(a)))}})};/* harmony default export */ const utils_loadImage = (loadImage);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/ImageNode.js\nvar ImageNode_excluded=["id","name","image","x","y","width","height","scaleX","scaleY","rotation","annotationEvents","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadowOpacity","opacity"];function ImageNode_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function ImageNode_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ImageNode_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ImageNode_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var ImageNode=function(a){var b=a.id,c=a.name,d=a.image,e=a.x,f=a.y,g=a.width,h=a.height,i=a.scaleX,j=a.scaleY,k=a.rotation,l=a.annotationEvents,m=a.stroke,n=a.strokeWidth,o=a.shadowOffsetX,p=a.shadowOffsetY,q=a.shadowBlur,r=a.shadowColor,s=a.shadowOpacity,t=a.opacity,u=(0,objectWithoutProperties/* default */.Z)(a,ImageNode_excluded),v=(0,react.useState)(null),w=(0,slicedToArray/* default */.Z)(v,2),x=w[0],y=w[1];(0,react.useEffect)(function(){"string"==typeof d&&utils_loadImage(d).then(y)},[d]);var z=d instanceof HTMLImageElement;if(!z&&!x)return null;var A=z?d:x;return react.createElement(ReactKonvaCore_Image,(0,esm_extends/* default */.Z)({id:b,name:c,rotation:k,scaleX:i,scaleY:j,stroke:m,strokeWidth:n,shadowOffsetX:o,shadowOffsetY:p,shadowBlur:q,shadowColor:r,shadowOpacity:s,image:A,x:e,y:f,width:g,height:h,opacity:t},u,l,u))};ImageNode.defaultProps=ImageNode_objectSpread(ImageNode_objectSpread({},DesignLayer_nodesCommonPropTypes.defaults),{},{width:0,height:0});/* harmony default export */ const AnnotationNodes_ImageNode = (ImageNode);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/LineNode.js\nvar LineNode_excluded=["id","name","scaleX","scaleY","rotation","annotationEvents","points","lineCap","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadowOpacity","tension","opacity"];function LineNode_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function LineNode_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?LineNode_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):LineNode_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var LineNode=function(a){var b=a.id,c=a.name,d=a.scaleX,e=a.scaleY,f=a.rotation,g=a.annotationEvents,h=a.points,i=a.lineCap,j=a.stroke,k=a.strokeWidth,l=a.shadowOffsetX,m=a.shadowOffsetY,n=a.shadowBlur,o=a.shadowColor,p=a.shadowOpacity,q=a.tension,r=a.opacity,s=(0,objectWithoutProperties/* default */.Z)(a,LineNode_excluded);return react.createElement(ReactKonvaCore_Line,(0,esm_extends/* default */.Z)({id:b,name:c,rotation:f,scaleX:d,scaleY:e,stroke:j,strokeWidth:k,shadowOffsetX:l,shadowOffsetY:m,shadowBlur:n,shadowColor:o,shadowOpacity:p,points:h,lineCap:i,tension:q,hitStrokeWidth:20,x:0,y:0,opacity:r},g,s))};LineNode.defaultProps=LineNode_objectSpread(LineNode_objectSpread({},DesignLayer_nodesCommonPropTypes.defaults),{},{stroke:"#000000",strokeWidth:1,lineCap:"butt",annotationEvents:{},tension:void 0});/* harmony default export */ const AnnotationNodes_LineNode = (LineNode);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/ArrowNode.js\nvar ArrowNode_excluded=["id","name","fill","pointerLength","pointerWidth","scaleX","scaleY","rotation","annotationEvents","points","lineCap","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadowOpacity","opacity"];function ArrowNode_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function ArrowNode_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ArrowNode_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ArrowNode_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var ArrowNode=function(a){var b=a.id,c=a.name,d=a.fill,e=a.pointerLength,f=a.pointerWidth,g=a.scaleX,h=a.scaleY,i=a.rotation,j=a.annotationEvents,k=a.points,l=a.lineCap,m=a.stroke,n=a.strokeWidth,o=a.shadowOffsetX,p=a.shadowOffsetY,q=a.shadowBlur,r=a.shadowColor,s=a.shadowOpacity,t=a.opacity,u=(0,objectWithoutProperties/* default */.Z)(a,ArrowNode_excluded);return react.createElement(ReactKonvaCore_Arrow,(0,esm_extends/* default */.Z)({id:b,name:c,rotation:i,scaleX:g,scaleY:h,stroke:m,strokeWidth:n,shadowOffsetX:o,shadowOffsetY:p,shadowBlur:q,shadowColor:r,shadowOpacity:s,fill:d,x:0,y:0,points:k,pointerLength:e,pointerWidth:f,lineCap:l,opacity:t},j,u))};ArrowNode.defaultProps=ArrowNode_objectSpread(ArrowNode_objectSpread({},DesignLayer_nodesCommonPropTypes.defaults),{},{stroke:"#000000",strokeWidth:6,fill:void 0,lineCap:"butt",pointerLength:void 0,pointerWidth:void 0});/* harmony default export */ const AnnotationNodes_ArrowNode = (ArrowNode);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/AnnotationNodes.constants.js\nvar _ANNOTATION_NAMES_TO_;var ANNOTATION_NAMES_TO_COMPONENT=(_ANNOTATION_NAMES_TO_={},(0,defineProperty/* default */.Z)(_ANNOTATION_NAMES_TO_,TOOLS_IDS.RECT,AnnotationNodes_RectNode),(0,defineProperty/* default */.Z)(_ANNOTATION_NAMES_TO_,TOOLS_IDS.ELLIPSE,AnnotationNodes_EllipseNode),(0,defineProperty/* default */.Z)(_ANNOTATION_NAMES_TO_,TOOLS_IDS.POLYGON,AnnotationNodes_PolygonNode),(0,defineProperty/* default */.Z)(_ANNOTATION_NAMES_TO_,TOOLS_IDS.TEXT,AnnotationNodes_TextNode),(0,defineProperty/* default */.Z)(_ANNOTATION_NAMES_TO_,TOOLS_IDS.IMAGE,AnnotationNodes_ImageNode),(0,defineProperty/* default */.Z)(_ANNOTATION_NAMES_TO_,TOOLS_IDS.LINE,AnnotationNodes_LineNode),(0,defineProperty/* default */.Z)(_ANNOTATION_NAMES_TO_,TOOLS_IDS.ARROW,AnnotationNodes_ArrowNode),(0,defineProperty/* default */.Z)(_ANNOTATION_NAMES_TO_,TOOLS_IDS.PEN,AnnotationNodes_LineNode),_ANNOTATION_NAMES_TO_);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/MemoizedAnnotation.js\nvar MemoizedAnnotation=function(a){var b=a.annotation,c=a.annotationEvents,d=a.selectionsIds,e=ANNOTATION_NAMES_TO_COMPONENT[b.name];return react.createElement(e,(0,esm_extends/* default */.Z)({key:b.id,annotationEvents:c,draggable:d.includes(b.id)},b))};/* harmony default export */ const AnnotationNodes_MemoizedAnnotation = ((0,react.memo)(MemoizedAnnotation));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/AnnotationNodes/index.js\nvar AnnotationNodes=function(){var a=hooks_useStore(),b=a.annotations,c=void 0===b?{}:b,d=a.selectionsIds,e=void 0===d?[]:d,f=hooks_useAnnotationEvents();return (0,react.useMemo)(function(){return Object.values(c).map(function(a){return react.createElement(AnnotationNodes_MemoizedAnnotation,{key:a.id,annotation:a,annotationEvents:f,selectionsIds:e})})},[c,f,e])};/* harmony default export */ const DesignLayer_AnnotationNodes = (AnnotationNodes);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/PreviewGroup.js\nvar PreviewGroup=function(a,b){return react.createElement(ReactKonvaCore_Group,(0,esm_extends/* default */.Z)({ref:b},a))};/* harmony default export */ const DesignLayer_PreviewGroup = ((0,react.forwardRef)(PreviewGroup));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/DesignLayer/index.js\nfunction DesignLayer_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function DesignLayer_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?DesignLayer_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):DesignLayer_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var CANVAS_TO_IMG_SPACING=utils_getProperImageToCanvasSpacing(),DesignLayer=function(){var a,b,c,d,e=(0,react.useRef)(),f=hooks_useStore(),g=f.initialCanvasWidth,h=f.initialCanvasHeight,i=f.canvasWidth,j=f.canvasHeight,k=f.dispatch,l=f.toolId,m=f.canvasScale,n=f.originalImage,o=void 0===n?{}:n,p=f.finetunes,q=void 0===p?[]:p,r=f.finetunesProps,s=void 0===r?{}:r,t=f.filter,u=void 0===t?null:t,v=f.adjustments;v=void 0===v?{}:v;var w=v.rotation,x=void 0===w?0:w,y=v.crop,z=void 0===y?{}:y,A=v.isFlippedX,B=v.isFlippedY,C=f.resize,D=(0,react.useRef)(),E=(0,react.useRef)(),F=l===TOOLS_IDS.CROP,G=(0,react.useMemo)(function(){return u?[].concat((0,toConsumableArray/* default */.Z)(q),[u]):q},[q,u]),H=(0,react.useMemo)(function(){var a=o.width-CANVAS_TO_IMG_SPACING,b=o.width/o.height;return{width:a,height:a/b}},[o]),I=(0,react.useMemo)(function(){return utils_getSizeAfterRotation(o.width,o.height,x)},[o,x]),J=(0,react.useMemo)(function(){return utils_getDimensionsMinimalRatio(g,h,o.width,o.height)},[o,g,h]),K=(0,react.useMemo)(function(){return{width:H.width*J,height:H.height*J}},[H,J]),L=C.width&&!F?C.width/(null!==(a=null!==(b=z.width)&&void 0!==b?b:K.width)&&void 0!==a?a:I.width):1,M=C.height&&!F?C.height/(null!==(c=null!==(d=z.height)&&void 0!==d?d:K.height)&&void 0!==c?c:I.height):1,N=i/(2*m)-K.width*L/2,O=j/(2*m)-K.height*M/2,P=i/(2*m)-K.width/2,Q=j/(2*m)-K.height/2,R=(0,react.useMemo)(function(){return{x:Math.round(N),y:Math.round(O),abstractX:Math.round(P),abstractY:Math.round(Q),width:K.width,height:K.height,scaledBy:m}},[m,N,O,P,Q,K]),S=(0,react.useCallback)(function(){D.current?D.current.cache():setTimeout(S,0)},[]),T=utils_getSizeAfterRotation(R.width,R.height,x),U=F?1:utils_getDimensionsMinimalRatio(R.width,R.height,T.width,T.height);if((0,react.useEffect)(function(){return o&&S(),function(){var a;null===(a=D.current)||void 0===a?void 0:a.clearCache()}},[o]),(0,react.useEffect)(function(){R&&k({type:SET_SHOWN_IMAGE_DIMENSIONS,payload:{shownImageDimensions:R,designLayer:e.current,previewGroup:E.current}})},[R]),!N||!O||!R)return null;var V=utils_getCenterRotatedPoint(z.x,z.y,x),W=N+(!F&&z.width?(A?-1:1)*(R.width/2-z.x-z.width/2+V.x)*L:0),X=O+(!F&&z.height?(B?-1:1)*(R.height/2-z.y-z.height/2+V.y)*M:0),Y=F?P:W,Z=F?Q:X,$=(A?-1:1)*(F?1:L)*U,_=(B?-1:1)*(F?1:M)*U;return react.createElement(ReactKonvaCore_Layer,{id:DESIGN_LAYER_ID,ref:e,xPadding:Y,yPadding:Z,offsetX:K.width/2,offsetY:K.height/2,x:K.width*L/2+Y,y:K.height*M/2+Z,scaleX:$,scaleY:_,rotation:F?0:x,clipFunc:function clipFunc(a){var b,c,d=F&&!(null!==(b=e.current)&&void 0!==b&&null!==(c=b.attrs)&&void 0!==c&&c.isSaving),f=d?DesignLayer_objectSpread(DesignLayer_objectSpread({},R),{},{x:0,y:0}):{width:z.width||R.width,height:z.height||R.height,x:z.x||0,y:z.y||0};utils_cropImage(a,DesignLayer_objectSpread({ratio:z.ratio},f),d),e.current&&e.current.setAttrs({clipX:f.x,clipY:f.y,clipWidth:f.width,clipHeight:f.height})}},react.createElement(ReactKonvaCore_Image,(0,esm_extends/* default */.Z)({id:IMAGE_NODE_ID,image:o,width:K.width,height:K.height,offsetX:K.width/2,offsetY:K.height/2,x:K.width/2,y:K.height/2,listening:!1,filters:G,ref:D},s)),react.createElement(DesignLayer_AnnotationNodes,null),react.createElement(DesignLayer_PreviewGroup,{ref:E}))};/* harmony default export */ const Layers_DesignLayer = (DesignLayer);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/compareRatios.js\nvar compareRatios=function(a,b){return utils_toPrecisedFloat(a)===utils_toPrecisedFloat(b)};/* harmony default export */ const utils_compareRatios = (compareRatios);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/TransformersLayer/cropAreaBounding.js\nfunction cropAreaBounding_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function cropAreaBounding_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?cropAreaBounding_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):cropAreaBounding_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var boundDragging=function(a,b){var c=b.width-(2*a.radiusX||a.width),d=b.height-(2*a.radiusY||a.height);return{x:utils_toPrecisedFloat(Math.min(Math.max(a.x,0),c)),y:utils_toPrecisedFloat(Math.min(Math.max(a.y,0),d))}};var boundResizing=function(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:{},f={x:utils_toPrecisedFloat(c.abstractX*c.scaledBy),y:utils_toPrecisedFloat(c.abstractY*c.scaledBy),width:utils_toPrecisedFloat(c.width*c.scaledBy),height:utils_toPrecisedFloat(c.height*c.scaledBy)},g=cropAreaBounding_objectSpread({},b);if(b.x<f.x&&(g.x=f.x,g.width=a.x-f.x+a.width),b.y<f.y&&(g.y=f.y,g.height=a.y-f.y+a.height),g.x+g.width>f.x+f.width&&(g.width=f.x+f.width-g.x),g.y+g.height>f.y+f.height&&(g.height=f.y+f.height-g.y),d&&!utils_compareRatios(g.width/g.height,d)){var h=g.height*d,i=g.width/d;utils_toPrecisedFloat(g.y+i)<=f.y+f.height?g.height=i:g.width=h}return(e.minWidth&&g.width<=e.minWidth||e.maxWidth&&g.width>=e.maxWidth)&&(g.width=utils_restrictNumber(g.width,e.minWidth,e.maxWidth),g.x=a.x,g.y=a.y,d&&(g.height=g.width/d)),(e.minHeight&&b.height<=e.minHeight||e.maxHeight&&b.height>=e.maxHeight)&&(g.height=utils_restrictNumber(g.height,e.minHeight,e.maxHeight),g.x=a.x,g.y=a.y,d&&(g.width=g.height*d)),g};\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/TransformersLayer/CropTransformer.js\nfunction CropTransformer_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function CropTransformer_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?CropTransformer_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):CropTransformer_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var CropTransformer=function(){var a=hooks_useStore(),b=a.dispatch,c=a.theme,d=a.designLayer,e=a.originalImage,f=a.shownImageDimensions,g=a.adjustments;g=void 0===g?{}:g;var h=g.crop,i=void 0===h?{}:h,j=g.isFlippedX,k=g.isFlippedY,l=a.resize,m=void 0===l?{}:l,n=a.config,o=a.t,p=(0,react.useRef)(),q=(0,react.useRef)(),r=(0,react.useRef)(),s=(0,react.useRef)(),t=n[TOOLS_IDS.CROP],u=i.ratio||t.ratio,v=u===CUSTOM_CROP,w=u===ELLIPSE_CROP,z=function(){return u===ORIGINAL_CROP?e.width/e.height:u},A=function(a,c){var d=a.width,e=a.height,g=a.x,h=a.y,l={x:j?f.width-g-d:g,y:k?f.height-h-e:h,width:d,height:e},n=i.width>=m.width&&i.height>=m.height;m.width&&m.height&&(d<m.width||e<m.height)&&n&&b({type:SET_FEEDBACK,payload:{feedback:{message:o("cropSizeLowerThanResizedWarning"),status:FEEDBACK_STATUSES.WARNING}}}),b({type:SET_CROP,payload:CropTransformer_objectSpread(CropTransformer_objectSpread(CropTransformer_objectSpread({},i),l),{},{dismissHistory:c})})},B=function(a,b){var c,d;q.current&&p.current&&q.current.nodes([p.current]);var e=s.current,f={width:a,height:b,x:null!==(c=i.x)&&void 0!==c?c:0,y:null!==(d=i.y)&&void 0!==d?d:0};A(boundResizing(f,f,CropTransformer_objectSpread(CropTransformer_objectSpread({},e),{},{abstractX:0,abstractY:0}),!(v||w)&&z(),t),!0)};if((0,react.useEffect)(function(){return d&&q.current&&p.current&&(r.current&&r.current.cache(),q.current.nodes([p.current])),function(){r.current&&r.current.clearCache()}},[d,e,f]),(0,react.useEffect)(function(){if(s.current){var a,b,c=s.current;B(null!==(a=i.width)&&void 0!==a?a:c.width,null!==(b=i.height)&&void 0!==b?b:c.height)}},[u]),(0,react.useEffect)(function(){q.current&&p.current&&s.current&&i.width&&i.height&&B(i.width,i.height)},[t,f.width,f.height]),(0,react.useEffect)(function(){f&&(s.current=f)},[f]),!d)return null;var C,D=v||w?void 0:["top-left","bottom-left","top-right","bottom-right"],E=function(a){var b=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1];a.target&&A({width:a.target.width()*a.target.scaleX(),height:a.target.height()*a.target.scaleY(),x:a.target.x(),y:a.target.y()},b)};if(!i.width&&!i.height){var F=1>f.scaledBy?f.scaledBy:1,G=CropTransformer_objectSpread(CropTransformer_objectSpread({},f),{},{width:f.width/F,height:f.height/F});C=boundResizing(G,CropTransformer_objectSpread(CropTransformer_objectSpread({},G),{},{x:0,y:0}),CropTransformer_objectSpread(CropTransformer_objectSpread({},G),{},{abstractX:0,abstractY:0}),!(v||w)&&z(),t)}else C=i;var H=C,I=H.x,J=void 0===I?0:I,x=H.y,K=void 0===x?0:x,y=H.width,L=H.height,M={x:j?f.width-J-y:J,y:k?f.height-K-L:K,ref:p,fill:"#FFFFFF",scaleX:1,scaleY:1,globalCompositeOperation:"destination-out",onDragEnd:E,onDragMove:function limitDragging(a){var b=a.target;b.setAttrs(boundDragging(b.attrs,s.current))},onTransformEnd:E,draggable:!0};return react.createElement(react.Fragment,null,react.createElement(ReactKonvaCore_Image,{image:e,x:j?f.width:0,y:k?f.height:0,width:f.width,height:f.height,filters:[lib.Filters.Blur,lib.Filters.Brighten],blurRadius:10,brightness:-.3,scaleX:j?-1:1,scaleY:k?-1:1,ref:r}),w?react.createElement(ReactKonvaCore_Ellipse,(0,esm_extends/* default */.Z)({},M,{radiusX:y/2,radiusY:L/2,offset:{x:-y/2,y:-L/2}})):react.createElement(ReactKonvaCore_Rect,(0,esm_extends/* default */.Z)({},M,{width:y,height:L})),react.createElement(ReactKonvaCore_Transformer,{centeredScaling:!1,flipEnabled:!1,rotateEnabled:!1,nodes:p.current?[p.current]:[],anchorSize:14,anchorCornerRadius:7,enabledAnchors:D,ignoreStroke:!1,anchorStroke:c.palette["accent-primary"],anchorFill:c.palette["access-primary"],anchorStrokeWidth:2,borderStroke:c.palette["accent-primary"],borderStrokeWidth:2,borderDash:[4],keepRatio:!v||!w,ref:q,boundBoxFunc:function boundBoxFunc(a,b){return boundResizing(a,b,s.current,!(v||w)&&z(),t)}}))};/* harmony default export */ const TransformersLayer_CropTransformer = (CropTransformer);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/TransformersLayer/NodesTransformer.js\nvar NodesTransformer=function(){var a,b=hooks_useStore(),c=b.selectionsIds,d=void 0===c?[]:c,e=b.theme,f=b.designLayer,g=b.dispatch,h=b.config.useCloudimage,i=(0,react.useMemo)(function(){return null!==f&&void 0!==f&&f.findOne?d.map(function(a){return f.findOne("#".concat(a))}).filter(Boolean):[]},[d]),j=function(){1===i.length&&i[0].name()===TOOLS_IDS.TEXT&&g({type:ENABLE_TEXT_CONTENT_EDIT,payload:{textIdOfEditableContent:i[0].id()}})};return react.createElement(ReactKonvaCore_Transformer,{id:NODES_TRANSFORMER_ID,centeredScaling:!1,rotationSnaps:[0,45,90,135,180,225,270,315],nodes:i,rotateAnchorOffset:30,anchorSize:14,anchorCornerRadius:7,padding:1===i.length?null!==(a=i[0].attrs.padding)&&void 0!==a?a:1:1,ignoreStroke:!1,anchorStroke:e.palette["accent-primary"],anchorFill:e.palette["access-primary"],anchorStrokeWidth:2,borderStroke:e.palette["accent-primary"],borderStrokeWidth:2,borderDash:[4],rotateEnabled:!h,onMouseOver:function changePointerIconToMove(){g({type:CHANGE_POINTER_ICON,payload:{pointerCssIcon:POINTER_ICONS.MOVE}})},onMouseLeave:function changePointerIconToDraw(){g({type:CHANGE_POINTER_ICON,payload:{pointerCssIcon:POINTER_ICONS.DRAW}})},onDblClick:j,onDblTap:j,flipEnabled:!0,shouldOverdrawWholeArea:!0})};/* harmony default export */ const TransformersLayer_NodesTransformer = (NodesTransformer);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/TransformersLayer/index.js\nvar TransformersLayer=function(){var a=hooks_useStore(),b=a.toolId,c=a.shownImageDimensions;return react.createElement(ReactKonvaCore_Layer,{id:TRANSFORMERS_LAYER_ID,x:c.abstractX||0,y:c.abstractY||0},react.createElement(TransformersLayer_NodesTransformer,null),b===TOOLS_IDS.CROP&&react.createElement(TransformersLayer_CropTransformer,null))};/* harmony default export */ const Layers_TransformersLayer = (TransformersLayer);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Layers/index.js\n\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/delete-outline.js\n\n\nvar icons_delete_outline_excluded = ["color", "size"];\n\n\nvar delete_outline_DeleteOutline = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, icons_delete_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M15.75 17.3125C15.75 16.4496 16.4496 15.75 17.3125 15.75C18.1754 15.75 18.875 16.4496 18.875 17.3125L18.875 32.9375C18.875 33.8005 18.1754 34.5 17.3125 34.5C16.4496 34.5 15.75 33.8005 15.75 32.9375L15.75 17.3125Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.6875 15.75C25.8246 15.75 25.125 16.4496 25.125 17.3125L25.125 32.9375C25.125 33.8005 25.8246 34.5 26.6875 34.5C27.5504 34.5 28.25 33.8005 28.25 32.9375V17.3125C28.25 16.4496 27.5504 15.75 26.6875 15.75Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M12.625 6.37503V3.25003C12.625 1.52414 14.0241 0.125031 15.75 0.125031H28.25C29.9759 0.125031 31.375 1.52414 31.375 3.25003V6.37503H42.3125C43.1754 6.37503 43.875 7.07459 43.875 7.93753C43.875 8.80048 43.1754 9.50003 42.3125 9.50003H39.1875V40.75C39.1875 42.4759 37.7884 43.875 36.0625 43.875H7.9375C6.21161 43.875 4.8125 42.4759 4.8125 40.75V9.50003L1.6875 9.50003C0.824554 9.50003 0.125 8.80048 0.125 7.93753C0.125 7.07459 0.824555 6.37503 1.6875 6.37503H12.625ZM15.75 3.25003H28.25V6.37503H15.75V3.25003ZM7.9375 9.50003L7.9375 40.75H36.0625V9.50003H7.9375Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const icons_delete_outline = (delete_outline_DeleteOutline);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/duplicate.js\n\n\nvar duplicate_excluded = ["color", "size"];\n\n\nvar Duplicate = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, duplicate_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M0.312012 34.847V3.39883C0.312012 1.67294 1.71112 0.273834 3.43701 0.273834H26.807C28.5329 0.273834 29.932 1.67294 29.932 3.39883V34.847C29.932 36.5729 28.5329 37.972 26.807 37.972H3.43701C1.71112 37.972 0.312012 36.5729 0.312012 34.847ZM3.43701 34.847V3.39883L26.807 3.39883L26.807 34.847L3.43701 34.847Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M35.6874 12.5434C35.6874 11.6805 34.9878 10.9809 34.1249 10.9809C33.2619 10.9809 32.5624 11.6805 32.5624 12.5434V40.6009H9.89033C9.02739 40.6009 8.32783 41.3005 8.32783 42.1634C8.32783 43.0263 9.02739 43.7259 9.89033 43.7259H34.1249C34.9878 43.7259 35.6874 43.0263 35.6874 42.1634V12.5434Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const duplicate = (Duplicate);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/NodeControls/NodeControls.styled.js\nvar StyledNodeControls=styled_components_browser_esm.div.withConfig({componentId:"sc-1tst9ex-0"})(function(a){var b=a.theme,c=a.top,d=a.left;return"\\n  position: absolute;\\n  z-index: 1;\\n  background: ".concat(b.palette["bg-secondary"],";\\n  border-radius: 2px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  box-shadow: 0px 1px 2px ").concat(b.palette["light-shadow"],";\\n  top: ").concat((c||0)+8,"px;\\n  left: ").concat((d||0)+4,"px;\\n  transform: translateX(-50%);\\n  height: 32px;\\n")});\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/NodeControls/index.js\nvar NodeControls=function(){var a=hooks_useStore(),b=a.selectionsIds,c=void 0===b?[]:b,d=a.designLayer,e=a.annotations,f=a.dispatch,g=(0,react.useState)({left:0,top:0}),h=(0,slicedToArray/* default */.Z)(g,2),i=h[0],j=h[1],k=(0,react.useMemo)(function(){var a;return null===d||void 0===d||null===(a=d.getStage())||void 0===a?void 0:a.findOne("#".concat(NODES_TRANSFORMER_ID))},[d]),l=c.length,m=utils_debounce(function(){k&&j({left:(k.x()+k.width()/2)*k.scaleX(),top:(k.y()+k.height())*k.scaleY()})},0);if((0,react.useEffect)(function(){m()},[c,k,e]),0===l||!k)return null;return react.createElement(StyledNodeControls,{className:"FIE_annotation-controls-overlay",left:i.left,top:i.top},c[0]!==WATERMARK_ANNOTATION_ID&&react.createElement(icon_button_component,{color:"link",size:"sm",onClick:function duplicateSelectedNodes(){f({type:DUPLICATE_ANNOTATIONS,payload:{annotationsIds:c}})}},react.createElement(duplicate,null)),react.createElement(icon_button_component,{color:"link",size:"sm",onClick:function removeSelectedNodes(){f({type:REMOVE_ANNOTATIONS,payload:{annotationsIds:c}})}},react.createElement(icons_delete_outline,null)))};/* harmony default export */ const components_NodeControls = (NodeControls);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/MainCanvas/touchZoomingEvents.js\nfunction touchZoomingEvents_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function touchZoomingEvents_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?touchZoomingEvents_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):touchZoomingEvents_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function getDistance(a,b){return Math.sqrt(Math.pow(b.x-a.x,2)+Math.pow(b.y-a.y,2))}function touchZoomingEvents_getCenter(a,b){return{x:(a.x+b.x)/2,y:(a.y+b.y)/2}}var lastCenter=null,lastDist=0;var zoomOnTouchesMove=function(a,b){a.evt.preventDefault();var c=a.evt.touches[0],d=a.evt.touches[1];if(c&&d){var e=a.currentTarget;e.isDragging()&&e.stopDrag();var f={x:c.clientX,y:c.clientY},g={x:d.clientX,y:d.clientY};if(!lastCenter)return void(lastCenter=touchZoomingEvents_getCenter(f,g));var h=touchZoomingEvents_getCenter(f,g),i=getDistance(f,g);lastDist||(lastDist=i);var j={x:(h.x-e.x())/e.scaleX(),y:(h.y-e.y())/e.scaleX()},k=e.scaleX()*(i/lastDist),l=h.x-lastCenter.x,m=h.y-lastCenter.y,n={x:h.x-j.x*k+l,y:h.y-j.y*k+m};lastDist=i,lastCenter=h,b(touchZoomingEvents_objectSpread(touchZoomingEvents_objectSpread({},n),{},{factor:k,preparedDimensions:!0}))}};var endTouchesZooming=function(a){lastDist=0,lastCenter=null,"function"==typeof a&&a()};\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/MainCanvas/MainCanvas.styled.js\nvar CanvasContainer=styled_components_browser_esm.div.withConfig({componentId:"sc-3ln9py-0"})(["width:100%;position:relative;height:calc(100% - 94px - 12px);background:",";overflow:hidden;min-height:250px;flex-grow:1;"],function(a){var b=a.theme;return b.palette["bg-primary"]}),StyledOrignalImage=styled_components_browser_esm.img.withConfig({componentId:"sc-3ln9py-1"})(["max-width:98%;max-height:98%;box-shadow:0 0 0 5px rgba(0,0,0,0.1);position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);z-index:2;"]),StyledCanvasNode=styled_components_browser_esm(ReactKonvaCore_Stage).withConfig({componentId:"sc-3ln9py-2"})(["outline:none;"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/MainCanvas/CanvasNode.js\nfunction CanvasNode_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function CanvasNode_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?CanvasNode_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):CanvasNode_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var ZOOM_DELTA_TO_SCALE_CONVERT_FACTOR=.006,CanvasNode=function(a){var b=a.children;ReactKonvaCore_useStrictMode(!0);var c=(0,react.useRef)(),d=hooks_useStore(),f=d.dispatch,g=d.pointerCssIcon,h=d.tabId,i=d.toolId,j=d.canvasWidth,k=d.canvasHeight,l=d.canvasScale,m=d.selectionsIds,n=void 0===m?[]:m,o=d.zoom,p=void 0===o?{}:o,q=d.config.previewPixelRatio;lib.pixelRatio=q;var r=DEFAULT_ZOOM_FACTOR,s=i!==TOOLS_IDS.CROP,t=(0,react.useState)(h!==TABS_IDS.ANNOTATE&&h!==TABS_IDS.WATERMARK&&p.factor>r),u=(0,slicedToArray/* default */.Z)(t,2),v=u[0],w=u[1],x=(0,react.useMemo)(function(){return{cursor:g===POINTER_ICONS.DEFAULT&&h===TABS_IDS.ANNOTATE?POINTER_ICONS.DRAW:g}},[h,g]),y=function(a){f({type:ZOOM_CANVAS,payload:a})},z=(0,react.useCallback)(function(a){var b,c;a.evt.preventDefault(),null===(b=(c=a.currentTarget).container)||void 0===b?void 0:b.call(c).focus(),a.target instanceof lib.Stage&&0<n.length&&f({type:CLEAR_ANNOTATIONS_SELECTIONS})},[n]),A=function(){return w(h!==TABS_IDS.ANNOTATE||h===TABS_IDS.WATERMARK)},B=function(a){("Space"===a.code||"Control"===a.key)&&!a.repeat&&p.factor>r&&s&&(a.preventDefault(),w(!0),f({type:CHANGE_POINTER_ICON,payload:{pointerCssIcon:POINTER_ICONS.DRAG}}))},C=function(a){"Space"===a.code&&(a.preventDefault(),A())},D=function(){c.current&&c.current.container().focus()};(0,react.useEffect)(function(){f({type:CHANGE_POINTER_ICON,payload:{pointerCssIcon:POINTER_ICONS[v?"DRAG":"DEFAULT"]}})},[v]),(0,react.useEffect)(function(){w(h!==TABS_IDS.ANNOTATE&&h!==TABS_IDS.WATERMARK&&p.factor>r);var a;return c.current&&(a=c.current.container(),a.addEventListener("mouseenter",D),a.addEventListener("keydown",B),a.addEventListener("keyup",C)),function(){a&&(a.removeEventListener("mouseenter",D),a.removeEventListener("keydown",B),a.removeEventListener("keyup",C))}},[h,p.factor,r]);var E=l*(s&&p.factor||r);return react.createElement(StyledCanvasNode,{className:"FIE_canvas-node",tabIndex:-1,ref:c,width:j,height:k,scaleX:E,scaleY:E,x:s&&p.x||null,y:s&&p.y||null,zoomFactor:s&&p.factor||r,onWheel:s?function handleZoom(a){a.evt.preventDefault();var b=(p.factor||r)+a.evt.deltaY*-ZOOM_DELTA_TO_SCALE_CONVERT_FACTOR,c=a.currentTarget.getPointerPosition();y(CanvasNode_objectSpread(CanvasNode_objectSpread({},c),{},{factor:b}))}:void 0,onTap:z,onClick:z,onTouchMove:s?function(a){return zoomOnTouchesMove(a,y)}:void 0,onDragStart:function preventDraggingIfMultiTouches(a){var b;1<(null===(b=a.evt.touches)||void 0===b?void 0:b.length)&&w(!1)},onTouchEnd:s?function endTouchesZoomingEnablePanning(){endTouchesZooming(A)}:void 0,dragBoundFunc:function dragBoundFunc(a){var b=Math.min(0,Math.max(a.x,j*(1-p.factor))),c=Math.min(0,Math.max(a.y,k*(1-p.factor)));return{x:b,y:c}},draggable:s&&v,onDragEnd:function handleCanvasDragEnd(a){a.currentTarget.draggable()&&"stage"===a.target.nodeType.toLowerCase()&&s&&v&&y({factor:p.factor,x:a.target.x(),y:a.target.y(),preparedDimensions:!0})},style:x},b)};/* harmony default export */ const MainCanvas_CanvasNode = ((0,react.memo)(CanvasNode));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/MainCanvas/index.js\nvar MainCanvas=function(){var a=hooks_useResizeObserver(),b=(0,slicedToArray/* default */.Z)(a,1),c=b[0],d=hooks_useStore(),e=(0,react.useCallback)(function(a){var b=a.width,c=a.height;d.dispatch({type:SET_CANVAS_SIZE,payload:{canvasWidth:b,canvasHeight:c}})},[]),f=(0,react.useCallback)(function(a){c(a,e)},[]);return react.createElement(CanvasContainer,{className:"FIE_canvas-container",ref:f},!d.textIdOfEditableContent&&react.createElement(components_NodeControls,null),d.isShowOriginalImage&&react.createElement(StyledOrignalImage,{className:"FIE_original-image-compare",src:d.originalImage.src}),react.createElement(MainCanvas_CanvasNode,null,react.createElement(context_AppProviderOverridenValue,{overridingValue:d},react.createElement(Layers_DesignLayer,null),react.createElement(Layers_TransformersLayer,null))))};/* harmony default export */ const components_MainCanvas = (MainCanvas);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Separator/Separator.styled.js\nvar StyledSeparator=styled_components_browser_esm.div.withConfig({componentId:"sc-etsyb6-0"})(["display:inline-block;height:",";width:",";border-radius:1px;background:#dfe7ed;"],function(a){return a.height},function(a){return a.width});\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Separator/index.js\nvar Separator=function(a){var b=a.height,c=a.width;return react.createElement(StyledSeparator,{height:b,width:c})};Separator.defaultProps={height:"11px",width:"1px"};/* harmony default export */ const common_Separator = (Separator);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/cross-outline.js\n\n\nvar cross_outline_excluded = ["color", "size"];\n\n\nvar CrossOutline = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, cross_outline_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M29.5089 27.2774C30.1253 27.8938 30.1253 28.8932 29.5089 29.5096C28.8925 30.126 27.8932 30.126 27.2768 29.5096L15.0002 17.2327L2.72342 29.5097C2.10703 30.1261 1.10767 30.1261 0.491282 29.5097C-0.125105 28.8934 -0.125105 27.894 0.491283 27.2776L12.7681 15.0006L0.491159 2.72344C-0.125226 2.10704 -0.125228 1.10766 0.49116 0.49126C1.10755 -0.125138 2.10691 -0.125139 2.72329 0.49126L15.0002 12.7684L27.2769 0.491449C27.8933 -0.124948 28.8927 -0.12495 29.5091 0.491449C30.1254 1.10785 30.1254 2.10723 29.5091 2.72363L17.2323 15.0006L29.5089 27.2774Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const cross_outline = (CrossOutline);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/Topbar.styled.js\nvar StyledTopbar=styled_components_browser_esm.div.withConfig({componentId:"sc-21g986-0"})(["padding:12px 12px 8px 12px;box-sizing:border-box;position:relative;width:100%;display:flex;align-items:center;justify-content:space-between;",";[data-phone=\'true\'] &{padding:6px 6px 4px 6px;}"],function(a){var b=a.reverseDirection;return b?"flex-direction: row-reverse":""}),StyledHistoryButton=styled_components_browser_esm(icon_button_component).withConfig({componentId:"sc-21g986-1"})(["margin:",";:first-of-type{margin:",";}width:23px;height:23px;padding:4px;"],function(a){var b=a.margin;return null!==b&&void 0!==b?b:"0 4px"},function(a){var b=a.margin;return null!==b&&void 0!==b?b:"0 4px 0 8px"}),StyledSmallButton=styled_components_browser_esm(icon_button_component).withConfig({componentId:"sc-21g986-2"})(["width:20px;height:20px;margin:0 ",";padding:4px;"],function(a){var b;return null!==(b=a.horizontalMargin)&&void 0!==b?b:"4px"}),StyledFlexCenterAlignedContainer=styled_components_browser_esm.div.withConfig({componentId:"sc-21g986-3"})(["display:flex;align-items:center;",";"],function(a){var b=a.reverseDirection;return b?"flex-direction: row-reverse":""}),StyledZoomPercentageLabel=styled_components_browser_esm(label_component).withConfig({componentId:"sc-21g986-4"})(["cursor:pointer;"]),StyledBackButtonLabel=styled_components_browser_esm.span.withConfig({componentId:"sc-21g986-5"})(["font-size:11px;line-height:12px;"]),StyledCloseOrBackButton=styled_components_browser_esm(icon_button_component).withConfig({componentId:"sc-21g986-6"})(["padding:0;z-index:111;"]),StyledSaveButton=styled_components_browser_esm(button_component).withConfig({componentId:"sc-21g986-7"})(["padding:4px 12px;"]),StyledFileNameInput=styled_components_browser_esm(input_component).withConfig({componentId:"sc-21g986-8"})(["width:200px;"]),StyledFileExtensionSelect=styled_components_browser_esm(select_component).withConfig({componentId:"sc-21g986-9"})(["width:60px;margin-left:4px;"]),StyledQualityWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-21g986-10"})(["width:100%;margin-top:8px;"]),StyledResizeOnSave=styled_components_browser_esm.div.withConfig({componentId:"sc-21g986-11"})(["margin-top:8px;width:100%;"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/CloseButton.js\nvar CloseButton=function(){var a=hooks_useStore(),b=a.haveNotSavedChanges,c=a.config.onClose;if("function"!=typeof c)return react.createElement("span",null);return react.createElement(StyledCloseOrBackButton,{className:"FIE_topbar-close-button",color:"link",size:"sm",onClick:function closeWithReason(){c(CLOSING_REASONS.CLOSE_BUTTON,b)}},c&&react.createElement(cross_outline,null))};/* harmony default export */ const Topbar_CloseButton = (CloseButton);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/save-as.js\n\n\nvar save_as_excluded = ["color", "size"];\n\n\nvar SaveAs = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, save_as_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 26 26",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M17.3945 21.1062H8.60547C8.20098 21.1062 7.87305 21.4342 7.87305 21.8387C7.87305 22.2431 8.20098 22.5711 8.60547 22.5711H17.3945C17.799 22.5711 18.127 22.2431 18.127 21.8387C18.127 21.4342 17.799 21.1062 17.3945 21.1062Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M17.3945 15.2469H8.60547C8.20098 15.2469 7.87305 15.5748 7.87305 15.9793C7.87305 16.3838 8.20098 16.7117 8.60547 16.7117H17.3945C17.799 16.7117 18.127 16.3838 18.127 15.9793C18.127 15.5748 17.799 15.2469 17.3945 15.2469Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M17.3945 18.1765H8.60547C8.20098 18.1765 7.87305 18.5045 7.87305 18.909C7.87305 19.3135 8.20098 19.6414 8.60547 19.6414H17.3945C17.799 19.6414 18.127 19.3135 18.127 18.909C18.127 18.5045 17.799 18.1765 17.3945 18.1765Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M16.6621 0.5H6.4082V6.84766H16.6621V0.5Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M25.2854 4.6208L21.3792 0.714551C21.2418 0.577197 21.0556 0.5 20.8613 0.5H18.127V7.58008C18.127 7.98457 17.799 8.3125 17.3945 8.3125H5.67578C5.27129 8.3125 4.94336 7.98457 4.94336 7.58008V0.5H1.23242C0.82793 0.5 0.5 0.82793 0.5 1.23242V24.7676C0.5 25.1721 0.82793 25.5 1.23242 25.5C1.45923 25.5 24.463 25.5 24.7676 25.5C25.1721 25.5 25.5 25.1721 25.5 24.7676V5.13867C25.5 4.94443 25.4228 4.75815 25.2854 4.6208ZM19.5918 24.0352H6.4082V13.7812H19.5918V24.0352Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const save_as = (SaveAs);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal/types/size.js\nvar modal_types_size_Size = {\n  Xs: \'xs\',\n  Sm: \'sm\',\n  Md: \'md\',\n  Lg: \'lg\',\n  Xl: \'xl\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal/modal-menu-context.js\n\nvar ModalMenuContext = /*#__PURE__*/react.createContext({\n  modalOpened: false\n});\n\nif (false) {}\n\n/* harmony default export */ const modal_menu_context = (ModalMenuContext);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal/modal.mixin.js\n\n\nvar _modalSizeMixin;\n\n\n\nvar modalSizeMixin = (_modalSizeMixin = {}, (0,defineProperty/* default */.Z)(_modalSizeMixin, modal_types_size_Size.Xs, Ce(["max-width:300px;"])), (0,defineProperty/* default */.Z)(_modalSizeMixin, modal_types_size_Size.Sm, Ce(["max-width:600px;"])), (0,defineProperty/* default */.Z)(_modalSizeMixin, modal_types_size_Size.Md, Ce(["max-width:960px;"])), (0,defineProperty/* default */.Z)(_modalSizeMixin, modal_types_size_Size.Lg, Ce(["max-width:1280px;"])), (0,defineProperty/* default */.Z)(_modalSizeMixin, modal_types_size_Size.Xl, Ce(["max-width:1920px;"])), _modalSizeMixin);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal/modal.styles.js\n\n\n\n\n\n\nvar modal_styles_baseClassName = \'Modal\';\nvar Wrapper = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_styles_baseClassName, \'Wrapper\')\n}).withConfig({\n  componentId: "sc-80m07l-0"\n})(function (_ref) {\n  var open = _ref.open;\n  return Ce(["position:fixed;right:0px;bottom:0px;top:0px;left:0px;z-index:1200;visibility:", ";"], open ? \'visible\' : \'hidden\');\n});\nvar modal_styles_Overlay = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_styles_baseClassName, \'Overlay\')\n}).withConfig({\n  componentId: "sc-80m07l-1"\n})(function (_ref2) {\n  var open = _ref2.open;\n  return Ce(["position:fixed;right:0px;bottom:0px;top:0px;left:0px;background-color:rgba(0,0,0,0.5);z-index:-1;transition:opacity 251ms cubic-bezier(0.4,0,0.2,1) 0ms;opacity:", ";"], open ? \'1\' : \'0\');\n});\nvar modal_styles_Container = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_styles_baseClassName, \'Container\')\n}).withConfig({\n  componentId: "sc-80m07l-2"\n})(function (_ref3) {\n  var theme = _ref3.theme,\n      _ref3$open = _ref3.open,\n      open = _ref3$open === void 0 ? false : _ref3$open,\n      _ref3$fullWidth = _ref3.fullWidth,\n      fullWidth = _ref3$fullWidth === void 0 ? false : _ref3$fullWidth,\n      _ref3$maxWidth = _ref3.maxWidth,\n      maxWidth = _ref3$maxWidth === void 0 ? modal_types_size_Size.Sm : _ref3$maxWidth;\n  return Ce(["position:absolute;overflow-x:hidden;overflow-y:auto;transition:opacity 251ms cubic-bezier(0.4,0,0.2,1) 0ms,transform 167ms cubic-bezier(0.4,0,0.2,1) 0ms;outline:0;border-radius:", ";background-color:", ";box-shadow:0px 2px 4px ", ";visibility:", ";opacity:", ";display:flex;max-height:calc(100% - 64px);flex-direction:column;", " ", " top:50%;left:50%;transform:translate(-50%,-50%);"], theme.shape.borderRadius[BorderRadiusSize.Md], theme.palette[Color.BackgroundSecondary], theme.palette[Color.LightShadow], open ? \'visible\' : \'hidden\', open ? \'1\' : \'0\', fullWidth && Ce(["width:calc(100% - 64px);"]), modalSizeMixin[maxWidth]);\n});\nvar Modal = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-80m07l-3"\n})(function () {\n  return Ce(["position:relative;padding-top:8px;padding-bottom:8px;margin:0;padding:0;outline:0;display:flex;flex-direction:column;"]);\n});\nvar modal_styles_Styled = applyDisplayNames({\n  Modal: Modal,\n  Wrapper: Wrapper,\n  Overlay: modal_styles_Overlay,\n  Container: modal_styles_Container\n});\n/* harmony default export */ const modal_styles = (modal_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal/modal.component.js\n\n\n\nvar modal_component_excluded = ["children", "open", "onClose", "maxWidth", "fullWidth"];\n\nfunction modal_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction modal_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { modal_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { modal_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\n\n\nvar isValidSingleFragmentChildren = function isValidSingleFragmentChildren(children) {\n  return children && /*#__PURE__*/(0,react.isValidElement)(children) && react.Children.count(children) === 1 && children.type === react.Fragment;\n};\n\nvar modal_component_Modal = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _children = _ref.children,\n      open = _ref.open,\n      onClose = _ref.onClose,\n      maxWidth = _ref.maxWidth,\n      fullWidth = _ref.fullWidth,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, modal_component_excluded);\n\n  var children = isValidSingleFragmentChildren(_children) ? _children.props.children : _children; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  var target = document.querySelector(\'body\');\n  (0,react.useEffect)(function () {\n    if (open) {\n      document.body.classList.add(\'Modal-open\');\n    } else {\n      document.body.classList.remove(\'Modal-open\');\n    }\n\n    return function () {\n      document.body.classList.remove(\'Modal-open\');\n    };\n  }, [open]);\n\n  var handleClose = function handleClose() {\n    if (typeof onClose === \'function\') {\n      onClose();\n    }\n  };\n\n  (0,react.useEffect)(function () {\n    var keyListener = function keyListener(ev) {\n      if (ev.key === \'Escape\') {\n        handleClose();\n      }\n    };\n\n    document.addEventListener(\'keydown\', keyListener);\n    return function () {\n      return document.removeEventListener(\'keydown\', keyListener);\n    };\n  });\n\n  var render = function render() {\n    return /*#__PURE__*/react.createElement(modal_menu_context.Provider, {\n      value: {\n        modalOpened: Boolean(open)\n      }\n    }, /*#__PURE__*/react.createElement(modal_styles.Wrapper, {\n      open: Boolean(open),\n      ref: ref\n    }, /*#__PURE__*/react.createElement(modal_styles.Overlay, {\n      onClick: handleClose,\n      open: Boolean(open)\n    }), /*#__PURE__*/react.createElement(modal_styles.Container, (0,esm_extends/* default */.Z)({}, rest, {\n      maxWidth: maxWidth,\n      fullWidth: fullWidth,\n      open: Boolean(open)\n    }), /*#__PURE__*/react.createElement(modal_styles.Modal, null, react.Children.map(children, function (child) {\n      if ( /*#__PURE__*/(0,react.isValidElement)(child) && child.type.displayName === \'ModalTitle\') {\n        return /*#__PURE__*/react.cloneElement(child, modal_component_objectSpread({\n          onClose: handleClose\n        }, child.props || {}));\n      }\n\n      return child;\n    })))));\n  };\n\n  return /*#__PURE__*/(0,react_dom.createPortal)(render(), target);\n});\nvar modal_component_defaultProps = {\n  open: false,\n  fullWidth: false,\n  maxWidth: modal_types_size_Size.Xs\n};\nmodal_component_Modal.defaultProps = modal_component_defaultProps;\nvar modal_component_propTypes = {\n  onClose: (prop_types_default()).func.isRequired,\n  children: (prop_types_default()).node.isRequired,\n  maxWidth: prop_types_default().oneOf(objectValues(modal_types_size_Size)),\n  open: (prop_types_default()).bool,\n  fullWidth: (prop_types_default()).bool\n};\nmodal_component_Modal.propTypes = modal_component_propTypes;\n/* harmony default export */ const modal_component = (modal_component_Modal);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal-content/modal-content.styles.js\n\n\nvar modal_content_styles_baseClassName = \'ModalContent\';\nvar ModalContent = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_content_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-1ng1w0v-0"\n})(function () {\n  return Ce(["position:relative;padding:15px 16px;"]);\n});\nvar modal_content_styles_Styled = applyDisplayNames({\n  ModalContent: ModalContent\n});\n/* harmony default export */ const modal_content_styles = (modal_content_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal-content/modal-content.component.js\n\n\nvar modal_content_component_excluded = ["children"];\n\n\n\n\nvar modal_content_component_ModalContent = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, modal_content_component_excluded);\n\n  return /*#__PURE__*/react.createElement(modal_content_styles.ModalContent, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), children);\n});\nmodal_content_component_ModalContent.defaultProps = {};\nmodal_content_component_ModalContent.propTypes = {\n  children: (prop_types_default()).node.isRequired\n};\nmodal_content_component_ModalContent.displayName = \'ModalContent\';\n/* harmony default export */ const modal_content_component = (modal_content_component_ModalContent);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal-actions/types/align.js\nvar Align = {\n  Left: \'left\',\n  Center: \'center\',\n  Right: \'right\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal-actions/modal-actions.styles.js\n\n\n\nvar modal_actions_styles_baseClassName = \'ModalActions\';\nvar ModalActions = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_actions_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-1wg6u00-0"\n})(function (_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? Align.Center : _ref$align;\n  return Ce(["position:relative;display:flex;align-items:center;padding:12px 16px;justify-content:", ";> *:not(:first-child){margin-left:8px;}"], align === Align.Right ? \'flex-end\' : align);\n});\nvar modal_actions_styles_Styled = applyDisplayNames({\n  ModalActions: ModalActions\n});\n/* harmony default export */ const modal_actions_styles = (modal_actions_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal-actions/modal-actions.component.js\n\n\nvar modal_actions_component_excluded = ["children"];\n\n\n\n\n\nvar modal_actions_component_ModalActions = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, modal_actions_component_excluded);\n\n  return /*#__PURE__*/react.createElement(modal_actions_styles.ModalActions, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), children);\n});\nmodal_actions_component_ModalActions.defaultProps = {\n  align: Align.Center\n};\nmodal_actions_component_ModalActions.propTypes = {\n  children: (prop_types_default()).node.isRequired,\n  align: prop_types_default().oneOf(objectValues(Align))\n};\nmodal_actions_component_ModalActions.displayName = \'ModalActions\';\n/* harmony default export */ const modal_actions_component = (modal_actions_component_ModalActions);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/cross.js\n\n\nvar cross_excluded = ["color", "size"];\n\n\nvar Cross = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, cross_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M29.9081 25.0577L45.8451 9.12074C46.5381 8.42782 46.8845 7.61942 46.8845 6.58005C46.8845 5.54068 46.5381 4.73228 45.8451 4.03937C44.4593 2.65354 42.1496 2.65354 40.8793 4.03937L24.9423 20.0919L9.00525 4.15486C7.61942 2.76903 5.4252 2.76903 4.03937 4.15486C3.34646 4.84777 3 5.65617 3 6.58005C3 7.50394 3.34646 8.42782 4.03937 9.12074L19.9764 25.0577L4.03937 40.9948C3.34646 41.6877 3 42.4961 3 43.42C3 44.3438 3.34646 45.2677 4.03937 45.9606C5.4252 47.3465 7.73491 47.3465 9.00525 45.9606L24.9423 30.0236L40.8793 45.9606C41.5722 46.6535 42.3806 47 43.42 47C44.4593 47 45.2677 46.6535 45.9606 45.9606C46.6535 45.2677 47 44.4593 47 43.42C47 42.3806 46.6535 41.5722 45.9606 40.8793L29.9081 25.0577Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const cross = (Cross);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal-title/types/variant.js\nvar Variant = {\n  Default: \'default\',\n  WithIcon: \'with-icon\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal-title/modal-title.styles.js\n\n\n\n\n\nvar modal_title_styles_baseClassName = \'ModalTitle\';\nvar modal_title_styles_Icon = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_title_styles_baseClassName, \'Icon\')\n}).withConfig({\n  componentId: "sc-l3tf49-0"\n})(function (_ref) {\n  var palette = _ref.theme.palette;\n  return Ce(["display:flex;margin-bottom:8px;padding:12.5px;border-radius:50%;background:", ";color:", ";"], palette[Color.BackgroundPrimary], palette[Color.AccentPrimary]);\n});\nvar LabelPrimary = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_title_styles_baseClassName, \'LabelPrimary\')\n}).withConfig({\n  componentId: "sc-l3tf49-1"\n})(function () {\n  return Ce(["font-size:16px;line-height:18px;"]);\n});\nvar LabelSecondary = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_title_styles_baseClassName, \'LabelSecondary\')\n}).withConfig({\n  componentId: "sc-l3tf49-2"\n})(["font-size:12px;line-height:14px;margin-top:4px;"]);\nvar Close = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_title_styles_baseClassName, \'Close\')\n}).withConfig({\n  componentId: "sc-l3tf49-3"\n})(function (_ref2) {\n  var _ref2$variant = _ref2.variant,\n      variant = _ref2$variant === void 0 ? Variant.Default : _ref2$variant,\n      palette = _ref2.theme.palette;\n  return Ce(["position:absolute;display:flex;top:", "px;right:", "px;color:", ";&:hover{color:", ";}cursor:pointer;"], variant === Variant.WithIcon ? 12 : 16, variant === Variant.WithIcon ? 12 : 16, palette[Color.IconsSecondary], palette[Color.IconsPrimary]);\n});\nvar ModalTitle = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(modal_title_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-l3tf49-4"\n})(function (_ref3) {\n  var _ref3$variant = _ref3.variant,\n      variant = _ref3$variant === void 0 ? Variant.Default : _ref3$variant,\n      _ref3$theme = _ref3.theme,\n      palette = _ref3$theme.palette,\n      borderRadius = _ref3$theme.shape.borderRadius;\n  return Ce(["position:relative;color:", ";border-radius:", "px ", "px 0px 0px;", " ", " ", ""], palette[Color.TextPrimary], borderRadius[BorderRadiusSize.Md], borderRadius[BorderRadiusSize.Md], function () {\n    var paddingY = variant === Variant.WithIcon ? 12 : 11;\n    var paddingLeft = 18;\n    var paddingRight = variant === Variant.WithIcon ? paddingLeft : 40;\n    return Ce(["padding:", "px ", "px ", "px ", "px;"], paddingY, paddingRight, paddingY, paddingLeft);\n  }, variant === Variant.Default && Ce(["background:", ";border-bottom:1px solid ", ";"], palette[Color.BackgroundPrimary], palette[Color.BordersSecondary]), variant === Variant.WithIcon && Ce(["display:flex;align-items:center;flex-direction:column;"]));\n});\nvar modal_title_styles_Styled = applyDisplayNames({\n  ModalTitle: ModalTitle,\n  LabelPrimary: LabelPrimary,\n  LabelSecondary: LabelSecondary,\n  Close: Close,\n  Icon: modal_title_styles_Icon\n});\n/* harmony default export */ const modal_title_styles = (modal_title_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/modal-title/modal-title.component.js\n\n\nvar modal_title_component_excluded = ["secondary", "onClose"];\n\n\n\n\n\n\nvar modal_title_component_ModalTitle = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var secondary = _ref.secondary,\n      onClose = _ref.onClose,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, modal_title_component_excluded);\n\n  return /*#__PURE__*/react.createElement(modal_title_styles.ModalTitle, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), rest.icon && /*#__PURE__*/react.createElement(modal_title_styles.Icon, {\n    iconShadow: Boolean(rest.iconShadow)\n  }, rest.icon), /*#__PURE__*/react.createElement(modal_title_styles.LabelPrimary, null, rest.primary), rest.variant === Variant.WithIcon && secondary && /*#__PURE__*/react.createElement(modal_title_styles.LabelSecondary, null, secondary), /*#__PURE__*/react.createElement(modal_title_styles.Close, {\n    variant: rest.variant,\n    onClick: onClose\n  }, /*#__PURE__*/react.createElement(cross, {\n    size: 11\n  })));\n});\nmodal_title_component_ModalTitle.defaultProps = {\n  iconShadow: true,\n  variant: Variant.Default\n};\nmodal_title_component_ModalTitle.propTypes = {\n  primary: (prop_types_default()).node.isRequired,\n  secondary: (prop_types_default()).node,\n  icon: (prop_types_default()).node,\n  iconShadow: (prop_types_default()).bool,\n  onClose: (prop_types_default()).func,\n  variant: prop_types_default().oneOf(objectValues(Variant))\n};\nmodal_title_component_ModalTitle.displayName = \'ModalTitle\';\n/* harmony default export */ const modal_title_component = (modal_title_component_ModalTitle);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Modal/Modal.styled.js\nvar StyledModalTitle=styled_components_browser_esm(modal_title_component).withConfig({componentId:"sc-kpjpf5-0"})([".SfxModalTitle-LabelPrimary{font-size:14px;line-height:16px;font-weight:500;}"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Modal/index.js\nfunction Modal_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function Modal_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?Modal_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):Modal_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var Modal_style={width:300},Modal_Modal=function(a){var b=a.title,c=a.hint,d=a.Icon,f=a.onDone,g=a.onCancel,h=a.doneLabel,i=a.cancelLabel,j=a.isOpened,k=a.doneButtonStyle,l=a.doneButtonColor,m=void 0===l?"link":l,n=a.cancelButtonColor,o=void 0===n?"link":n,p=a.children,q=a.areButtonsDisabled,r=a.zIndex,s=a.className;return react.createElement(modal_component,{className:s,open:j,onClose:g,style:Modal_objectSpread(Modal_objectSpread({},Modal_style),{},{zIndex:r}),onKeyUp:function onKeyUp(a){"Enter"===a.key&&f(a)}},react.createElement(StyledModalTitle,{icon:react.createElement(d,{size:25}),iconShadow:!0,onClose:g,primary:b,secondary:c,variant:"with-icon"}),p&&react.createElement(modal_content_component,null,p),react.createElement(modal_actions_component,{align:"center"},react.createElement(button_component,{color:o,onClick:g,size:"md",disabled:q},i),react.createElement(button_component,{color:m,onClick:f,size:"md",style:k,disabled:q},h)))};Modal_Modal.defaultProps={hint:"",isOpened:!1,doneLabel:"Yes",cancelLabel:"No",doneButtonStyle:void 0,doneButtonColor:"link",cancelButtonColor:"link",children:void 0,areButtonsDisabled:!1,zIndex:void 0,className:void 0};/* harmony default export */ const common_Modal = (Modal_Modal);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/SaveButton.js\nfunction SaveButton_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function SaveButton_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?SaveButton_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):SaveButton_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var SaveButton_sliderStyle={marginBottom:16},saveButtonWrapperStyle={width:67},saveButtonMenuStyle={marginLeft:12},isFieSaveMounted=!0,SaveButton=function(){var a=hooks_useStore(),b=(0,react.useRef)(),c=a.theme,d=a.dispatch,e=a.originalImage,f=a.resize,g=a.isLoadingGlobally,h=a.haveNotSavedChanges,i=a.feedback,j=a.t,k=a.adjustments;k=void 0===k?{}:k;var l=k.crop,m=a.config,n=m.onClose,o=m.closeAfterSave,p=m.onBeforeSave,q=m.onSave,r=m.forceToPngInEllipticalCrop,s=m.defaultSavedImageType,t=m.useCloudimage,u=m.moreSaveOptions,v=(0,react.useState)(!1),w=(0,slicedToArray/* default */.Z)(v,2),x=w[0],y=w[1],z=(0,react.useState)({quality:.92}),A=(0,slicedToArray/* default */.Z)(z,2),B=A[0],C=A[1],D=hooks_useTransformedImgData(),E=["jpeg","jpg","webp"].includes(B.extension),F=0===i.duration,G=function(){isFieSaveMounted&&x&&(b.current=null,y(!1))},H=function(){var a=D(B),c=b.current||q;c(a.imageData,a.designState),b.current=null,o&&n&&n(CLOSING_REASONS.AFTER_SAVE,h)},I=function(){d({type:SHOW_LOADER}),y(!1),setTimeout(H,3)},J=function(){var a=b.current||q;if("function"!=typeof a)throw new Error("Please provide onSave function handler.");return B.name&&B.extension?void I():void d({type:SET_FEEDBACK,payload:{feedback:{message:j("nameIsRequired")}}})},K=function(){if(t){var a=D(B),c=b.current||q;return void c(a.imageData,a.designState)}return b.current||"function"!=typeof p||!1!==p(B)?void y(!0):void J()},L=function(a,c){if("function"==typeof a)b.current=a,c();else throw new Error("onSave function callback is required as an argument to the passed function.")};(0,react.useEffect)(function(){if(e&&(!B.name||!B.extension)){var a=utils_getFileFullName(e.name,r&&l.ratio===ELLIPSE_CROP?"png":SUPPORTED_IMAGE_TYPES.includes(null===s||void 0===s?void 0:s.toLowerCase())&&s),b=a.name,c=a.extension;C(SaveButton_objectSpread(SaveButton_objectSpread({},B),{},{name:b,extension:c}))}},[e,x]),(0,react.useEffect)(function(){C(SaveButton_objectSpread(SaveButton_objectSpread({},B),{},{size:{width:f.width,height:f.height}}))},[f]),(0,react.useEffect)(function(){return isFieSaveMounted=!0,function(){isFieSaveMounted=!1}},[]);var M=Array.isArray(u)&&0<u.length?u.map(function(a,b){return SaveButton_objectSpread(SaveButton_objectSpread({},a),{},{key:"".concat(a.label||b,"-option-key"),onClick:"function"==typeof a.onClick?function(){return a.onClick(function(a){return L(a,K)},function(a){return L(a,I)})}:void 0})}):[];return react.createElement(react.Fragment,null,react.createElement(common_ButtonWithMenu,{className:"FIE_topbar-save",color:"primary",label:j("save"),onClick:K,menuPosition:"bottom",menuItems:M,menuStyle:saveButtonMenuStyle,wrapperStyle:saveButtonWrapperStyle,disabled:g||F}),x&&react.createElement(common_Modal,{className:"FIE_save-modal",title:j("saveAsModalLabel"),Icon:function Icon(a){return react.createElement(save_as,(0,esm_extends/* default */.Z)({color:c.palette["accent-primary"]},a))},isOpened:x,onCancel:G,onDone:J,doneLabel:j("save"),cancelLabel:j("cancel"),doneButtonColor:"primary",areButtonsDisabled:g,zIndex:11110},react.createElement(StyledFileNameInput,{className:"FIE_save-file-name-input",value:B.name,onChange:function changeFileName(a){var b=a.target.value;C(SaveButton_objectSpread(SaveButton_objectSpread({},B),{},{name:b}))},size:"sm",placeholder:j("name"),error:!!B.name,focusOnMount:!0}),react.createElement(StyledFileExtensionSelect,{className:"FIE_save-extension-selector",onChange:function onChange(a){return C(SaveButton_objectSpread(SaveButton_objectSpread({},B),{},{extension:a}))},value:B.extension,placeholder:j("extension"),size:"sm"},SUPPORTED_IMAGE_TYPES.map(function(a){return react.createElement(menu_item_component,{key:a,value:a},a)})),E&&react.createElement(StyledQualityWrapper,{className:"FIE_save-quality-wrapper"},react.createElement(label_component,null,j("quality")),react.createElement(common_Slider,{annotation:"%",min:1,max:100,onChange:function changeQuality(a){C(SaveButton_objectSpread(SaveButton_objectSpread({},B),{},{quality:utils_restrictNumber(a/100,.01,1)}))},value:parseInt(100*B.quality,10),width:"100%",style:SaveButton_sliderStyle})),react.createElement(StyledResizeOnSave,{className:"FIE_save-resize-wrapper"},react.createElement(label_component,null,j("resize")),react.createElement(Resize_Resize,{onChange:function resizeImageFile(a){C(SaveButton_objectSpread(SaveButton_objectSpread({},B),{},{size:SaveButton_objectSpread(SaveButton_objectSpread({},B.size),a)}))},currentSize:(null===B||void 0===B?void 0:B.size)||{},hideResetButton:!0,alignLeft:!0}))))};/* harmony default export */ const Topbar_SaveButton = (SaveButton);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/revert.js\n\n\nvar revert_excluded = ["color", "size"];\n\n\nvar Revert = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, revert_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M8.98975 13.4455C11.7193 7.13719 18.2352 2.96448 25.4662 3.53775C32.897 4.12687 38.7924 9.54635 40.3073 16.4736C40.4916 17.3166 41.3245 17.8505 42.1675 17.6662C43.0105 17.4818 43.5445 16.649 43.3601 15.8059C41.5594 7.57149 34.5543 1.12345 25.7131 0.422526C17.1213 -0.258635 9.38658 4.69317 6.13434 12.1755L3.89818 6.84608C3.56429 6.05034 2.64855 5.67594 1.85282 6.00982C1.05708 6.3437 0.682677 7.25944 1.01656 8.05518L4.73787 16.9241C4.89821 17.3062 5.20378 17.609 5.58736 17.7658C5.97094 17.9226 6.40111 17.9206 6.78323 17.7603L15.6521 14.039C16.4478 13.7051 16.8222 12.7894 16.4884 11.9936C16.1545 11.1979 15.2387 10.8235 14.443 11.1574L8.98975 13.4455Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M7.97987 23.3944C7.80368 22.5497 6.97603 22.0077 6.13126 22.1839C5.2865 22.3601 4.74451 23.1877 4.92071 24.0325C6.65659 32.3552 13.7002 38.8943 22.6071 39.6004C31.0811 40.2722 38.7213 35.4646 42.0496 28.154L44.2049 33.1157C44.5487 33.9072 45.4691 34.2701 46.2606 33.9263C47.0521 33.5825 47.415 32.6621 47.0712 31.8706L43.2414 23.0543C42.8976 22.2628 41.9772 21.8999 41.1857 22.2437L32.3694 26.0734C31.5779 26.4173 31.215 27.3376 31.5588 28.1291C31.9026 28.9206 32.823 29.2835 33.6145 28.9397L39.3938 26.4292C36.7027 32.8203 30.1416 37.063 22.8541 36.4852C15.3678 35.8917 9.4401 30.3955 7.97987 23.3944Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const revert = (Revert);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/warning.js\n\n\nvar warning_excluded = ["color", "size"];\n\n\nvar Warning = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, warning_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M48.9856 38.314L31.3034 3.80423C29.9688 1.42247 27.6118 0 24.9985 0C22.3852 0 20.0282 1.42247 18.6936 3.80423C18.6836 3.82245 18.6751 3.84067 18.665 3.8589L1.04158 38.2594C-0.321602 40.6914 -0.347383 43.612 0.971367 46.0713C2.29314 48.5321 4.67439 50 7.345 50H42.5544C45.225 50 47.7041 48.5321 49.0258 46.0713C50.3445 43.6121 50.3188 40.6913 48.9856 38.314ZM22.0659 15.8013C22.0659 14.0842 23.3789 12.6924 24.9985 12.6924C26.6182 12.6924 27.9311 14.0843 27.9311 15.8013V28.2372C27.9311 29.9541 26.6181 31.3462 24.9985 31.3462C23.3789 31.3462 22.0659 29.954 22.0659 28.2372V15.8013ZM24.9985 43.7821C22.5728 43.7821 20.5995 41.6902 20.5995 39.1186C20.5995 36.5471 22.5727 34.4552 24.9985 34.4552C27.4242 34.4552 29.3974 36.5471 29.3974 39.1186C29.3975 41.6901 27.4243 43.7821 24.9985 43.7821Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const warning = (Warning);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/ResetButton.js\nvar ResetButton=function(a){var b=a.margin,c=hooks_useStore(),d=c.dispatch,e=c.isResetted,f=!(void 0!==e)||e,g=c.theme,h=c.feedback,i=c.t,j=0===h.duration,k=(0,react.useState)(!1),l=(0,slicedToArray/* default */.Z)(k,2),m=l[0],n=l[1],o=function(){n(!1)},p=(0,react.useCallback)(function(){d({type:RESET}),o()},[]);return react.createElement(react.Fragment,null,react.createElement(StyledHistoryButton,{className:"FIE_topbar-reset-button",color:"link",onClick:f?void 0:function openModal(){n(!0)},disabled:f||j,title:i("resetOperations"),margin:b},react.createElement(revert,{size:12})),m&&react.createElement(common_Modal,{title:i("changesLoseConfirmation"),hint:i("changesLoseConfirmationHint"),isOpened:m,onCancel:o,onDone:p,Icon:function WarningIcon(){return react.createElement(warning,{color:g.palette.warning,size:25})},doneLabel:i("continue"),cancelLabel:i("cancel"),doneButtonColor:"error",doneButtonStyle:{background:g.palette.warning}}))};ResetButton.defaultProps={margin:void 0};/* harmony default export */ const Topbar_ResetButton = (ResetButton);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/undo.js\n\n\nvar undo_excluded = ["color", "size"];\n\n\nvar Undo = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, undo_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 40 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M39.5112 31.2036C39.5112 41.568 31.0785 50 20.7148 50H14.0613C12.9587 50 12.0652 49.1066 12.0652 48.004V47.3386C12.0652 46.2359 12.9586 45.3425 14.0613 45.3425H20.7148C28.5107 45.3425 34.8537 38.9995 34.8537 31.2036C34.8537 23.4078 28.5107 17.0648 20.7148 17.0648H8.4394L16.8935 25.5189C17.8015 26.4266 17.8015 27.9042 16.8935 28.8119C16.0124 29.6923 14.479 29.691 13.5999 28.8119L1.17111 16.3828C0.731285 15.943 0.488892 15.3581 0.488892 14.7359C0.488892 14.1142 0.731285 13.529 1.17111 13.0894L13.6006 0.65976C14.4797 -0.220001 16.0144 -0.220001 16.8936 0.65976C17.8016 1.56722 17.8016 3.04511 16.8936 3.95246L8.43951 12.4072H20.7148C31.0785 12.4072 39.5112 20.8395 39.5112 31.2036Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const icons_undo = (Undo);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/UndoButton.js\nvar UndoButton=function(a){var b=a.margin,c=hooks_useStore(),d=c.dispatch,e=c.hasUndo,f=void 0!==e&&e,g=c.t,h=c.feedback,i=0===h.duration,j=(0,react.useCallback)(function(){d({type:UNDO})},[]);return react.createElement(StyledHistoryButton,{className:"FIE_topbar-undo-button",color:"link",onClick:f?j:void 0,disabled:!f||i,title:g("undoTitle"),margin:b},react.createElement(icons_undo,{size:12}))};UndoButton.defaultProps={margin:void 0};/* harmony default export */ const Topbar_UndoButton = (UndoButton);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/redo.js\n\n\nvar redo_excluded = ["color", "size"];\n\n\nvar Redo = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, redo_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 40 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M0.98 31.2037C0.98 41.568 9.41216 50 19.7752 50H26.4284C27.5309 50 28.4244 49.1066 28.4244 48.004V47.3386C28.4244 46.2359 27.531 45.3425 26.4284 45.3425H19.7752C11.9798 45.3425 5.6372 38.9995 5.6372 31.2037C5.6372 23.4079 11.9798 17.0648 19.7752 17.0648H32.05L23.5964 25.5189C22.6884 26.4266 22.6884 27.9043 23.5964 28.812C24.4774 29.6924 26.0107 29.6911 26.8897 28.812L39.3178 16.3828C39.7576 15.943 40 15.3582 40 14.736C40 14.1142 39.7576 13.5291 39.3178 13.0895L26.8891 0.659821C26.01 -0.21994 24.4754 -0.21994 23.5962 0.659821C22.6883 1.56728 22.6883 3.04517 23.5962 3.95252L32.0498 12.4073H19.7752C9.41216 12.4073 0.98 20.8396 0.98 31.2037Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const icons_redo = (Redo);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/RedoButton.js\nvar RedoButton=function(a){var b=a.margin,c=hooks_useStore(),d=c.dispatch,e=c.hasRedo,f=void 0!==e&&e,g=c.t,h=(0,react.useCallback)(function(){d({type:REDO})},[]);return react.createElement(StyledHistoryButton,{className:"FIE_topbar-redo-button",color:"link",onClick:f?h:void 0,disabled:!f,title:g("redoTitle"),margin:b},react.createElement(icons_redo,{size:12}))};RedoButton.defaultProps={margin:void 0};/* harmony default export */ const Topbar_RedoButton = (RedoButton);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/compare.js\n\n\nvar compare_excluded = ["color", "size"];\n\n\nvar Compare = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, compare_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M27.1607 4.16667V2.08333C27.1607 0.93274 26.2279 0 25.0773 0C23.9267 0 22.994 0.932741 22.994 2.08333V4.16667H4.244C1.94281 4.16667 0.0773315 6.03215 0.0773315 8.33333V41.6667C0.0773315 43.9679 1.94281 45.8333 4.244 45.8333H22.994V47.9167C22.994 49.0673 23.9267 50 25.0773 50C26.2279 50 27.1607 49.0673 27.1607 47.9167V45.8333H45.9107C48.2118 45.8333 50.0773 43.9678 50.0773 41.6667V8.33333C50.0773 6.03215 48.2119 4.16667 45.9107 4.16667H27.1607ZM22.994 8.33333H4.244L4.244 41.6667H22.994V8.33333ZM27.1607 41.6667V8.33333H45.9107V41.6667H27.1607Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const compare = (Compare);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/ImageDimensionsAndDisplayToggle.js\nvar ImageDimensionsAndDisplayToggle=function(){var a=hooks_useStore(),b=a.dispatch,c=a.isResetted,d=!(void 0!==c)||c,e=a.originalImage,f=a.resize,g=void 0===f?{}:f,h=a.adjustments,i=h.crop,j=h.rotation,k=void 0===j?0:j,l=a.shownImageDimensions,m=a.t,n=function(){b({type:TOGGLE_ORIGINAL_IMAGE_DISPLAY,payload:{isShow:!1}}),document.removeEventListener("mouseup",n),document.removeEventListener("mouseleave",n),document.removeEventListener("touchcancel",n),document.removeEventListener("touchend",n)},o=function(){b({type:TOGGLE_ORIGINAL_IMAGE_DISPLAY,payload:{isShow:!0}}),document.addEventListener("mouseup",n),document.addEventListener("mouseleave",n),document.addEventListener("touchcancel",n),document.addEventListener("touchend",n)};if(!e)return null;var p=utils_getProperDimensions(g,i,l,e,k);return react.createElement(react.Fragment,null,react.createElement(label_component,{title:m("imageDimensionsHoverTitle")},"".concat(p.width," x ").concat(p.height," px")),react.createElement(StyledSmallButton,{color:"link",horizontalMargin:"8px",onMouseDown:d?void 0:o,onTouchStart:d?void 0:o,disabled:d,title:m("showImageTitle")},react.createElement(compare,null)))};/* harmony default export */ const Topbar_ImageDimensionsAndDisplayToggle = (ImageDimensionsAndDisplayToggle);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/minus.js\n\n\nvar minus_excluded = ["color", "size"];\n\n\nvar Minus = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, minus_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M3.27478 28.001H47.2746C48.9318 28.001 50.2749 26.6579 50.2749 25.0003C50.2749 23.3431 48.9322 22 47.2746 22H3.27478C1.61803 22.0004 0.274902 23.3435 0.274902 25.0007C0.274902 26.6579 1.61803 28.001 3.27478 28.001Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const minus = (Minus);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/plus.js\n\n\nvar plus_excluded = ["color", "size"];\n\n\nvar Plus = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, plus_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M47.7746 22.4999H27.775V2.49984C27.775 1.12014 26.6548 0 25.2747 0C23.895 0 22.7748 1.12014 22.7748 2.49984V22.4999H2.77474C1.39505 22.4999 0.274902 23.6201 0.274902 24.9998C0.274902 26.3799 1.39505 27.5001 2.77474 27.5001H22.7748V47.4997C22.7748 48.8799 23.895 50 25.2747 50C26.6548 50 27.775 48.8799 27.775 47.4997V27.5001H47.7746C49.1548 27.5001 50.2749 26.3799 50.2749 24.9998C50.2749 23.6201 49.1548 22.4999 47.7746 22.4999Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const plus = (Plus);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/Topbar.constants.js\nvar ZOOM_FACTORS_PRESETS=[{labelKey:"fitSize",factor:"fit"},{labelKey:"actualSize",factor:1},{label:"25%",factor:.25},{label:"50%",factor:.5},{label:"75%",factor:.75},{label:"125%",factor:1.25},{label:"170%",factor:1.7},{label:"300%",factor:3},{label:"500%",factor:5},{label:"1000%",factor:10}];\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/CanvasZooming.js\nvar MULTIPLY_ZOOM_FACTOR=1.1,CanvasZooming=function(){var a=hooks_useStore(),b=a.dispatch,c=a.zoom,d=void 0===c?{}:c,e=a.toolId,f=a.feedback,g=a.t,h=a.shownImageDimensions,i=a.resize,j=a.originalImage,k=a.adjustments.crop,l=a.config.useZoomPresetsMenu,m=0===f.duration,n=(0,react.useState)(null),o=(0,slicedToArray/* default */.Z)(n,2),p=o[0],q=o[1],r=function(a){b({type:ZOOM_CANVAS,payload:{factor:a}})},s=function(){var a=i.width&&i.height&&i||k.width&&k.height&&k||h,b=utils_getZoomFitFactor(k.width&&k.height&&k||h,a);r(b||DEFAULT_ZOOM_FACTOR)},t=function(a){q(p?null:a.target)},u=function(a){if("fit"===a)return s(),void t();var b=Math.min(a*j.width/h.width,a*j.height/h.height);r(b),t()},v=e===TOOLS_IDS.CROP||m,w=!j||i.width||i.height?d.factor:Math.min(h.width*d.factor/j.width,h.height*d.factor/j.height);return react.createElement(react.Fragment,null,react.createElement(StyledSmallButton,{onClick:function zoomOut(){r(d.factor/MULTIPLY_ZOOM_FACTOR)},color:"link",title:g("zoomOutTitle"),disabled:v},react.createElement(minus,null)),react.createElement(StyledZoomPercentageLabel,{title:g("toggleZoomMenuTitle"),onClick:v?void 0:l&&t||s,"aria-disabled":v},"".concat(utils_toPrecisedFloat(100*w,0),"%")),react.createElement(menu_component,{anchorEl:p,onClose:t,open:!!p,position:"bottom"},ZOOM_FACTORS_PRESETS.map(function(a){var b=a.factor,c=a.labelKey,d=a.label;return react.createElement(menu_item_component,{key:d||c,onClick:function onClick(){return u(b)}},react.createElement(menu_item_label_component,null,null!==d&&void 0!==d?d:g(c)))})),react.createElement(StyledSmallButton,{onClick:function zoomIn(){r(d.factor*MULTIPLY_ZOOM_FACTOR)},color:"link",title:g("zoomInTitle"),disabled:v},react.createElement(plus,null)))};/* harmony default export */ const Topbar_CanvasZooming = (CanvasZooming);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/BackButton.js\nvar BackButton=function(){var a=hooks_useStore(),b=a.t,c=a.haveNotSavedChanges,d=a.config.onClose;if("function"!=typeof d)return react.createElement("span",null);return react.createElement(StyledCloseOrBackButton,{className:"FIE_topbar-back-button",color:"link",size:"sm",onClick:function closeWithReason(){d(CLOSING_REASONS.CLOSE_BUTTON,c)}},d&&react.createElement(react.Fragment,null,react.createElement(arrow_left_outline,{size:9}),react.createElement(StyledBackButtonLabel,null,b("back"))))};/* harmony default export */ const Topbar_BackButton = (BackButton);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Topbar/index.js\nvar Topbar=function(){var a=hooks_useStore(),b=a.config.showBackButton,c=hooks_usePhoneScreen();return react.createElement(StyledTopbar,{reverseDirection:b,className:"FIE_topbar"},react.createElement(StyledFlexCenterAlignedContainer,{reverseDirection:b,className:"FIE_topbar-buttons-wrapper"},c?react.createElement("div",null,react.createElement(Topbar_SaveButton,null),react.createElement("div",{style:{marginTop:6},className:"FIE_topbar-history-buttons"},react.createElement(Topbar_ResetButton,{margin:"0"}),react.createElement(Topbar_UndoButton,{margin:"0"}),react.createElement(Topbar_RedoButton,{margin:"0"}))):react.createElement(react.Fragment,null,react.createElement(Topbar_SaveButton,null),react.createElement("div",{className:"FIE_topbar-history-buttons"},react.createElement(Topbar_ResetButton,null),react.createElement(Topbar_UndoButton,null),react.createElement(Topbar_RedoButton,null)))),react.createElement(StyledFlexCenterAlignedContainer,{className:"FIE_topbar-center-options"},react.createElement(Topbar_ImageDimensionsAndDisplayToggle,null),react.createElement(common_Separator,null),react.createElement(Topbar_CanvasZooming,null)),b?react.createElement(Topbar_BackButton,null):react.createElement(Topbar_CloseButton,null))};/* harmony default export */ const components_Topbar = (Topbar);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Tabs/Tabs.styled.js\nvar StyledTabs=styled_components_browser_esm.div.withConfig({componentId:"sc-qhd6ow-0"})(["padding:0 12px 12px 0;overflow-y:auto;max-height:100%;[data-phone=\'true\'] &{display:flex;padding:0;}"]),StyledTabItem=styled_components_browser_esm.div.withConfig({componentId:"sc-qhd6ow-1"})(function(a){var b=a.theme;return"\\n    width: 67px;\\n    height: 62px;\\n    border-radius: 4px;\\n    display: flex;\\n    flex-direction: column;\\n    background: ".concat(b.palette["bg-primary"],";\\n    align-items: center;\\n    justify-content: center;\\n    margin-bottom: 8px;\\n\\n    [data-phone=\'true\'] & {\\n      margin-bottom: 0;\\n      height: 50px;\\n      border-radius: 0;\\n    }\\n\\n    &,\\n    * {\\n      cursor: pointer;\\n    }\\n\\n    &:hover {\\n      background: ").concat(b.palette["bg-primary-active"],";\\n    }\\n\\n    &[aria-selected=\'true\'] {\\n      background: ").concat(b.palette["bg-primary-active"],";\\n\\n      * {\\n        color: ").concat(b.palette["accent-primary-active"],";\\n      }\\n    }\\n  ")}),StyledTabItemLabel=styled_components_browser_esm(label_component).withConfig({componentId:"sc-qhd6ow-2"})(["margin-top:6px;font-size:11px;line-height:12px;[data-phone=\'true\'] &{font-size:10px;}"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Tabs/TabItem.js\nvar TabItem=function(a){var b=a.id,c=a.label,d=a.Icon,e=a.isSelected,f=a.onClick,g=(0,react.useCallback)(function(){"function"==typeof f&&f(b)},[b]);return react.createElement(StyledTabItem,{className:"FIE_tab","aria-selected":e,onClick:g},react.createElement(d,null),c&&react.createElement(StyledTabItemLabel,{className:"FIE_tab-label"},c))};TabItem.defaultProps={isSelected:!1,onClick:void 0,label:void 0};/* harmony default export */ const Tabs_TabItem = ((0,react.memo)(TabItem));\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/crop-frame.js\n\n\nvar crop_frame_excluded = ["color", "size"];\n\n\nvar CropFrame = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, crop_frame_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M43 3H31.75V0.5H43C44.3807 0.5 45.5 1.61929 45.5 3V14.25H43V3Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M3 14.25V3H14.25V0.5H3C1.61929 0.5 0.5 1.61929 0.5 3V14.25H3Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M0.5 31.75V43C0.5 44.3807 1.61929 45.5 3 45.5H14.25V43H3V31.75H0.5Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M43 31.75H45.5V43C45.5 44.3807 44.3807 45.5 43 45.5H31.75V43H43V31.75Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const crop_frame = ((/* unused pure expression or super */ null && (CropFrame)));\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/finetune.js\n\n\nvar finetune_excluded = ["color", "size"];\n\n\nvar FineTune = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, finetune_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M16.3679 7.50003C15.7995 10.005 13.5592 11.875 10.8823 11.875C8.20528 11.875 5.96506 10.005 5.39665 7.50003H1.5448C0.854444 7.50003 0.2948 6.94039 0.2948 6.25003C0.2948 5.55967 0.854444 5.00003 1.5448 5.00003H5.39665C5.96506 2.49504 8.20528 0.625031 10.8823 0.625031C13.5592 0.625031 15.7995 2.49504 16.3679 5.00003H48.4557C49.1461 5.00003 49.7057 5.55967 49.7057 6.25003C49.7057 6.94039 49.1461 7.50003 48.4557 7.50003H16.3679ZM14.0073 6.25003C14.0073 7.97592 12.6082 9.37503 10.8823 9.37503C9.15637 9.37503 7.75726 7.97592 7.75726 6.25003C7.75726 4.52414 9.15637 3.12503 10.8823 3.12503C12.6082 3.12503 14.0073 4.52414 14.0073 6.25003Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M34.5715 27.625C37.2485 27.625 39.4887 25.755 40.0571 23.25H48.4554C49.1458 23.25 49.7054 22.6904 49.7054 22C49.7054 21.3096 49.1458 20.75 48.4554 20.75H40.0571C39.4887 18.245 37.2485 16.375 34.5715 16.375C31.8946 16.375 29.6543 18.245 29.0859 20.75H1.5448C0.854444 20.75 0.2948 21.3096 0.2948 22C0.2948 22.6904 0.854444 23.25 1.5448 23.25H29.0859C29.6543 25.755 31.8946 27.625 34.5715 27.625ZM34.5715 25.125C36.2974 25.125 37.6965 23.7259 37.6965 22C37.6965 20.2741 36.2974 18.875 34.5715 18.875C32.8456 18.875 31.4465 20.2741 31.4465 22C31.4465 23.7259 32.8456 25.125 34.5715 25.125Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M22.7702 39C22.2018 41.505 19.9615 43.375 17.2845 43.375C14.6076 43.375 12.3673 41.505 11.7989 39H1.5448C0.854444 39 0.2948 38.4403 0.2948 37.75C0.2948 37.0596 0.854444 36.5 1.5448 36.5H11.7989C12.3673 33.995 14.6076 32.125 17.2845 32.125C19.9615 32.125 22.2018 33.995 22.7702 36.5H48.4554C49.1458 36.5 49.7054 37.0596 49.7054 37.75C49.7054 38.4403 49.1458 39 48.4554 39H22.7702ZM20.4095 37.75C20.4095 39.4759 19.0104 40.875 17.2845 40.875C15.5587 40.875 14.1595 39.4759 14.1595 37.75C14.1595 36.0241 15.5587 34.625 17.2845 34.625C19.0104 34.625 20.4095 36.0241 20.4095 37.75Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const finetune = ((/* unused pure expression or super */ null && (FineTune)));\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/image-filters.js\n\n\nvar image_filters_excluded = ["color", "size"];\n\n\nvar ImageFilters = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, image_filters_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M41.2229 16.7653C41.3215 12.426 39.7436 8.284 36.6864 5.02956C33.6292 1.77513 29.4872 -2.09808e-05 25.0493 -2.09808e-05C20.6114 -2.09808e-05 16.3708 1.77513 13.3136 5.02956C10.2564 8.18538 8.6785 12.3274 8.77712 16.7653C3.45168 19.5266 0 25.1479 0 31.1637C0 37.2781 3.25444 42.6035 8.57988 45.4635C11.0454 46.7455 13.7081 47.4359 16.2722 47.4359C19.3294 47.4359 22.288 46.5483 24.9507 44.8718C29.9803 48.1262 36.0947 48.3234 41.4201 45.4635C46.7456 42.6035 50 37.2781 50 31.1637C50 25.0493 46.6469 19.5266 41.2229 16.7653ZM22.7811 43.0966C18.6391 45.3649 13.7081 45.3649 9.56607 42.998C5.22682 40.5325 2.66272 36.1933 2.66272 31.1637C2.66272 26.43 5.12821 22.0907 9.1716 19.6252C10.1578 24.359 13.3136 28.501 17.6529 30.6706C17.4556 35.4043 19.3294 39.8422 22.7811 43.0966ZM32.1499 27.8106C31.4596 24.5562 29.783 21.499 27.3176 19.2307C30.6706 17.357 34.8126 17.0611 38.4615 18.3432C37.7712 22.2879 35.503 25.7396 32.1499 27.8106ZM20.6114 28.1065C21.3018 25.2465 22.8797 22.6824 25.0493 20.8087C27.5148 22.8797 29.1913 25.8382 29.6844 28.9941C26.7258 30.0789 23.4714 30.0789 20.4142 28.9941C20.4142 28.6982 20.5128 28.4023 20.6114 28.1065ZM25.0493 17.4556C23.57 16.4694 21.8935 15.7791 20.1183 15.3846C19.428 15.1874 18.6391 15.6805 18.5404 16.3708C18.4418 16.7653 18.5404 17.0611 18.7377 17.357C18.9349 17.6528 19.2308 17.8501 19.5266 17.9487C20.7101 18.2446 21.7949 18.639 22.7811 19.2307C20.3156 21.499 18.6391 24.4576 17.9487 27.8106C14.5957 25.7396 12.2288 22.2879 11.6371 18.3432C11.9329 18.2446 12.1302 18.1459 12.426 18.0473C12.7219 17.9487 13.0178 17.7515 13.215 17.357C13.4122 17.0611 13.4122 16.6666 13.3136 16.3708C13.1164 15.6805 12.3274 15.286 11.6371 15.4832C11.5385 15.4832 11.5385 15.4832 11.4398 15.5818C11.8343 8.48124 17.7515 2.6627 25.0493 2.6627C32.3471 2.6627 38.2643 8.38262 38.6588 15.5818C34.0237 14.2012 28.9941 14.8915 25.0493 17.4556ZM29.783 31.7554C29.5858 35.5029 27.9093 39.0532 25.0493 41.5187C22.1893 39.0532 20.4142 35.6016 20.3156 31.7554C23.3728 32.7416 26.7258 32.7416 29.783 31.7554ZM32.4458 30.6706C36.785 28.4023 39.8422 24.359 40.927 19.6252C44.9704 22.0907 47.4359 26.43 47.4359 31.1637C47.4359 36.0947 44.8718 40.5325 40.5325 42.998C36.3905 45.3649 31.4596 45.3649 27.3176 43.0966C30.7692 39.8422 32.643 35.4043 32.4458 30.6706Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M15.5819 14.8915C14.9901 14.9901 14.497 15.5818 14.497 16.1735C14.497 16.8639 15.0888 17.5542 15.8777 17.5542C16.6667 17.5542 17.2584 16.9625 17.2584 16.1735C17.2584 15.7791 17.0611 15.3846 16.7653 15.1874C16.3708 14.9901 15.9763 14.8915 15.5819 14.8915Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const image_filters = ((/* unused pure expression or super */ null && (ImageFilters)));\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/watermark.js\n\n\nvar watermark_excluded = ["color", "size"];\n\n\nvar watermark_Watermark = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, watermark_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M42.1323 0.500031H2.73399C1.42693 0.500031 0.399963 1.527 0.399963 2.83406V43.166C0.399963 44.4731 1.42693 45.5 2.73399 45.5H42.1323C43.4394 45.5 44.4664 44.4731 44.4664 43.166V2.83406C44.4664 1.527 43.4394 0.500031 42.1323 0.500031ZM41.6655 3.30086V25.8942L36.624 21.693C36.1572 21.2262 35.4103 21.2262 34.8502 21.5996L28.595 26.2677L15.5244 11.2365C15.3377 10.9565 14.9643 10.7697 14.5908 10.7697C14.2174 10.7697 13.8439 10.9565 13.5639 11.1432L3.20079 21.693V3.30086H41.6655ZM3.20079 42.6992V39.8984C4.22776 40.3652 5.72154 40.832 7.58876 40.832C9.36262 40.832 10.483 40.2718 11.3232 39.805C12.0701 39.4316 12.5369 39.1515 13.3771 39.2448C14.3108 39.3382 14.8709 39.5249 15.4311 39.805C16.2713 40.0851 17.2049 40.4585 18.9788 40.4585V38.3112C17.6717 38.3112 17.0182 38.0312 16.178 37.7511C15.5244 37.471 14.6842 37.1909 13.5639 37.0975C12.0701 36.9108 11.1365 37.471 10.2962 37.8444C9.54934 38.2179 8.80245 38.5913 7.4954 38.5913C5.06801 38.5913 3.6676 37.7511 3.10743 37.2843V35.0436C4.1344 35.5104 5.62818 35.9772 7.4954 35.9772C9.26926 35.9772 10.3896 35.417 11.2298 34.9502C11.9767 34.5768 12.4435 34.2967 13.2838 34.3901C14.2174 34.4834 14.7776 34.6702 15.3377 34.9502C16.178 35.2303 17.1116 35.6038 18.8854 35.6038V33.4565C17.5784 33.4565 16.9249 33.1764 16.0846 32.8963C15.4311 32.6162 14.5908 32.3361 13.4705 32.2428C11.9767 32.056 11.0431 32.6162 10.2029 32.9897C9.45598 33.3631 8.70909 33.7365 7.40204 33.7365C4.97465 33.7365 3.57424 32.8963 3.01407 32.4295V30.1888C4.04104 30.6556 5.53482 31.1224 7.40204 31.1224C9.1759 31.1224 10.2962 30.5623 11.1365 30.0955C11.8834 29.722 12.3502 29.4419 13.1904 29.5353C14.124 29.6287 14.6842 29.8154 15.2444 30.0955C16.0846 30.3755 17.0182 30.749 18.7921 30.749V28.6017C17.485 28.6017 16.8315 28.3216 15.9912 28.0415C15.3377 27.7614 14.4975 27.4814 13.3771 27.388C11.8834 27.2013 10.9498 27.7614 10.1095 28.1349C9.36262 28.5083 8.61573 28.8818 7.30868 28.8818C4.88129 28.8818 3.48088 28.0415 2.92071 27.5747V25.7075L14.124 14.2241L27.1012 29.0685C27.568 29.6287 28.4083 29.722 28.9684 29.2552L35.4103 24.4004L41.3854 29.4419V42.6058H3.20079V42.6992Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M32.7029 15.7179C35.4103 15.7179 37.651 13.4772 37.651 10.7697C37.651 8.06227 35.4103 5.82161 32.7029 5.82161C29.9954 5.82161 27.7547 8.06227 27.7547 10.7697C27.7547 13.4772 29.9954 15.7179 32.7029 15.7179ZM32.7029 8.15563C34.1966 8.15563 35.317 9.36933 35.317 10.7697C35.317 12.1702 34.1033 13.3838 32.7029 13.3838C31.3025 13.3838 30.0888 12.1702 30.0888 10.7697C30.0888 9.36933 31.2091 8.15563 32.7029 8.15563Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const watermark = ((/* unused pure expression or super */ null && (watermark_Watermark)));\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/annotate.js\n\n\nvar annotate_excluded = ["color", "size"];\n\n\nvar Annotate = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, annotate_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M46.1442 31.3785C45.4585 31.3785 44.8974 31.9424 44.8974 32.6316V43.7344C44.8974 45.802 43.2267 47.4812 41.157 47.4938H6.22156C4.16433 47.4938 2.49361 45.8146 2.48114 43.7344V11.1278C2.48114 9.06018 4.15186 7.38098 6.22156 7.36845H17.2807C17.9665 7.36845 18.5275 6.80454 18.5275 6.11532C18.5275 5.42609 17.9665 4.86218 17.2807 4.86218H6.22156C2.79284 4.87471 0 7.6692 0 11.1278V43.7344C0 47.193 2.79284 50 6.22156 50H41.157C44.5982 50 47.3786 47.193 47.3786 43.7469V32.6316C47.391 31.9424 46.83 31.3785 46.1442 31.3785Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.8923 1.65414C44.698 -0.551378 41.157 -0.551378 38.9627 1.65414L16.7571 23.9724C16.6075 24.1228 16.4953 24.3108 16.4329 24.5238L13.5154 35.1253C13.3907 35.5639 13.5154 36.0276 13.8396 36.3409C14.1513 36.6541 14.6251 36.7794 15.049 36.6667L25.5969 33.7343C25.8089 33.6717 25.9959 33.5714 26.1455 33.4085L48.3636 11.0777C50.5455 8.87218 50.5455 5.31328 48.3636 3.10777L46.8923 1.65414ZM19.4751 24.787L37.6535 6.51629L43.5135 12.406L25.3351 30.6892L19.4751 24.787ZM18.3031 27.1554L22.9911 31.8672L16.5077 33.6717L18.3031 27.1554ZM46.5931 9.31078L45.2715 10.6391L39.4115 4.74937L40.7331 3.42105C41.9425 2.20551 43.9249 2.20551 45.1343 3.42105L46.5931 4.88722C47.815 6.11529 47.815 8.09524 46.5931 9.31078Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const annotate = ((/* unused pure expression or super */ null && (Annotate)));\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/icons/resize.js\n\n\nvar resize_excluded = ["color", "size"];\n\n\nvar resize_Resize = intrinsicComponent(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \'currentColor\' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 14 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, resize_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 50 50",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M0.5 0.5H3V2.375H2.375V3H0.5V0.5Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    fillRule: "evenodd",\n    clipRule: "evenodd",\n    d: "M0.5 21.125H3V21.2693H24.7308V43H24.875V45.5L0.5 45.5001V21.125ZM22.2308 43L3 43.0001V23.7693H22.2308V43Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M43 45.5H45.5V43H43.625V43.625H43V45.5Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 3V0.5H43V2.375H43.625V3H45.5Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M6.125 0.5V3H9.875V0.5H6.125Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M13.625 0.5V3H17.375V0.5H13.625Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M21.125 0.5V3H24.875V0.5H21.125Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M28.625 0.5V3H32.375V0.5H28.625Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M36.125 0.5V3H39.875V0.5H36.125Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 6.125H43V9.875H45.5V6.125Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 13.625H43V17.375H45.5V13.625Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 21.125H43V24.875H45.5V21.125Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 28.625H43V32.375H45.5V28.625Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.5 36.125H43V39.875H45.5V36.125Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M39.875 45.5V43H36.125V45.5H39.875Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M32.375 45.5V43H28.625V45.5H32.375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M0.5 17.375H3V13.625H0.5V17.375Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M0.5 9.875H3V6.125H0.5V9.875Z",\n    fill: color\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M35.1391 9.23718L26.3209 17.8619C25.8274 18.3446 25.8186 19.136 26.3013 19.6295C26.784 20.1231 27.5754 20.1319 28.069 19.6492L37.1012 10.815V16.9907C37.1012 17.681 37.6609 18.2407 38.3512 18.2407C39.0416 18.2407 39.6012 17.681 39.6012 16.9907V7.98718C39.6012 7.29683 39.0416 6.73718 38.3512 6.73718L29.3477 6.73718C28.6574 6.73718 28.0977 7.29683 28.0977 7.98718C28.0977 8.67754 28.6574 9.23718 29.3477 9.23718L35.1391 9.23718Z",\n    fill: color\n  }));\n});\n/* harmony default export */ const resize = ((/* unused pure expression or super */ null && (resize_Resize)));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Tabs/Tabs.constants.js\nvar AVAILABLE_TABS=[{id:TABS_IDS.ADJUST,labelKey:"adjustTab",icon:CropFrame},{id:TABS_IDS.FINETUNE,labelKey:"finetuneTab",icon:FineTune},{id:TABS_IDS.FILTERS,labelKey:"filtersTab",icon:ImageFilters,hideFn:function hideFn(a){var b=a.useCloudimage;return b}},{id:TABS_IDS.WATERMARK,labelKey:"watermarkTab",icon:watermark_Watermark},{id:TABS_IDS.ANNOTATE,labelKey:"annotateTab",icon:Annotate,hideFn:function hideFn(a){var b=a.useCloudimage;return b}},{id:TABS_IDS.RESIZE,labelKey:"resizeTab",icon:resize_Resize}];\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/Tabs/index.js\nvar Tabs=function(){var a=hooks_useStore(),b=a.t,c=a.dispatch,d=a.tabId,e=void 0===d?null:d,f=a.config,g=f.tabsIds,h=f.defaultTabId,i=f.useCloudimage,j=(0,react.useMemo)(function(){var a=[];return 0<Object.keys(g).length?AVAILABLE_TABS.forEach(function(b){var c=g.indexOf(b.id);-1!==c&&(a[c]=b)}):a=AVAILABLE_TABS,(0<a.length?a:AVAILABLE_TABS).filter(function(a){var b=a.hideFn;return!b||!b({useCloudimage:i})})},[g]),k=(0,react.useCallback)(function(a){c({type:SELECT_TAB,payload:{tabId:a}})},[]);return 1===j.length?null:react.createElement(StyledTabs,{className:"FIE_tabs"},j.map(function(a){var c=a.id,d=a.labelKey,f=a.icon;return react.createElement(Tabs_TabItem,{key:c,id:c,label:b(d),Icon:f,isSelected:(e||h)===c,onClick:k})}))};/* harmony default export */ const components_Tabs = (Tabs);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/ToolsBar/ToolsBarItemOptionsWrapper.js\nvar ToolsBarItemOptionsWrapper=function(a){var b=a.children;return react.createElement(StyledToolsBarItemOptionsWrapper,{className:"FIE_tool-options-wrapper",hasChildren:!!b},b)};ToolsBarItemOptionsWrapper.defaultProps={children:void 0};/* harmony default export */ const ToolsBar_ToolsBarItemOptionsWrapper = (ToolsBarItemOptionsWrapper);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/ToolsBar/index.js\nvar ToolsBar=function(){var a,b=hooks_useStore(),c=b.t,d=b.dispatch,e=b.tabId,f=b.toolId,g=b.annotations,h=b.selectionsIds,i=void 0===h?[]:h,j=b.config,k=j.defaultTabId,l=j.defaultToolId,m=j.useCloudimage,n=e||k,o=f||l||(null===(a=TABS_TOOLS[n])||void 0===a?void 0:a[0]),p=(0,react.useMemo)(function(){return TABS_TOOLS[n]||[]},[n]),q=(0,react.useCallback)(function(a){d({type:SELECT_TOOL,payload:{toolId:a}})},[]),r=(0,react.useMemo)(function(){return p.map(function(a){var b=TOOLS_ITEMS[a],d=b.Item,e=b.hideFn;return d&&(!e||!e({useCloudimage:m}))&&react.createElement(d,{key:a,selectTool:q,t:c,isSelected:o===a})})},[p,o]),s=(0,react.useMemo)(function(){var a,b,c;if(!o)return!1;if(n===TABS_IDS.ANNOTATE){var h=i.length;if(1===h){var d,e=g[i[0]];return null===(d=TOOLS_ITEMS[e.name])||void 0===d?void 0:d.ItemOptions}if(1<h)return null}return n&&o&&TABS_TOOLS[n].includes(o)&&(!(null!==(a=TOOLS_ITEMS[f])&&void 0!==a&&a.hideFn)||!(null!==(b=TOOLS_ITEMS[f])&&void 0!==b&&b.hideFn({useCloudimage:m})))&&(null===(c=TOOLS_ITEMS[f])||void 0===c?void 0:c.ItemOptions)},[n,o,g,i]);return (0,react.useEffect)(function(){!f&&o&&d({type:SELECT_TOOL,payload:{toolId:o}})},[]),react.createElement(StyledToolsBar,{className:"FIE_tools-bar-wrapper"},react.createElement(ToolsBar_ToolsBarItemOptionsWrapper,null,s&&react.createElement(s,{t:c})),r&&react.createElement(StyledToolsBarItems,{className:"FIE_tools-bar"},r))};/* harmony default export */ const components_ToolsBar = (ToolsBar);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/robot-worried.js\n\n\nvar robot_worried_excluded = ["size"];\n\n\nvar RobotWorried = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 59 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, robot_worried_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 59 59",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M50.8184 49.7317C50.725 49.8308 50.6271 49.9241 50.5326 50.0209C50.3828 50.1776 50.2341 50.3298 50.0786 50.4819C50.0714 50.4897 50.0637 50.497 50.0555 50.5038C49.9403 50.619 49.817 50.7342 49.6995 50.8495C48.0349 52.4195 46.1929 53.79 44.2108 54.9334C44.204 54.9383 44.1967 54.9426 44.189 54.946L44.068 55.0129C43.766 55.1811 43.4641 55.3494 43.1553 55.5084L43.0481 55.566C42.714 55.7377 42.3775 55.9025 42.0341 56.065C41.3427 56.3892 40.6359 56.6869 39.9138 56.958C39.2915 57.1954 38.6554 57.4086 38.0135 57.6034C37.8799 57.6471 37.7462 57.6852 37.6125 57.7186C31.4735 59.4572 24.9357 59.1527 18.9849 56.8509L18.9561 56.8416C17.5942 56.3104 16.2738 55.6783 15.0059 54.9507C14.9989 54.9507 14.9955 54.9437 14.9897 54.9437L14.9482 54.9207C14.6498 54.749 14.3571 54.575 14.0644 54.3872C12.0384 53.1175 10.174 51.6065 8.5124 49.8873C8.50318 49.8769 8.48935 49.8642 8.48013 49.855C8.47091 49.8458 8.43865 49.8101 8.41675 49.7882C3.18695 44.3407 0.270688 37.0792 0.280052 29.5276C0.280052 13.3441 13.4006 0.220093 29.5876 0.220093C45.7746 0.220093 58.894 13.3441 58.894 29.5276C58.9056 37.0512 56.0127 44.2889 50.8184 49.7317Z",\n    fill: "#FFAC4A"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M50.5293 50.021C50.3794 50.1777 50.2308 50.3298 50.0752 50.4819C50.0681 50.4897 50.0604 50.4971 50.0522 50.5038C49.9369 50.619 49.8136 50.7343 49.6961 50.8495C48.0315 52.4195 46.1896 53.7901 44.2075 54.9334C44.2007 54.9384 44.1933 54.9426 44.1856 54.9461L44.0646 55.0129C43.7627 55.1846 43.4608 55.3494 43.1519 55.5119L43.0448 55.5695C42.7106 55.7412 42.3741 55.906 42.0307 56.0685C41.3393 56.3927 40.6325 56.6903 39.9104 56.9615C39.2881 57.1989 38.652 57.4121 38.0102 57.6068C37.8765 57.6506 37.7428 57.6887 37.6092 57.7221C31.4702 59.4607 24.9323 59.1562 18.9815 56.8544L18.9527 56.8451C17.5908 56.3139 16.2704 55.6818 15.0025 54.9541L14.9864 54.9449C14.9737 54.9357 14.9576 54.9299 14.9449 54.9196C14.6464 54.7479 14.3537 54.5739 14.061 54.386C12.035 53.1164 10.1707 51.6054 8.50903 49.8861C9.43091 46.6538 13.1184 46.1099 13.5206 46.0627L13.4929 45.891L12.7105 41.0373C12.3851 38.9292 12.5084 36.7762 13.0723 34.719C13.0884 34.6648 13.1046 34.6038 13.1207 34.553C13.1368 34.5023 13.1518 34.4482 13.1714 34.394C13.5717 33.0527 14.2065 31.7929 15.0463 30.6731C15.6603 29.8608 16.3808 29.1348 17.1885 28.5148L14.4044 15.9024L16.1018 15.4829L19.3088 27.1884C21.2574 26.2066 23.7557 25.5037 26.9523 25.2721C27.0065 25.2663 27.0572 25.2629 27.1113 25.2594L27.2703 25.2502C27.9617 25.2018 28.6716 25.1799 29.4218 25.1799C30.2284 25.1799 30.989 25.2052 31.7195 25.2559L31.8786 25.2663C31.9327 25.2663 31.9834 25.2721 32.0376 25.279C35.3909 25.529 37.9745 26.2769 39.9646 27.3129L43.137 15.718L44.8332 16.1328L42.0676 28.6646C42.7754 29.2263 43.4134 29.8708 43.9678 30.5844C44.49 31.2564 44.9334 31.9859 45.2895 32.7588C45.3276 32.8384 45.3667 32.9179 45.3979 32.9974C45.4843 33.1875 45.5638 33.3788 45.6283 33.5736C45.6606 33.6588 45.6917 33.7418 45.7205 33.8248C45.7908 34.0184 45.8542 34.2085 45.9118 34.4009C45.9279 34.4551 45.9429 34.5162 45.9591 34.5657L46.0063 34.734C46.042 34.8619 46.0731 34.9852 46.1019 35.1096C46.125 35.1984 46.1434 35.2871 46.163 35.3758C46.1826 35.4646 46.201 35.551 46.2172 35.6374C46.2448 35.7768 46.2702 35.9163 46.2932 36.0569C46.3948 36.6548 46.4564 37.2588 46.4776 37.8649C46.4776 37.9352 46.4776 38.002 46.4776 38.0688C46.5071 38.8585 46.4604 39.6493 46.3382 40.43L45.5684 45.6328L45.4866 46.1894C45.4915 46.1883 45.4966 46.1883 45.5016 46.1894C45.9176 46.2459 49.6039 46.7852 50.5293 50.021Z",\n    fill: "white"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M14.8608 16.7227C16.1775 16.7227 17.245 15.6553 17.245 14.3385C17.245 13.0218 16.1775 11.9543 14.8608 11.9543C13.544 11.9543 12.4766 13.0218 12.4766 14.3385C12.4766 15.6553 13.544 16.7227 14.8608 16.7227Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M44.3791 16.7227C45.6958 16.7227 46.7633 15.6553 46.7633 14.3385C46.7633 13.0218 45.6958 11.9543 44.3791 11.9543C43.0623 11.9543 41.9949 13.0218 41.9949 14.3385C41.9949 15.6553 43.0623 16.7227 44.3791 16.7227Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.3532 40.4357L45.5834 45.6386L45.5016 46.1952L44.8943 50.3171L44.8528 50.5844L44.2075 54.9288C44.2007 54.9337 44.1933 54.938 44.1856 54.9414L44.0646 55.0083C43.7627 55.1765 43.4608 55.3448 43.1519 55.5038L43.0448 55.5614C42.7106 55.7331 42.3741 55.8979 42.0307 56.0604C41.3393 56.3846 40.6325 56.6822 39.9104 56.9534C40.1201 54.4183 40.3241 51.8958 40.5085 49.5669L40.5177 49.4805V49.4644L40.5269 49.3215V49.2996C40.5269 49.2546 40.5269 49.2074 40.5396 49.1624C40.5592 48.9216 40.5741 48.6831 40.5972 48.4514L40.6479 47.8499C40.664 47.6529 40.679 47.4627 40.6986 47.2737C41.1215 42.8245 42.0434 40.6028 42.2301 38.4157V38.3811C42.2589 38.0354 42.2773 37.7104 42.2877 37.3959C42.2877 37.3325 42.2877 37.2691 42.2934 37.2023C42.3822 34.6176 42.0872 33.0665 43.9655 30.5844C44.4876 31.2563 44.9311 31.9859 45.2872 32.7588C45.3253 32.8383 45.3644 32.9178 45.3956 32.9974C45.482 33.1875 45.5615 33.3788 45.626 33.5735C45.6583 33.6588 45.6894 33.7418 45.7182 33.8247C45.7885 34.0183 45.8519 34.2085 45.9095 34.4009C45.9256 34.4551 45.9406 34.5161 45.9567 34.5657L46.004 34.7339C46.0397 34.8619 46.0708 34.9852 46.0996 35.1096C46.1227 35.1983 46.1411 35.2871 46.1607 35.3758C46.1803 35.4645 46.1987 35.551 46.2149 35.6374C46.2425 35.7768 46.2679 35.9162 46.2909 36.0568C46.3925 36.6547 46.4541 37.2588 46.4753 37.8649C46.4753 37.9352 46.4753 38.002 46.4753 38.0688C46.5109 38.8599 46.47 39.6525 46.3532 40.4357Z",\n    fill: "#D8DDEE"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M18.9526 56.8451C17.5907 56.3139 16.2703 55.6818 15.0023 54.9541C14.9827 54.9449 14.9643 54.9322 14.9447 54.9219L13.4928 45.8933L12.7103 41.0396C12.3768 38.8739 12.5167 36.6617 13.1206 34.5554C13.5212 33.1557 14.1738 31.8409 15.0461 30.6754C16.7182 33.0458 16.5015 34.6003 16.5684 37.0663C16.5684 37.1746 16.5753 37.2887 16.5787 37.4005C16.5914 37.7404 16.6099 38.0919 16.6421 38.471V38.5067C16.8265 40.6904 17.7126 42.9087 18.1609 47.2438C18.1667 47.3256 18.177 47.4086 18.1828 47.4916C18.2058 47.722 18.2277 47.9686 18.2496 48.2129L18.3003 48.8237C18.313 48.9689 18.3257 49.1129 18.3361 49.2558C18.3361 49.2777 18.3361 49.303 18.3361 49.3249C18.3453 49.4459 18.3557 49.5692 18.3649 49.6902L18.3868 49.9703C18.5677 52.1482 18.759 54.4874 18.9526 56.8451Z",\n    fill: "#D8DDEE"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.565 37.1251L25.4081 34.8389L24.1774 37.1228L26.565 37.1251Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.8231 37.284H23.9111L25.4092 34.4977L26.8231 37.284ZM24.4435 36.9637H26.3057L25.4034 35.1799L24.4435 36.9637Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M34.3779 37.1251L33.2221 34.8389L31.9902 37.1228L34.3779 37.1251Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M34.6361 37.284H31.7241L33.2222 34.4977L34.6361 37.284ZM32.2565 36.9637H34.1198L33.2176 35.1799L32.2565 36.9637Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M37.2277 41.7252C38.1346 41.7252 38.8698 40.99 38.8698 40.0831C38.8698 39.1762 38.1346 38.441 37.2277 38.441C36.3208 38.441 35.5856 39.1762 35.5856 40.0831C35.5856 40.99 36.3208 41.7252 37.2277 41.7252Z",\n    fill: "#F7EBE4"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M21.6537 42.1493C22.5606 42.1493 23.2958 41.4141 23.2958 40.5072C23.2958 39.6003 22.5606 38.8651 21.6537 38.8651C20.7468 38.8651 20.0116 39.6003 20.0116 40.5072C20.0116 41.4141 20.7468 42.1493 21.6537 42.1493Z",\n    fill: "#F7EBE4"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.5431 34.1774C46.3172 34.1899 46.1004 34.2702 45.9208 34.4078C45.9162 34.4102 45.9119 34.4134 45.9082 34.4171C45.3193 34.8492 44.7639 35.9151 44.2615 37.5987C43.4548 40.2652 42.9835 43.7672 42.7634 45.6178C42.6712 46.4337 42.6044 47.1366 42.5595 47.7059C42.532 48.1031 42.3546 48.475 42.0632 48.7463C41.7717 49.0176 41.3881 49.168 40.99 49.1671H18.0503C17.6432 49.1659 17.2524 49.0074 16.9595 48.7248C16.6666 48.4422 16.4942 48.0573 16.4785 47.6506C16.4473 46.9707 16.4093 46.3058 16.3632 45.6732C16.1247 42.2979 15.6799 39.5807 15.0438 37.5941C14.3524 35.4426 13.5884 34.6798 13.2196 34.4378C13.2056 34.4208 13.1884 34.4067 13.1689 34.3963C13.1689 34.3963 13.1597 34.3963 13.1563 34.3906C13.0594 34.3202 12.9492 34.2704 12.8324 34.2442C12.812 34.2407 12.7911 34.2412 12.7709 34.2457C12.7506 34.2502 12.7315 34.2587 12.7145 34.2706C12.6803 34.2947 12.657 34.3314 12.6498 34.3727C12.6426 34.414 12.6521 34.4564 12.6762 34.4906C12.7003 34.5249 12.737 34.5482 12.7783 34.5553C12.8545 34.5802 12.9264 34.6168 12.9915 34.6637L13.0099 34.6729L13.0191 34.6833C13.0372 34.6942 13.0542 34.707 13.0698 34.7213C13.442 34.9875 14.1069 35.725 14.7384 37.6897C15.3699 39.6545 15.8101 42.3463 16.0452 45.6985C16.0901 46.3254 16.1282 46.9857 16.1604 47.6633C16.1794 48.1518 16.3866 48.6141 16.7386 48.9534C17.0906 49.2927 17.5602 49.4828 18.0491 49.484H40.9946C41.473 49.4857 41.9342 49.3055 42.2847 48.9798C42.6352 48.6541 42.8488 48.2074 42.8821 47.7301C42.9236 47.1608 42.9973 46.4625 43.0849 45.6559C43.2981 43.8121 43.7763 40.332 44.5668 37.6874C45.0278 36.1652 45.5106 35.173 46.0153 34.7409C46.0408 34.7153 46.0685 34.6921 46.0983 34.6717C46.2299 34.5667 46.3911 34.5054 46.5592 34.4966C46.6015 34.4948 46.6414 34.4763 46.6701 34.4452C46.6988 34.4141 46.7141 34.3729 46.7125 34.3306C46.7123 34.3092 46.7076 34.288 46.6988 34.2684C46.69 34.2489 46.6772 34.2314 46.6613 34.217C46.6454 34.2026 46.6267 34.1916 46.6063 34.1848C46.586 34.178 46.5645 34.1755 46.5431 34.1774Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M31.8784 25.2628L31.7194 25.2525V30.0589H27.2702V25.2467L27.1112 25.2559C27.057 25.2559 27.0063 25.2628 26.9521 25.2686V30.2168C26.9521 30.2589 26.9689 30.2994 26.9987 30.3292C27.0285 30.359 27.069 30.3758 27.1112 30.3758H31.8784C31.9204 30.3752 31.9605 30.3582 31.9902 30.3286C32.0199 30.2989 32.0368 30.2588 32.0374 30.2168V25.2755C31.9833 25.2686 31.9326 25.2651 31.8784 25.2628Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M29.5681 44.0449C30.3363 44.0449 30.959 42.9615 30.959 41.625C30.959 40.2885 30.3363 39.2051 29.5681 39.2051C28.8 39.2051 28.1772 40.2885 28.1772 41.625C28.1772 42.9615 28.8 44.0449 29.5681 44.0449Z",\n    fill: "#C9D1E5"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M22.9202 33.3396C22.9202 33.3396 24.8791 30.3965 27.0087 33.1218",\n    stroke: "#7386F3",\n    strokeMiterlimit: "10",\n    strokeLinecap: "round"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M35.4922 33.3396C35.4922 33.3396 33.5332 30.3965 31.4037 33.1218",\n    stroke: "#7386F3",\n    strokeMiterlimit: "10",\n    strokeLinecap: "round"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M13.1714 34.3963L13.0723 34.7212L12.7934 34.659L12.4362 34.5023L12.5399 34.1715L12.8187 34.1681L13.1714 34.3963Z",\n    fill: "#FFAC4A"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.9209 34.4067L46.0154 34.7397L46.7679 34.4401L46.6745 34.1405L46.2747 34.0645L45.9209 34.4067Z",\n    fill: "#FFAC4A"\n  }));\n});\n/* harmony default export */ const robot_worried = (RobotWorried);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/robot-sad.js\n\n\nvar robot_sad_excluded = ["size"];\n\n\nvar RobotSad = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 59 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, robot_sad_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 59 59",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M50.8184 49.6567C50.725 49.7547 50.6271 49.8492 50.5326 49.9448C50.3828 50.1004 50.2341 50.2525 50.0786 50.4058C50.0721 50.4142 50.0643 50.4216 50.0555 50.4277C49.9403 50.5429 49.817 50.6581 49.6995 50.7734C48.0335 52.3415 46.1903 53.7102 44.2074 54.8515C44.2016 54.8515 44.1947 54.8607 44.1855 54.8642L44.0645 54.9299C43.7626 55.0981 43.4607 55.2675 43.1518 55.4254L43.0447 55.483C42.7105 55.6547 42.374 55.8195 42.0306 55.9819C41.3392 56.3058 40.6317 56.6054 39.9103 56.875C39.288 57.1136 38.6519 57.3267 38.0101 57.5203C37.8764 57.5653 37.7427 57.6033 37.6091 57.6413C31.4699 59.3784 24.9326 59.0738 18.9814 56.7736L18.9526 56.7644C17.5909 56.2326 16.2706 55.6006 15.0024 54.8734C14.9955 54.8734 14.992 54.8665 14.9863 54.8665L14.9448 54.8446C14.6463 54.6729 14.3536 54.4989 14.0609 54.3111C12.0349 53.041 10.1706 51.5296 8.50894 49.81L8.47667 49.7789C8.45676 49.7555 8.4356 49.7332 8.41329 49.712C3.18524 44.2642 0.270299 37.0033 0.280054 29.4527C0.280054 13.268 13.4006 0.145142 29.5876 0.145142C45.7746 0.145142 58.894 13.268 58.894 29.4527C58.9053 36.9762 56.0125 44.2138 50.8184 49.6567Z",\n    fill: "#E85B46"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M50.5291 49.9459C50.3793 50.1015 50.2307 50.2536 50.0751 50.4069C50.0686 50.4153 50.0608 50.4227 50.0521 50.4288C49.9368 50.544 49.8135 50.6592 49.696 50.7745C48.031 52.342 46.189 53.7102 44.2074 54.8515C44.2016 54.8515 44.1947 54.8607 44.1855 54.8641L44.0645 54.9298C43.7626 55.1015 43.4607 55.2675 43.1518 55.4288L43.0447 55.4864C42.7105 55.6581 42.374 55.8229 42.0306 55.9854C41.3392 56.3092 40.6316 56.6088 39.9103 56.8784C39.288 57.117 38.6519 57.3301 38.0101 57.5237C37.8764 57.5687 37.7427 57.6067 37.609 57.6447C31.4699 59.3818 24.9325 59.0772 18.9814 56.777L18.9526 56.7678C17.5909 56.236 16.2705 55.604 15.0024 54.8768L14.9862 54.8664C14.9736 54.8572 14.9574 54.8503 14.9448 54.8411C14.6463 54.6694 14.3536 54.4954 14.0609 54.3075C12.0348 53.0375 10.1705 51.5261 8.50891 49.8065C9.43079 46.5799 13.1183 46.0303 13.5205 45.983L13.4928 45.8113L12.7104 40.9576C12.385 38.8495 12.5083 36.6965 13.0722 34.6393L13.1206 34.4746C13.1367 34.4204 13.1517 34.3697 13.1713 34.3155C13.5716 32.9739 14.2063 31.7137 15.0462 30.5935C15.6604 29.7814 16.3809 29.0555 17.1884 28.4351L14.4043 15.8239L16.1017 15.4044L19.3087 27.1099C21.2573 26.1281 23.7556 25.4252 26.9522 25.1936C27.0063 25.1867 27.057 25.1832 27.1112 25.1809L27.2702 25.1705C27.9616 25.1233 28.6715 25.1014 29.4216 25.1014C30.2283 25.1014 30.9888 25.1267 31.7194 25.1774L31.8784 25.1867C31.9326 25.1867 31.9833 25.1936 32.0375 25.1993C35.3908 25.4506 37.9743 26.1973 39.9644 27.2332L43.1368 15.6418L44.8331 16.0624L42.0675 28.5941C42.7756 29.1555 43.4136 29.8001 43.9677 30.514C44.4898 31.1855 44.9333 31.9147 45.2894 32.6873C45.3274 32.7668 45.3666 32.8463 45.3977 32.9258C45.4842 33.1171 45.5637 33.3072 45.6282 33.502C45.6605 33.5884 45.6916 33.6714 45.7204 33.7532C45.7907 33.9479 45.8541 34.1381 45.9117 34.3294C45.9278 34.3835 45.9428 34.4446 45.9589 34.4953L46.0062 34.6635C46.0419 34.7903 46.073 34.9148 46.1018 35.0381C46.1249 35.1279 46.1433 35.2167 46.1629 35.3054C46.1825 35.3941 46.2009 35.4806 46.2171 35.5658C46.2447 35.7064 46.2701 35.8458 46.2931 35.9853C46.3947 36.5836 46.4563 37.188 46.4775 37.7945C46.4775 37.8636 46.4775 37.9304 46.4775 37.9973C46.507 38.787 46.4603 39.5777 46.3381 40.3584L45.5683 45.5613L45.4865 46.1178C45.4913 46.1163 45.4966 46.1163 45.5014 46.1178C45.9174 46.1697 49.6038 46.7101 50.5291 49.9459Z",\n    fill: "white"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M14.8606 16.6467C16.1774 16.6467 17.2448 15.5793 17.2448 14.2625C17.2448 12.9457 16.1774 11.8783 14.8606 11.8783C13.5439 11.8783 12.4764 12.9457 12.4764 14.2625C12.4764 15.5793 13.5439 16.6467 14.8606 16.6467Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M44.3791 16.6467C45.6958 16.6467 46.7633 15.5793 46.7633 14.2625C46.7633 12.9457 45.6958 11.8783 44.3791 11.8783C43.0623 11.8783 41.9949 12.9457 41.9949 14.2625C41.9949 15.5793 43.0623 16.6467 44.3791 16.6467Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.3532 40.3596L45.5834 45.5625L45.5016 46.119L44.8943 50.2421L44.8528 50.5095L44.2075 54.8515C44.2017 54.8515 44.1948 54.8607 44.1856 54.8642L44.0646 54.9299C43.7627 55.0981 43.4608 55.2675 43.1519 55.4254L43.0448 55.483C42.7106 55.6547 42.3741 55.8195 42.0307 55.9819C41.3393 56.3058 40.6318 56.6054 39.9104 56.875C40.1201 54.3399 40.3241 51.8185 40.5085 49.4885L40.5177 49.4032V49.3871L40.5269 49.2442V49.2223C40.5269 49.1774 40.5269 49.1301 40.5396 49.0852C40.5592 48.8432 40.5741 48.6058 40.5972 48.373L40.6479 47.7726C40.664 47.5756 40.679 47.3843 40.6986 47.1965C41.1215 42.7461 42.0434 40.5244 42.2301 38.3384V38.3027C42.2589 37.957 42.2773 37.632 42.2877 37.3174C42.2877 37.2541 42.2877 37.1907 42.2934 37.1238C42.3822 34.5403 42.0872 32.9892 43.9655 30.5071C44.4876 31.1787 44.9311 31.9079 45.2872 32.6804C45.3253 32.7599 45.3644 32.8394 45.3956 32.9189C45.482 33.1102 45.5615 33.3004 45.626 33.4951C45.6583 33.5815 45.6894 33.6645 45.7182 33.7463C45.7885 33.9411 45.8519 34.1312 45.9095 34.3225C45.9256 34.3767 45.9406 34.4377 45.9567 34.4884L46.004 34.6567C46.0397 34.7834 46.0708 34.9079 46.0996 35.0312C46.1227 35.1211 46.1411 35.2098 46.1607 35.2985C46.1803 35.3873 46.1987 35.4737 46.2149 35.559C46.2425 35.6995 46.2679 35.839 46.2909 35.9784C46.3925 36.5767 46.4541 37.1811 46.4753 37.7876C46.4753 37.8567 46.4753 37.9236 46.4753 37.9904C46.511 38.7822 46.4701 39.5757 46.3532 40.3596Z",\n    fill: "#D8DDEE"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M18.9526 56.7701C17.5909 56.2384 16.2705 55.6063 15.0023 54.8791C14.9828 54.8687 14.9643 54.8561 14.9447 54.8469L13.4928 45.8171L12.7103 40.9634C12.3768 38.7981 12.5167 36.5863 13.1206 34.4803C13.5215 33.0805 14.174 31.7653 15.0461 30.5992C16.7182 32.9708 16.5015 34.5253 16.5684 36.9913C16.5684 37.0996 16.5753 37.2137 16.5788 37.3243C16.5914 37.67 16.6099 38.0157 16.6421 38.396V38.4306C16.8265 40.6143 17.7127 42.8325 18.1609 47.1676C18.1667 47.2506 18.1771 47.3336 18.1828 47.4154C18.2059 47.6459 18.2278 47.8925 18.2497 48.1379L18.3004 48.7475C18.313 48.8938 18.3257 49.0367 18.3361 49.1796C18.3361 49.2027 18.3361 49.228 18.3361 49.2499C18.3453 49.3652 18.3557 49.4942 18.3649 49.6152L18.3868 49.8952C18.5677 52.072 18.759 54.4113 18.9526 56.7701Z",\n    fill: "#D8DDEE"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.565 37.0489L25.4081 34.7627L24.1774 37.0478L26.565 37.0489Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.8231 37.2079H23.9111L25.4092 34.4204L26.8231 37.2079ZM24.4435 36.8887H26.3057L25.4034 35.1049L24.4435 36.8887Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M34.3779 37.0489L33.2221 34.7627L31.9902 37.0478L34.3779 37.0489Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M34.6361 37.2079H31.7241L33.2222 34.4204L34.6361 37.2079ZM32.2565 36.8887H34.1198L33.2176 35.1049L32.2565 36.8887Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M37.2277 41.649C38.1346 41.649 38.8698 40.9139 38.8698 40.007C38.8698 39.1001 38.1346 38.3649 37.2277 38.3649C36.3208 38.3649 35.5856 39.1001 35.5856 40.007C35.5856 40.9139 36.3208 41.649 37.2277 41.649Z",\n    fill: "#F7DDE4"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M21.6538 42.0731C22.5607 42.0731 23.2959 41.3379 23.2959 40.431C23.2959 39.5241 22.5607 38.7889 21.6538 38.7889C20.7469 38.7889 20.0117 39.5241 20.0117 40.431C20.0117 41.3379 20.7469 42.0731 21.6538 42.0731Z",\n    fill: "#F7EBE4"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M25.3354 42.6643C25.3354 41.5823 27.1619 40.7053 29.4147 40.7053C31.6676 40.7053 33.4929 41.5823 33.4929 42.6643C33.4929 43.7464 31.6007 42.7968 29.3445 42.7968C27.0882 42.7968 25.3354 43.7475 25.3354 42.6643Z",\n    fill: "#C9D1E5"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.5432 34.1024C46.3172 34.1143 46.1002 34.1947 45.9209 34.3329C45.9209 34.3329 45.9106 34.3398 45.9083 34.3433C45.3194 34.7754 44.764 35.8413 44.2616 37.5237C43.4549 40.1914 42.9836 43.6934 42.7635 45.5429C42.6713 46.3599 42.6045 47.0628 42.5596 47.6309C42.5316 48.0269 42.3546 48.3976 42.0642 48.6683C41.7738 48.939 41.3917 49.0896 40.9947 49.0898H18.0504C17.6435 49.0886 17.2529 48.9303 16.96 48.648C16.6671 48.3656 16.4946 47.981 16.4786 47.5745C16.4474 46.8946 16.4094 46.2308 16.3633 45.5982C16.1248 42.223 15.68 39.5058 15.0439 37.5191C14.3525 35.3666 13.5885 34.6037 13.2197 34.3629C13.2063 34.3453 13.1889 34.3311 13.169 34.3214C13.169 34.3214 13.1598 34.3214 13.1564 34.3145C13.0596 34.2442 12.9494 34.1947 12.8325 34.1693C12.7917 34.1628 12.7499 34.1724 12.716 34.196C12.6821 34.2197 12.6586 34.2555 12.6505 34.296C12.6446 34.3372 12.6545 34.3791 12.6782 34.4133C12.7019 34.4476 12.7377 34.4715 12.7784 34.4804C12.8549 34.5046 12.9269 34.5412 12.9916 34.5887L13.01 34.5979L13.0192 34.6072C13.0368 34.6189 13.0537 34.6316 13.0699 34.6452C13.4421 34.9125 14.107 35.65 14.7385 37.6136C15.37 39.5772 15.8102 42.2702 16.0453 45.6236C16.0902 46.2493 16.1282 46.9107 16.1605 47.5825C16.1793 48.0713 16.3863 48.5339 16.7383 48.8734C17.0904 49.213 17.5601 49.4033 18.0492 49.4044H40.9947C41.4732 49.4059 41.9344 49.2254 42.2849 48.8995C42.6354 48.5737 42.8489 48.1268 42.8822 47.6494C42.9237 47.0813 42.9975 46.3818 43.085 45.5752C43.2982 43.7314 43.7764 40.2513 44.5669 37.6079C45.0279 36.0856 45.5107 35.0934 46.0154 34.6613C46.0411 34.6357 46.0689 34.6122 46.0984 34.591C46.2304 34.4868 46.3914 34.4261 46.5593 34.417C46.6016 34.4152 46.6415 34.3968 46.6702 34.3657C46.6989 34.3346 46.7142 34.2934 46.7126 34.2511C46.7118 34.23 46.7066 34.2094 46.6976 34.1903C46.6885 34.1713 46.6756 34.1543 46.6598 34.1404C46.6439 34.1265 46.6254 34.116 46.6054 34.1095C46.5854 34.1029 46.5642 34.1005 46.5432 34.1024Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M31.8785 25.1867L31.7195 25.1774V29.9827H27.2703V25.1705L27.1113 25.1809C27.0571 25.1809 27.0064 25.1809 26.9523 25.1936V30.1417C26.9523 30.1839 26.969 30.2244 26.9988 30.2542C27.0287 30.284 27.0691 30.3008 27.1113 30.3008H31.8785C31.9205 30.3002 31.9606 30.2832 31.9903 30.2535C32.02 30.2238 32.037 30.1837 32.0376 30.1417V25.1993C31.9834 25.1936 31.9327 25.1901 31.8785 25.1867Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M25.7239 32.0098C25.7239 32.0098 24.946 34.3456 22.359 34.4297",\n    stroke: "#7386F3",\n    strokeMiterlimit: "10",\n    strokeLinecap: "round"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M32.7059 32.0098C32.7059 32.0098 33.4838 34.3456 36.0708 34.4297",\n    stroke: "#7386F3",\n    strokeMiterlimit: "10",\n    strokeLinecap: "round"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M13.2519 34.0667C13.2519 34.0667 13.0399 34.7316 12.9523 35.1233L12.5559 34.2084L13.2519 34.0667Z",\n    fill: "#E85B46"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.9209 34.3306L46.0154 34.6647L46.0557 34.7177L46.701 34.5195L46.7932 34.1266L46.4971 33.8961L45.9209 34.3306Z",\n    fill: "#E85B46"\n  }));\n});\n/* harmony default export */ const robot_sad = (RobotSad);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/robot-neutral.js\n\n\nvar robot_neutral_excluded = ["size"];\n\n\nvar RobotNeutral = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 59 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, robot_neutral_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 59 59",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M50.8183 49.6509C50.7249 49.7488 50.627 49.8422 50.5325 49.939C50.3827 50.0945 50.234 50.2466 50.0785 50.3999C50.0716 50.4057 50.0658 50.416 50.0554 50.4218C49.9402 50.537 49.8169 50.6523 49.6994 50.7675C48.0341 52.3385 46.1909 53.7095 44.2073 54.8526C44.2007 54.8579 44.1933 54.8622 44.1854 54.8652L44.0644 54.9321C43.7625 55.1003 43.4606 55.2685 43.1517 55.4276L43.0446 55.4852C42.7104 55.6569 42.3739 55.8217 42.0305 55.9842C41.3391 56.308 40.6316 56.6076 39.9102 56.8772C39.2879 57.1158 38.6518 57.3289 38.01 57.5225C37.8763 57.5663 37.7426 57.6055 37.609 57.6435C31.4698 59.3806 24.9324 59.076 18.9813 56.7758L18.9525 56.7654C17.5906 56.2342 16.2702 55.6021 15.0023 54.8744C14.9954 54.8744 14.9919 54.8687 14.9862 54.8687L14.9447 54.8468C14.6462 54.6751 14.3535 54.5011 14.0608 54.3121C12.0345 53.0428 10.1702 51.5317 8.50883 49.8122L8.47657 49.7799C8.45813 49.758 8.43508 49.7361 8.41319 49.7131C3.18279 44.2635 0.267624 36.9991 0.279946 29.4457C0.279946 13.2622 13.4005 0.139282 29.5875 0.139282C45.7745 0.139282 58.8939 13.2622 58.8939 29.4457C58.9054 36.9696 56.0125 44.2076 50.8183 49.6509Z",\n    fill: "#6E7BB2"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M50.529 49.9391C50.3792 50.0947 50.2305 50.2468 50.075 50.4001C50.0681 50.4058 50.0623 50.4162 50.0519 50.422C49.9367 50.5372 49.8134 50.6524 49.6959 50.7677C48.0316 52.338 46.1895 53.7086 44.2072 54.8516C44.2007 54.857 44.1933 54.8612 44.1853 54.8643L44.0644 54.9311C43.7624 55.1028 43.4605 55.2687 43.1517 55.4301L43.0445 55.4877C42.7104 55.6594 42.3739 55.8242 42.0305 55.9866C41.3391 56.3104 40.6315 56.6101 39.9102 56.8797C39.2879 57.1182 38.6518 57.3314 38.0099 57.525C37.8763 57.5688 37.7426 57.608 37.6089 57.646C31.4697 59.383 24.9324 59.0785 18.9813 56.7783L18.9525 56.7679C17.5906 56.2367 16.2702 55.6046 15.0022 54.8769C14.9965 54.8745 14.9911 54.8715 14.9861 54.8677C14.9734 54.8585 14.9573 54.8516 14.9446 54.8424C14.6462 54.6707 14.3535 54.4967 14.0608 54.3077C12.0345 53.0384 10.1701 51.5273 8.50879 49.8078C9.43066 46.5812 13.1182 46.0315 13.5203 45.9843L13.4927 45.8126L12.7102 40.9589C12.3849 38.8508 12.5082 36.6978 13.0721 34.6406L13.1205 34.4758C13.1366 34.4217 13.1516 34.371 13.1712 34.3168C13.5714 32.9751 14.2062 31.715 15.046 30.5947C15.6603 29.7827 16.3808 29.0568 17.1882 28.4364L14.4042 15.8159L16.1016 15.3965L19.3086 27.1031C21.2572 26.1202 23.7554 25.4184 26.952 25.1856C27.0062 25.1799 27.0569 25.1764 27.1111 25.173L27.2701 25.1637C27.9615 25.1165 28.6713 25.0935 29.4215 25.0935C30.2282 25.0935 30.9887 25.12 31.7193 25.1707L31.8783 25.1799C31.9325 25.1799 31.9832 25.1856 32.0373 25.1926C35.3907 25.4438 37.9742 26.1905 39.9643 27.2264L43.1367 15.635L44.833 16.0545L42.0673 28.5874C42.7755 29.1488 43.4135 29.7933 43.9676 30.5072C44.4897 31.1788 44.9332 31.9079 45.2893 32.6805C45.3273 32.76 45.3665 32.8395 45.3976 32.919C45.484 33.1092 45.5636 33.3005 45.6281 33.4952C45.6603 33.5816 45.6915 33.6634 45.7203 33.7464C45.7906 33.94 45.8539 34.1313 45.9116 34.3226C45.9277 34.3767 45.9427 34.4378 45.9588 34.4874L46.0061 34.6568C46.0418 34.7835 46.0729 34.908 46.1017 35.0313C46.1247 35.12 46.1432 35.2099 46.1628 35.2986C46.1824 35.3873 46.2008 35.4726 46.2169 35.559C46.2446 35.6985 46.2699 35.8391 46.293 35.9785C46.3945 36.5764 46.4561 37.1804 46.4774 37.7865C46.4774 37.8568 46.4774 37.9237 46.4774 37.9905C46.5068 38.7802 46.4601 39.5709 46.3379 40.3516L45.5682 45.5545L45.4863 46.1111C45.4912 46.1095 45.4965 46.1095 45.5013 46.1111C45.9173 46.1629 49.6037 46.7034 50.529 49.9391Z",\n    fill: "white"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M14.8605 16.6399C16.1773 16.6399 17.2447 15.5724 17.2447 14.2557C17.2447 12.9389 16.1773 11.8715 14.8605 11.8715C13.5438 11.8715 12.4763 12.9389 12.4763 14.2557C12.4763 15.5724 13.5438 16.6399 14.8605 16.6399Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M44.3791 16.6399C45.6958 16.6399 46.7633 15.5724 46.7633 14.2557C46.7633 12.9389 45.6958 11.8715 44.3791 11.8715C43.0623 11.8715 41.9949 12.9389 41.9949 14.2557C41.9949 15.5724 43.0623 16.6399 44.3791 16.6399Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.3529 40.3529L45.5831 45.5557L45.5013 46.1123L44.894 50.2342L44.8526 50.5016L44.2072 54.8459C44.2007 54.8513 44.1933 54.8556 44.1854 54.8586L44.0644 54.9254C43.7624 55.0937 43.4605 55.2619 43.1517 55.4209L43.0445 55.4785C42.7104 55.6502 42.3739 55.815 42.0305 55.9775C41.3391 56.3013 40.6315 56.6009 39.9102 56.8706C40.1199 54.3354 40.3238 51.8141 40.5082 49.4841L40.5174 49.3988V49.3826L40.5267 49.2397V49.2167C40.5267 49.1729 40.5267 49.1245 40.5393 49.0807C40.5589 48.8387 40.5739 48.6002 40.597 48.3686L40.6477 47.7682C40.6638 47.5712 40.6788 47.3799 40.6984 47.192C41.1213 42.7428 42.0431 40.5211 42.2298 38.3351V38.2994C42.2586 37.9537 42.2771 37.6287 42.2874 37.3141C42.2874 37.2508 42.2874 37.1874 42.2932 37.1205C42.3819 34.537 42.0869 32.9859 43.9653 30.5038C44.4874 31.1754 44.9309 31.9046 45.287 32.6771C45.325 32.7566 45.3642 32.8361 45.3953 32.9156C45.4817 33.1058 45.5613 33.2971 45.6258 33.4918C45.658 33.5782 45.6892 33.6601 45.718 33.743C45.7883 33.9366 45.8516 34.1279 45.9093 34.3192C45.9254 34.3734 45.9404 34.4344 45.9565 34.484L46.0038 34.6534C46.0395 34.7801 46.0706 34.9046 46.0994 35.0279C46.1224 35.1166 46.1409 35.2065 46.1605 35.2952C46.1801 35.384 46.1985 35.4692 46.2146 35.5557C46.2423 35.6951 46.2676 35.8357 46.2907 35.9751C46.3922 36.573 46.4538 37.177 46.4751 37.7831C46.4751 37.8534 46.4751 37.9203 46.4751 37.9871C46.5105 38.7778 46.4696 39.57 46.3529 40.3529Z",\n    fill: "#D8DDEE"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M18.9526 56.7623C17.5907 56.231 16.2703 55.5989 15.0023 54.8713C14.9828 54.862 14.9643 54.8494 14.9447 54.8401L13.4928 45.8104L12.7103 40.9567C12.3768 38.7914 12.5167 36.5796 13.1206 34.4736C13.5215 33.0738 14.174 31.7586 15.0461 30.5925C16.7182 32.9641 16.5015 34.5174 16.5684 36.9846C16.5684 37.0917 16.5753 37.207 16.5788 37.3176C16.5914 37.6633 16.6099 38.009 16.6421 38.3893V38.4239C16.8265 40.6075 17.7127 42.8258 18.1609 47.1609C18.1667 47.2439 18.1771 47.3269 18.1828 47.4087C18.2059 47.6392 18.2278 47.8858 18.2497 48.1301L18.3004 48.7408C18.313 48.8871 18.3257 49.03 18.3361 49.1729C18.3361 49.1948 18.3361 49.2202 18.3361 49.2432C18.3453 49.3584 18.3557 49.4887 18.3649 49.6097L18.3868 49.8885C18.5677 52.0653 18.759 54.4046 18.9526 56.7623Z",\n    fill: "#D8DDEE"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.5649 37.0421L25.4079 34.7559L24.1772 37.041L26.5649 37.0421Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.8231 37.2012H23.9111L25.4092 34.4148L26.8231 37.2012ZM24.4435 36.882H26.3057L25.4034 35.0981L24.4435 36.882Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M34.3778 37.0421L33.222 34.7559L31.9901 37.041L34.3778 37.0421Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M34.6359 37.2012H31.7239L33.2219 34.4148L34.6359 37.2012ZM32.2563 36.882H34.1196L33.2173 35.0981L32.2563 36.882Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M37.2275 41.6423C38.1344 41.6423 38.8696 40.9071 38.8696 40.0002C38.8696 39.0933 38.1344 38.3582 37.2275 38.3582C36.3206 38.3582 35.5854 39.0933 35.5854 40.0002C35.5854 40.9071 36.3206 41.6423 37.2275 41.6423Z",\n    fill: "#F7EBE4"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M21.6537 42.0664C22.5606 42.0664 23.2958 41.3312 23.2958 40.4243C23.2958 39.5174 22.5606 38.7822 21.6537 38.7822C20.7468 38.7822 20.0116 39.5174 20.0116 40.4243C20.0116 41.3312 20.7468 42.0664 21.6537 42.0664Z",\n    fill: "#F7EBE4"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M33.4927 41.4844C33.4927 42.5664 31.6674 42.6863 29.4146 42.6863C27.1617 42.6863 25.3341 42.571 25.3341 41.4844C25.3341 40.3977 27.2274 40.5948 29.4825 40.5948C31.7377 40.5948 33.4927 40.4046 33.4927 41.4844Z",\n    fill: "#C9D1E5"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.5431 34.0945C46.3172 34.107 46.1003 34.1873 45.9208 34.325L45.9081 34.3342C45.3193 34.7663 44.7639 35.838 44.2614 37.5158C43.4548 40.1823 42.9835 43.6855 42.7634 45.535C42.6712 46.352 42.6044 47.0538 42.5594 47.623C42.5334 48.0204 42.3573 48.3931 42.0667 48.6655C41.7761 48.9379 41.3928 49.0896 40.9946 49.0899H18.0502C17.6422 49.0887 17.2506 48.9295 16.9575 48.6456C16.6645 48.3618 16.4927 47.9754 16.4784 47.5677C16.4473 46.8878 16.4093 46.2229 16.3632 45.5914C16.1247 42.2151 15.6799 39.4978 15.0438 37.5112C14.3524 35.3598 13.5884 34.5969 13.2196 34.3561C13.2062 34.3385 13.1888 34.3243 13.1689 34.3146C13.1689 34.3146 13.1597 34.3146 13.1562 34.3077C13.0594 34.2373 12.9492 34.1875 12.8324 34.1613C12.7915 34.1552 12.7497 34.1651 12.7158 34.1889C12.6819 34.2127 12.6585 34.2486 12.6504 34.2892C12.6444 34.3304 12.6543 34.3724 12.6781 34.4066C12.7018 34.4408 12.7376 34.4647 12.7783 34.4736C12.8546 34.4977 12.9266 34.5338 12.9914 34.5808L13.0099 34.5912L13.0191 34.6004C13.0372 34.6114 13.0542 34.6241 13.0698 34.6384C13.442 34.9057 14.1069 35.6432 14.7384 37.6068C15.3699 39.5704 15.8101 42.2635 16.0452 45.6168C16.0901 46.2425 16.1281 46.9039 16.1604 47.5758C16.1791 48.0645 16.3862 48.5271 16.7382 48.8667C17.0902 49.2062 17.56 49.3965 18.0491 49.3976H40.9946C41.4731 49.3991 41.9343 49.2186 42.2848 48.8927C42.6353 48.5669 42.8488 48.12 42.8821 47.6426C42.9236 47.0733 42.9973 46.375 43.0849 45.5684C43.2981 43.7246 43.7763 40.2446 44.5668 37.5999C45.0278 36.0777 45.5106 35.0867 46.0153 34.6545C46.041 34.6289 46.0688 34.6054 46.0983 34.5842C46.2302 34.4798 46.3912 34.4186 46.5592 34.4091C46.5801 34.4083 46.6006 34.4035 46.6197 34.3948C46.6387 34.3861 46.6558 34.3738 46.67 34.3585C46.6842 34.3432 46.6953 34.3252 46.7026 34.3056C46.7099 34.286 46.7132 34.2652 46.7125 34.2443C46.7118 34.2231 46.7068 34.2024 46.6978 34.1832C46.6887 34.164 46.6759 34.1469 46.6601 34.1329C46.6442 34.1189 46.6256 34.1082 46.6055 34.1016C46.5854 34.095 46.5642 34.0926 46.5431 34.0945Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M31.8784 25.18L31.7194 25.1707V29.976H27.2702V25.1638L27.1112 25.173C27.057 25.173 27.0063 25.18 26.9521 25.1857V30.135C26.9525 30.1771 26.9693 30.2174 26.9991 30.2471C27.0288 30.2769 27.0691 30.2938 27.1112 30.2941H31.8784C31.9204 30.2935 31.9605 30.2765 31.9902 30.2468C32.0199 30.2171 32.0368 30.177 32.0374 30.135V25.1926C31.9833 25.1857 31.9326 25.1834 31.8784 25.18Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M13.1712 34.3146L13.0721 34.6384L12.587 34.5059L12.4729 34.0103L12.8635 33.9954L13.1712 34.3146Z",\n    fill: "#6E7BB2"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M45.9209 34.3237L46.0154 34.6579L46.8359 34.356L46.6861 34.0264L46.3 33.978L45.9209 34.3237Z",\n    fill: "#6E7BB2"\n  }));\n});\n/* harmony default export */ const robot_neutral = (RobotNeutral);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/node_modules/@scaleflex/icons/robot-happy.js\n\n\nvar robot_happy_excluded = ["size"];\n\n\nvar RobotHappy = functions_intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 59 : _ref$size,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, robot_happy_excluded);\n\n  return /*#__PURE__*/react.createElement("svg", (0,esm_extends/* default */.Z)({\n    ref: ref,\n    width: size,\n    height: size,\n    viewBox: "0 0 59 59",\n    fill: "none",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, rest), /*#__PURE__*/react.createElement("path", {\n    d: "M50.8184 49.7351C50.7251 49.8331 50.6271 49.9264 50.5326 50.0232C50.3828 50.1788 50.2342 50.3309 50.0786 50.4841C50.0717 50.4899 50.0659 50.5003 50.0556 50.506L49.6995 50.8517C48.0352 52.4221 46.1932 53.7927 44.2109 54.9356C44.2043 54.941 44.1969 54.9453 44.189 54.9483L44.068 55.0152C43.7661 55.1834 43.4641 55.3516 43.1553 55.5107L43.0482 55.5683C42.714 55.74 42.3775 55.9048 42.0341 56.0672C41.3427 56.3911 40.6351 56.6907 39.9138 56.9603C39.2915 57.1988 38.6554 57.412 38.0136 57.6056C37.8799 57.6494 37.7462 57.6886 37.6125 57.7266C31.4734 59.4637 24.936 59.1591 18.9849 56.8589L18.9561 56.8485C17.5942 56.3173 16.2738 55.6852 15.0059 54.9575C14.999 54.9575 14.9955 54.9518 14.9897 54.9518L14.9483 54.9299C14.6498 54.7582 14.3571 54.5842 14.0644 54.3952C12.0372 53.1261 10.1717 51.6155 8.50895 49.8964L8.47669 49.8642C8.45825 49.8423 8.4352 49.8204 8.41331 49.7973C3.18291 44.3478 0.267746 37.0834 0.280068 29.5299C0.280068 13.3464 13.4007 0.223511 29.5876 0.223511C45.7746 0.223511 58.894 13.3464 58.894 29.5299C58.9055 37.0538 56.0126 44.2919 50.8184 49.7351Z",\n    fill: "#3ECF8B"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M50.5292 50.0244C50.3794 50.18 50.2308 50.3321 50.0752 50.4854C50.0683 50.4911 50.0625 50.5015 50.0522 50.5073L49.6961 50.853C48.0318 52.4233 46.1898 53.7939 44.2075 54.9369C44.2009 54.9422 44.1935 54.9465 44.1856 54.9495L44.0646 55.0164C43.7627 55.1881 43.4608 55.354 43.1519 55.5153L43.0448 55.573C42.7106 55.7447 42.3741 55.9094 42.0307 56.0719C41.3393 56.3957 40.6318 56.6953 39.9104 56.965C39.2881 57.2035 38.652 57.4167 38.0102 57.6103C37.8765 57.6541 37.7428 57.6933 37.6092 57.7313C31.47 59.4683 24.9326 59.1638 18.9815 56.8636L18.9527 56.8532C17.5908 56.3219 16.2704 55.6898 15.0025 54.9622C14.9967 54.9598 14.9913 54.9567 14.9864 54.953C14.9737 54.9438 14.9575 54.9369 14.9449 54.9276C14.6464 54.7559 14.3537 54.5819 14.061 54.393C12.0352 53.1244 10.1709 51.6145 8.50903 49.8965C9.43091 46.6642 13.1184 46.1203 13.5206 46.073L13.4929 45.9013L12.7105 41.0477C12.3851 38.9396 12.5084 36.7865 13.0723 34.7294L13.1207 34.5646C13.1368 34.5104 13.1518 34.4597 13.1714 34.4056C13.5717 33.0639 14.2064 31.8037 15.0463 30.6835C15.6608 29.8717 16.3813 29.1458 17.1885 28.5251L14.4044 15.9024L16.1018 15.4829L19.3088 27.1896C21.2574 26.2066 23.7557 25.5048 26.9523 25.2721C27.0065 25.2663 27.0572 25.2629 27.1113 25.2594L27.2703 25.2502C27.9617 25.2029 28.6716 25.1799 29.4218 25.1799C30.2284 25.1799 30.989 25.2052 31.7195 25.2571L31.8786 25.2663C31.9327 25.2663 31.9834 25.2721 32.0376 25.279C35.3909 25.5302 37.9745 26.2769 39.9646 27.3129L43.137 15.7214L44.8332 16.1409L42.0676 28.6738C42.7757 29.2352 43.4137 29.8798 43.9678 30.5936C44.4899 31.2652 44.9334 31.9944 45.2895 32.7669C45.3276 32.8464 45.3667 32.9259 45.3979 33.0055C45.4843 33.1956 45.5638 33.3869 45.6283 33.5816C45.6606 33.6681 45.6917 33.7499 45.7205 33.8328C45.7908 34.0264 45.8542 34.2177 45.9118 34.409C45.9279 34.4632 45.9429 34.5242 45.959 34.5738L46.0063 34.7432C46.042 34.8699 46.0731 34.9944 46.1019 35.1177C46.125 35.2064 46.1434 35.2963 46.163 35.385C46.1826 35.4738 46.201 35.559 46.2172 35.6455C46.2448 35.7849 46.2702 35.9255 46.2932 36.0649C46.3947 36.6628 46.4563 37.2669 46.4776 37.873C46.4776 37.9432 46.4776 38.0101 46.4776 38.0769C46.5071 38.8666 46.4604 39.6573 46.3382 40.4381L45.5684 45.6409L45.4866 46.1975C45.4915 46.1959 45.4967 46.1959 45.5016 46.1975C45.9176 46.2482 49.6039 46.7852 50.5292 50.0244Z",\n    fill: "white"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M14.8608 16.7251C16.1775 16.7251 17.245 15.6576 17.245 14.3409C17.245 13.0241 16.1775 11.9567 14.8608 11.9567C13.544 11.9567 12.4766 13.0241 12.4766 14.3409C12.4766 15.6576 13.544 16.7251 14.8608 16.7251Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M44.3791 16.7251C45.6958 16.7251 46.7633 15.6576 46.7633 14.3409C46.7633 13.0241 45.6958 11.9567 44.3791 11.9567C43.0623 11.9567 41.9949 13.0241 41.9949 14.3409C41.9949 15.6576 43.0623 16.7251 44.3791 16.7251Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.353 40.438L45.5833 45.6408L45.5014 46.1974L44.8942 50.3193L44.8527 50.5866L44.2074 54.931C44.2008 54.9364 44.1934 54.9406 44.1855 54.9437L44.0645 55.0105C43.7626 55.1787 43.4606 55.347 43.1518 55.506L43.0447 55.5636C42.7105 55.7353 42.374 55.9001 42.0306 56.0626C41.3392 56.3864 40.6316 56.686 39.9103 56.9556C40.12 54.4205 40.324 51.8992 40.5083 49.5691L40.5176 49.4839V49.4677L40.5268 49.3248V49.3018C40.5268 49.258 40.5268 49.2096 40.5395 49.1658C40.559 48.9238 40.574 48.6853 40.5971 48.4537L40.6478 47.8533C40.6639 47.6562 40.6789 47.4649 40.6985 47.2771C41.1214 42.8279 42.0433 40.6062 42.2299 38.4202V38.3845C42.2588 38.0388 42.2772 37.7138 42.2876 37.3992C42.2876 37.3358 42.2876 37.2725 42.2933 37.2056C42.3821 34.6221 42.0871 33.071 43.9654 30.5889C44.4875 31.2605 44.931 31.9896 45.2871 32.7622C45.3251 32.8417 45.3643 32.9212 45.3954 33.0007C45.4819 33.1909 45.5614 33.3821 45.6259 33.5769C45.6582 33.6633 45.6893 33.7451 45.7181 33.8281C45.7884 34.0217 45.8518 34.213 45.9094 34.4043C45.9255 34.4584 45.9405 34.5195 45.9566 34.5691L46.0039 34.7385C46.0396 34.8652 46.0707 34.9897 46.0995 35.113C46.1226 35.2017 46.141 35.2916 46.1606 35.3803C46.1802 35.469 46.1986 35.5543 46.2147 35.6407C46.2424 35.7802 46.2678 35.9208 46.2908 36.0602C46.3923 36.6581 46.4539 37.2621 46.4752 37.8682C46.4752 37.9385 46.4752 38.0054 46.4752 38.0722C46.5107 38.8629 46.4698 39.6551 46.353 40.438Z",\n    fill: "#D8DDEE"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M18.9527 56.8474C17.5908 56.3161 16.2704 55.684 15.0025 54.9564C14.9829 54.9471 14.9644 54.9345 14.9449 54.9252L13.4929 45.8955L12.7105 41.0418C12.3769 38.8765 12.5169 36.6647 13.1207 34.5587C13.5216 33.1588 14.1741 31.8437 15.0463 30.6776C16.7183 33.0491 16.5017 34.6025 16.5685 37.0697C16.5685 37.1768 16.5754 37.2921 16.5789 37.4027C16.5916 37.7426 16.61 38.0941 16.6423 38.4744V38.5089C16.8266 40.6926 17.7128 42.9109 18.161 47.246C18.168 47.329 18.1772 47.412 18.1829 47.4938C18.206 47.7242 18.2279 47.9708 18.2498 48.2151L18.3005 48.8259C18.3132 48.9722 18.3258 49.1151 18.3362 49.258C18.3362 49.2799 18.3362 49.3053 18.3362 49.3283C18.3454 49.4493 18.3558 49.5738 18.365 49.6947L18.3869 49.9736C18.5678 52.1504 18.7591 54.4897 18.9527 56.8474Z",\n    fill: "#D8DDEE"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.565 37.1273L25.4092 34.8411L24.1774 37.1262L26.565 37.1273Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M26.8231 37.2864H23.9111L25.4092 34.5L26.8231 37.2864ZM24.4435 36.9672H26.3057L25.4034 35.1833L24.4435 36.9672Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M34.378 37.1273L33.2222 34.8411L31.9904 37.1262L34.378 37.1273Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M34.636 37.2864H31.724L33.222 34.5L34.636 37.2864ZM32.2564 36.9672H34.1197L33.2174 35.1833L32.2564 36.9672Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M37.2277 41.7274C38.1346 41.7274 38.8698 40.9922 38.8698 40.0853C38.8698 39.1784 38.1346 38.4432 37.2277 38.4432C36.3208 38.4432 35.5856 39.1784 35.5856 40.0853C35.5856 40.9922 36.3208 41.7274 37.2277 41.7274Z",\n    fill: "#F7EBE4"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M21.6537 42.1515C22.5606 42.1515 23.2958 41.4163 23.2958 40.5094C23.2958 39.6025 22.5606 38.8673 21.6537 38.8673C20.7468 38.8673 20.0116 39.6025 20.0116 40.5094C20.0116 41.4163 20.7468 42.1515 21.6537 42.1515Z",\n    fill: "#F7EBE4"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M33.493 42.0801C33.493 43.1622 31.6677 44.0391 29.4149 44.0391C27.162 44.0391 25.3356 43.1622 25.3356 42.0801C25.3356 40.9981 27.2277 41.9476 29.484 41.9476C31.7403 41.9476 33.493 40.9969 33.493 42.0801Z",\n    fill: "#C9D1E5"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.5432 34.1796C46.3173 34.1921 46.1005 34.2724 45.9209 34.41L45.9083 34.4193C45.3194 34.8514 44.764 35.9231 44.2616 37.6009C43.4549 40.2674 42.9836 43.7705 42.7635 45.6201C42.6713 46.4371 42.6045 47.1388 42.5596 47.7081C42.5324 48.1055 42.3551 48.4777 42.0636 48.7492C41.7722 49.0208 41.3884 49.1714 40.9901 49.1704H18.0504C17.6431 49.1692 17.2522 49.0106 16.9592 48.7278C16.6662 48.4449 16.494 48.0597 16.4786 47.6528C16.4474 46.9729 16.4094 46.308 16.3633 45.6765C16.1248 42.3001 15.68 39.5829 15.0439 37.5963C14.3525 35.4449 13.5885 34.682 13.2197 34.4412C13.2063 34.4236 13.1889 34.4094 13.169 34.3997C13.169 34.3997 13.1598 34.3997 13.1564 34.3928C13.0595 34.3224 12.9493 34.2726 12.8325 34.2464C12.7916 34.2403 12.7498 34.2501 12.7159 34.274C12.682 34.2978 12.6586 34.3337 12.6505 34.3743C12.6446 34.4155 12.6545 34.4574 12.6782 34.4917C12.7019 34.5259 12.7377 34.5498 12.7784 34.5587C12.8547 34.5827 12.9267 34.6189 12.9916 34.6659L13.01 34.6762L13.0192 34.6855C13.0373 34.6964 13.0543 34.7092 13.0699 34.7235C13.4421 34.9908 14.107 35.7283 14.7385 37.6919C15.37 39.6555 15.8102 42.3485 16.0453 45.7019C16.0902 46.3276 16.1282 46.989 16.1605 47.6609C16.1793 48.1496 16.3863 48.6122 16.7383 48.9517C17.0904 49.2913 17.5601 49.4816 18.0492 49.4827H40.9947C41.4732 49.4842 41.9344 49.3037 42.2849 48.9778C42.6354 48.652 42.8489 48.2051 42.8822 47.7277C42.9237 47.1584 42.9974 46.4601 43.085 45.6535C43.2982 43.8097 43.7764 40.3296 44.5669 37.685C45.0279 36.1628 45.5107 35.1717 46.0154 34.7396C46.0411 34.714 46.0689 34.6905 46.0984 34.6693C46.2303 34.5649 46.3913 34.5037 46.5593 34.4942C46.5802 34.4934 46.6008 34.4886 46.6198 34.4799C46.6388 34.4712 46.6559 34.4589 46.6701 34.4435C46.6844 34.4282 46.6954 34.4103 46.7027 34.3907C46.71 34.3711 46.7134 34.3503 46.7126 34.3294C46.7119 34.3082 46.7069 34.2874 46.6979 34.2683C46.6889 34.2491 46.676 34.232 46.6602 34.218C46.6443 34.204 46.6258 34.1933 46.6057 34.1867C46.5855 34.1801 46.5643 34.1777 46.5432 34.1796Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M31.8784 25.2652L31.7194 25.2559V30.0612H27.2702V25.249L27.1112 25.2582C27.057 25.2582 27.0063 25.2652 26.9521 25.2709V30.2202C26.9525 30.2623 26.9693 30.3026 26.9991 30.3323C27.0288 30.3621 27.0691 30.379 27.1112 30.3793H31.8784C31.9204 30.3787 31.9605 30.3617 31.9902 30.332C32.0199 30.3023 32.0368 30.2622 32.0374 30.2202V25.2778C31.9833 25.2709 31.9326 25.2686 31.8784 25.2652Z",\n    fill: "#7386F3"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M22.5457 33.9514C22.5457 33.9514 23.3246 31.6156 25.9117 31.5315",\n    stroke: "#7386F3",\n    strokeMiterlimit: "10",\n    strokeLinecap: "round"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M36.2574 33.9514C36.2574 33.9514 35.4784 31.6156 32.8926 31.5315",\n    stroke: "#7386F3",\n    strokeMiterlimit: "10",\n    strokeLinecap: "round"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M12.9363 35.1959L13.2497 34.1323L12.3382 33.4017L11.9625 34.3824L12.9363 35.1959Z",\n    fill: "#3ECF8B"\n  }), /*#__PURE__*/react.createElement("path", {\n    d: "M46.1445 35.1649L45.8311 34.1013L46.7426 33.3707L47.1171 34.3514L46.1445 35.1649Z",\n    fill: "#3ECF8B"\n  }));\n});\n/* harmony default export */ const robot_happy = (RobotHappy);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/robot/types/status.js\nvar Status = {\n  Happy: \'happy\',\n  Neutral: \'neutral\',\n  Sad: \'sad\',\n  Worried: \'worried\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/robot/robot.styles.js\n\n // import type { With } from \'../../utils/types\';\n// import type { WithTheme } from \'../../theme/entity\';\n// import { Color as PColor } from \'../../utils/types/palette\';\n// import { BorderRadiusSize as BRSize } from \'../../utils/types/shape\';\n\nvar robot_styles_baseClassName = \'Robot\';\nvar Robot = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(robot_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-q3dl9f-0"\n})(function () {\n  return Ce(["display:flex;"]);\n});\nvar robot_styles_Styled = applyDisplayNames({\n  Robot: Robot\n});\n/* harmony default export */ const robot_styles = (robot_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/robot/robot.component.js\n\n\nvar robot_component_excluded = ["status"];\n\n\n\n\n\n\n\n\n\n\nvar getRobotIcon = function getRobotIcon(status) {\n  switch (status) {\n    case Status.Worried:\n      return /*#__PURE__*/react.createElement(robot_worried, null);\n\n    case Status.Sad:\n      return /*#__PURE__*/react.createElement(robot_sad, null);\n\n    case Status.Neutral:\n      return /*#__PURE__*/react.createElement(robot_neutral, null);\n\n    case Status.Happy:\n    default:\n      return /*#__PURE__*/react.createElement(robot_happy, null);\n  }\n};\n\nvar robot_component_Robot = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var status = _ref.status,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, robot_component_excluded);\n\n  return /*#__PURE__*/react.createElement(robot_styles.Robot, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), getRobotIcon(status));\n});\nvar robot_component_defaultProps = {\n  status: Status.Happy\n};\nrobot_component_Robot.defaultProps = robot_component_defaultProps;\nvar robot_component_propTypes = {\n  status: prop_types_default().oneOf(objectValues(Status))\n};\nrobot_component_Robot.propTypes = robot_component_propTypes;\n/* harmony default export */ const robot_component = (robot_component_Robot);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popup-content/popup-content.styles.js\n\n\n\n\n\nvar popup_content_styles_baseClassName = \'PopupContent\';\nvar LabelWrapper = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(popup_content_styles_baseClassName, \'Label\')\n}).withConfig({\n  componentId: "sc-njbmnt-0"\n})(function (_ref) {\n  var _ref$theme = _ref.theme,\n      palette = _ref$theme.palette,\n      shape = _ref$theme.shape;\n  return Ce(["display:flex;flex-grow:1;margin-left:31px;padding:8px 8px 8px 39px;background:", ";border-radius:", ";min-height:41px;"], palette[Color.ButtonPrimaryText], shape.borderRadius[BorderRadiusSize.Sm]);\n});\nvar popup_content_styles_Label = /*#__PURE__*/styled_components_browser_esm.span.attrs({\n  className: generateClassNames(popup_content_styles_baseClassName, \'Label\')\n}).withConfig({\n  componentId: "sc-njbmnt-1"\n})(function (_ref2) {\n  var _ref2$theme = _ref2.theme,\n      palette = _ref2$theme.palette,\n      font = _ref2$theme.typography.font;\n  return Ce(["display:flex;align-items:center;color:", ";", ""], palette[Color.TextSecondary], font[FontVariant.LabelSmall]);\n});\nvar PopupContent = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(popup_content_styles_baseClassName, \'PopupContent\')\n}).withConfig({\n  componentId: "sc-njbmnt-2"\n})(["position:relative;display:flex;align-items:center;width:256px;filter:drop-shadow(0px 4px 4px rgba(0,0,0,0.25));"]);\nvar popup_content_styles_Robot = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(popup_content_styles_baseClassName, \'Robot\')\n}).withConfig({\n  componentId: "sc-njbmnt-3"\n})(function (_ref3) {\n  var palette = _ref3.theme.palette;\n  return Ce(["position:absolute;left:0;display:flex;z-index:1;border-radius:50%;background:", ";border:1px solid ", ";box-sizing:border-box;"], palette[Color.ButtonPrimaryText], palette[Color.BackgroundSecondary]);\n});\nvar popup_content_styles_Styled = applyDisplayNames({\n  PopupContent: PopupContent,\n  Robot: popup_content_styles_Robot,\n  LabelWrapper: LabelWrapper,\n  Label: popup_content_styles_Label\n});\n/* harmony default export */ const popup_content_styles = (popup_content_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popup-content/popup-content.component.js\n\n\n\nvar popup_content_component_excluded = ["message", "status"];\n\nfunction popup_content_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction popup_content_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { popup_content_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { popup_content_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\nvar popup_content_component_PopupContent = intrinsic_component_intrinsicComponent(function (_ref, ref) {\n  var message = _ref.message,\n      status = _ref.status,\n      rest = (0,objectWithoutProperties/* default */.Z)(_ref, popup_content_component_excluded);\n\n  return /*#__PURE__*/react.createElement(popup_content_styles.PopupContent, (0,esm_extends/* default */.Z)({}, rest, {\n    ref: ref\n  }), /*#__PURE__*/react.createElement(popup_content_styles.Robot, null, /*#__PURE__*/react.createElement(robot_component, {\n    status: status\n  })), /*#__PURE__*/react.createElement(popup_content_styles.LabelWrapper, null, /*#__PURE__*/react.createElement(popup_content_styles.Label, null, message)));\n});\nvar popup_content_component_defaultProps = popup_content_component_objectSpread({}, robot_component_defaultProps);\npopup_content_component_PopupContent.defaultProps = popup_content_component_defaultProps;\nvar popup_content_component_propTypes = popup_content_component_objectSpread(popup_content_component_objectSpread({}, robot_component_propTypes), {}, {\n  message: (prop_types_default()).node.isRequired\n});\npopup_content_component_PopupContent.propTypes = popup_content_component_propTypes;\n/* harmony default export */ const popup_content_component = (popup_content_component_PopupContent);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popup/types/vertical.js\nvar Vertical = {\n  Top: \'top\',\n  Bottom: \'bottom\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popup/types/horizontal.js\nvar Horizontal = {\n  Center: \'center\',\n  Left: \'left\',\n  Right: \'right\'\n};\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popup/popup.mixin.js\n\n\nvar _positionHorizontalMi, _positionVerticalMixi;\n\n // import type { WithTheme } from \'../../theme/entity\';\n// import { Color as PaletteColor } from \'../../utils/types/palette\';\n\n\nvar positionHorizontalMixin = (_positionHorizontalMi = {}, (0,defineProperty/* default */.Z)(_positionHorizontalMi, Horizontal.Left, Ce(["left:25px;right:auto;"])), (0,defineProperty/* default */.Z)(_positionHorizontalMi, Horizontal.Center, Ce(["left:50%;right:auto;transform:translateX(-50%);"])), (0,defineProperty/* default */.Z)(_positionHorizontalMi, Horizontal.Right, Ce(["left:auto;right:25px;"])), _positionHorizontalMi);\nvar positionVerticalMixin = (_positionVerticalMixi = {}, (0,defineProperty/* default */.Z)(_positionVerticalMixi, Vertical.Top, Ce(["top:25px;bottom:auto;"])), (0,defineProperty/* default */.Z)(_positionVerticalMixi, Vertical.Bottom, Ce(["top:auto;bottom:25px;"])), _positionVerticalMixi); // export const errorMixin = ({ theme: { palette } }: WithTheme) => css`\n//   background: ${palette[PaletteColor.BackgroundSecondary]} !important;\n//   border: 1px solid ${palette[PaletteColor.Error]} !important;\n// `;\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popup/popup.styles.js\n\n // import type { WithTheme } from \'../../theme/entity\';\n// import { Color as PColor } from \'../../utils/types/palette\';\n// import { FontVariant } from \'../../utils/types/typography\';\n// import { BorderRadiusSize as BRSize } from \'../../utils/types/shape\';\n\n\n\nvar popup_styles_baseClassName = \'Popup\';\nvar Popup = /*#__PURE__*/styled_components_browser_esm.div.attrs({\n  className: generateClassNames(popup_styles_baseClassName, \'root\')\n}).withConfig({\n  componentId: "sc-jmtjri-0"\n})(function (_ref) {\n  var anchorOrigin = _ref.anchorOrigin;\n  return Ce(["position:fixed;display:flex;align-items:center;justify-content:center;z-index:1400;", " ", ""], positionHorizontalMixin[(anchorOrigin === null || anchorOrigin === void 0 ? void 0 : anchorOrigin.horizontal) || Horizontal.Left], positionVerticalMixin[(anchorOrigin === null || anchorOrigin === void 0 ? void 0 : anchorOrigin.vertical) || Vertical.Bottom]);\n});\nvar popup_styles_Styled = applyDisplayNames({\n  Popup: Popup\n});\n/* harmony default export */ const popup_styles = (popup_styles_Styled);\n;// CONCATENATED MODULE: ./node_modules/@scaleflex/ui/core/popup/popup.component.js\n\n\n\nvar popup_component_excluded = ["autoHideDuration", "anchorOrigin", "open", "onClose"];\n\nfunction popup_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction popup_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { popup_component_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { popup_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\n\n\nvar popup_component_Popup = intrinsic_component_intrinsicComponent(function (props, ref) {\n  var autoHideDuration = props.autoHideDuration,\n      anchorOrigin = props.anchorOrigin,\n      open = props.open,\n      onClose = props.onClose,\n      rest = (0,objectWithoutProperties/* default */.Z)(props, popup_component_excluded);\n\n  var target = use_portal(generateClassNames(\'Popup\'));\n  (0,react.useEffect)(function () {\n    var timeout = null;\n\n    if (open && autoHideDuration && typeof onClose === \'function\') {\n      timeout = setTimeout(onClose, autoHideDuration);\n    }\n\n    return function () {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, [autoHideDuration, open, onClose]);\n\n  var render = function render() {\n    if (!open) {\n      return null;\n    }\n\n    return /*#__PURE__*/react.createElement(popup_styles.Popup, props, /*#__PURE__*/react.createElement(popup_content_component, (0,esm_extends/* default */.Z)({}, rest, {\n      ref: ref\n    })));\n  };\n\n  return /*#__PURE__*/(0,react_dom.createPortal)(render(), target);\n});\npopup_component_Popup.defaultProps = popup_component_objectSpread(popup_component_objectSpread({}, popup_content_component_defaultProps), {}, {\n  open: false,\n  anchorOrigin: {\n    vertical: Vertical.Bottom,\n    horizontal: Horizontal.Left\n  }\n});\npopup_component_Popup.propTypes = popup_component_objectSpread(popup_component_objectSpread({}, popup_content_component_propTypes), {}, {\n  anchorOrigin: prop_types_default().exact({\n    vertical: prop_types_default().oneOf(objectValues(Vertical)),\n    horizontal: prop_types_default().oneOf(objectValues(Horizontal))\n  }),\n  open: (prop_types_default()).bool,\n  autoHideDuration: (prop_types_default()).number,\n  onClose: (prop_types_default()).func\n});\n/* harmony default export */ const popup_component = (popup_component_Popup);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/FeedbackPopup/index.js\nvar _ERROR_TO_ROBOT_STATU;var defaultAnchorOrigin={horizontal:"center",vertical:"bottom"},ERROR_TO_ROBOT_STATUS=(_ERROR_TO_ROBOT_STATU={},(0,defineProperty/* default */.Z)(_ERROR_TO_ROBOT_STATU,FEEDBACK_STATUSES.ERROR,"sad"),(0,defineProperty/* default */.Z)(_ERROR_TO_ROBOT_STATU,FEEDBACK_STATUSES.WARNING,"worried"),_ERROR_TO_ROBOT_STATU),FeedbackPopup=function(a){var b,c=a.anchorOrigin,d=hooks_useStore(),e=d.feedback,f=void 0===e?{}:e,g=d.dispatch;if(!f.message)return null;return react.createElement(popup_component,{className:"FIE_feedback-robot",anchorOrigin:c,autoHideDuration:null!==(b=f.duration)&&void 0!==b?b:5e3,message:f.message,open:!!f.message,status:ERROR_TO_ROBOT_STATUS[f.status||FEEDBACK_STATUSES.ERROR],onClose:function onClose(){g({type:SET_FEEDBACK,payload:{feedback:{}}})}})};FeedbackPopup.defaultProps={anchorOrigin:defaultAnchorOrigin};/* harmony default export */ const components_FeedbackPopup = (FeedbackPopup);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Spinner/Spinner.styled.js\nvar spin=Ue(["0%{transform:rotate(0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19);}50%{transform:rotate(900deg);animation-timing-function:cubic-bezier(0.215,0.61,0.355,1);}100%{transform:rotate(1800deg);}"]),StyledSpinnerWrapper=styled_components_browser_esm.div.withConfig({componentId:"sc-m42fbk-0"})(["background:rgba(0,0,0,0.25);display:flex;align-items:center;justify-content:center;position:absolute;z-index:11111;top:0;bottom:0;right:0;left:0;flex-direction:column;user-select:none;label{color:#ffffff;}"]),StyledSpinner=styled_components_browser_esm.div.withConfig({componentId:"sc-m42fbk-1"})(["display:inline-block;position:relative;width:80px;height:80px;:after{content:\' \';display:block;border-radius:50%;width:0;height:0;margin:8px;box-sizing:border-box;border:32px solid #fff;border-color:#fff transparent #fff transparent;animation:"," 1.2s infinite;}"],spin);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/common/Spinner/index.js\nvar Spinner_Spinner=function(a){var b=a.label;return react.createElement(StyledSpinnerWrapper,{className:"FIE_spinner-wrapper"},react.createElement(StyledSpinner,{className:"FIE_spinner"}),b&&react.createElement(label_component,{className:"FIE_spinner-label"},b))};Spinner_Spinner.defaultProps={label:""};/* harmony default export */ const common_Spinner = (Spinner_Spinner);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/cloudimageQueryToDesignState.js\nvar cloudimageQueryToDesignState_excluded=["cropX2","cropY2","crop","watermark"];function cloudimageQueryToDesignState_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function cloudimageQueryToDesignState_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?cloudimageQueryToDesignState_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):cloudimageQueryToDesignState_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var propertyToOperation=function(a,b){var c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:{},d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:{};switch(a){case"wat_text":return{watermark:{text:b.replaceAll("+"," ")}};case"wat_font":return{watermark:{fontFamily:b}};case"wat_color":return{watermark:{fill:"#".concat(b)}};case"wat_fontsize":return{watermark:{fontSize:parseFloat(b)}};case"wat_opacity":return{watermark:{opacity:parseFloat(b)}};case"wat_pos":{var e=b.split(","),f=(0,slicedToArray/* default */.Z)(e,2),g=f[0],h=f[1];return{watermark:{x:parseFloat(g)/100*c.width,y:parseFloat(h)/100*c.height}}}case"wat_url":return{watermark:{image:decodeURIComponent(b)}};case"wat_scale":{var i=b.split(","),j=(0,slicedToArray/* default */.Z)(i,2),k=j[0],l=j[1];return{watermark:{width:parseFloat(k)/100*(c.width||0),height:parseFloat(l)/100*(c.height||0)}}}case"tl_px":{var m=b.split(","),n=(0,slicedToArray/* default */.Z)(m,2),o=n[0],p=n[1];return{crop:{x:utils_mapNumber(parseFloat(o),0,d.width,0,c.width),y:utils_mapNumber(parseFloat(p),0,d.height,0,c.height)}}}case"br_px":{var q=b.split(","),r=(0,slicedToArray/* default */.Z)(q,2),s=r[0],t=r[1];return{cropX2:utils_mapNumber(parseFloat(s),0,d.width,0,c.width),cropY2:utils_mapNumber(parseFloat(t),0,d.height,0,c.height)}}case"round":return{crop:{ratio:ELLIPSE_CROP}};case"w":return{resize:{width:parseFloat(b)}};case"h":return{resize:{height:parseFloat(b)}};case"r":return{adjustments:{rotation:-parseInt(b,10)}};case"flip":case"mirror":return{adjustments:{isFlippedX:b.includes("x")||b.includes("h"),isFlippedY:b.includes("y")||b.includes("v")}};default:{var x;if(Object.keys(finetuneNameToParamInfo).forEach(function(b){finetuneNameToParamInfo[b].cloudimage.name===a.toLowerCase()&&(x=b)}),!x)return null;var u=finetuneNameToParamInfo[x],v=u.cloudimage,w=u.internal;return{finetunes:[lib.Filters[x]],finetunesProps:(0,defineProperty/* default */.Z)({},w.propName,utils_mapNumber(parseFloat(b),v.min,v.max,w.min,w.max))}}}},cloudimageQueryToDesignState=function(a,b,c){if(!a)return null;var d=a.split("&"),e={};d.forEach(function(a){var d=a.split("="),f=(0,slicedToArray/* default */.Z)(d,2),g=f[0],h=f[1],i=propertyToOperation(g,h,b,c);i&&(e=utils_deepMerge(e,i,!0))});var f=e,g=f.cropX2,h=f.cropY2,i=f.crop,j=f.watermark,k=(0,objectWithoutProperties/* default */.Z)(f,cloudimageQueryToDesignState_excluded),l=cloudimageQueryToDesignState_objectSpread(cloudimageQueryToDesignState_objectSpread(cloudimageQueryToDesignState_objectSpread({},k),g&&h&&i?{adjustments:cloudimageQueryToDesignState_objectSpread(cloudimageQueryToDesignState_objectSpread({},k.adjustments),{},{crop:cloudimageQueryToDesignState_objectSpread(cloudimageQueryToDesignState_objectSpread({},i),{},{width:(g||0)-i.x,height:(h||0)-i.y})})}:{}),{},{annotations:cloudimageQueryToDesignState_objectSpread({},j?(0,defineProperty/* default */.Z)({},WATERMARK_ANNOTATION_ID,cloudimageQueryToDesignState_objectSpread(cloudimageQueryToDesignState_objectSpread({},j),{},{x:((null===i||void 0===i?void 0:i.x)||0)+(j.x||0),y:((null===i||void 0===i?void 0:i.y)||0)+(j.y||0),id:WATERMARK_ANNOTATION_ID,name:j.text?TOOLS_IDS.TEXT:TOOLS_IDS.IMAGE},j.text?{width:j.text.length*j.fontSize,height:j.fontSize}:{})):{})});return l};/* harmony default export */ const utils_cloudimageQueryToDesignState = (cloudimageQueryToDesignState);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/utils/isSameImage.js\nvar isSameImage=function(a,b){return a&&b&&(a instanceof HTMLImageElement&&a.src===b.src&&a.width===b.width&&a.height===b.height||((null===a||void 0===a?void 0:a.src)||a)===b.src)};/* harmony default export */ const utils_isSameImage = (isSameImage);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/App/App.styled.js\nvar StyledAppWrapper=styled_components_browser_esm.div.attrs(function(a){var b,c,d=a.$size,e=void 0===d?{}:d;return{style:{width:null!==(b=e.width)&&void 0!==b?b:"100%",height:null!==(c=e.height)&&void 0!==c?c:"100%"}}}).withConfig({componentId:"sc-ugtqr7-0"})(["display:flex;flex-direction:column;align-items:center;height:100%;max-height:100%;width:100%;max-width:100%;overflow:auto;position:relative;min-height:250px;min-width:300px;"]),StyledMainContent=styled_components_browser_esm.div.withConfig({componentId:"sc-ugtqr7-1"})(["display:flex;align-items:flex-start;width:100%;padding:12px;box-sizing:border-box;height:calc(100% - 95px);flex-grow:1;[data-phone=\'true\'] &{padding:0;}"]),StyledCanvasAndTools=styled_components_browser_esm.div.withConfig({componentId:"sc-ugtqr7-2"})(["height:100%;width:calc(100% - 80px);flex-grow:1;overflow-y:auto;display:flex;flex-direction:column;"]),StyledPhoneToolsAndTabs=styled_components_browser_esm.div.withConfig({componentId:"sc-ugtqr7-3"})(["width:100%;flex-grow:1;"]);\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/App/index.js\nfunction App_ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function App_objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?App_ownKeys(Object(b),!0).forEach(function(c){(0,defineProperty/* default */.Z)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):App_ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var App=function(){var a=hooks_useStore(),b=a.config,c=a.isLoadingGlobally,d=a.haveNotSavedChanges,e=a.dispatch,f=a.originalImage,g=a.shownImageDimensions,h=a.t,i=a.feedback,j=void 0===i?{}:i,k=b.loadableDesignState,l=b.useCloudimage,m=b.cloudimage,n=b.source,o=b.avoidChangesNotSavedAlertOnLeave,p=b.useBackendTranslations,q=b.translations,r=b.language,s=b.defaultSavedImageName,t=b.observePluginContainerSize,u=b.showCanvasOnly,v=b.getCurrentImgDataFnRef,w=b.updateStateFnRef,x=hooks_useResizeObserver(),y=(0,slicedToArray/* default */.Z)(x,2),z=y[0],A=y[1],B=(0,react.useState)({width:void 0,height:void 0}),C=(0,slicedToArray/* default */.Z)(B,2),D=C[0],E=C[1],F=hooks_usePhoneScreen(),G=(0,react.useRef)(null),H=(0,react.useRef)(!0),I=(0,react.useRef)(!1),J=(0,react.useRef)(null),K=(0,react.useRef)(d),L=hooks_useTransformedImgData(),M=(0,react.useCallback)(function(a){e({type:SET_ORIGINAL_IMAGE,payload:{originalImage:a}})},[]),N=(0,react.useCallback)(function(a){e({type:SET_FEEDBACK,payload:{feedback:{message:a.message||a,duration:0}}})},[]),O=function(a){return new Promise(function(b){var c=(null===a||void 0===a?void 0:a.src)||a;if(J.current===c||!c&&f||utils_isSameImage(c,f))return void(J.current||b());var d=function(){J.current=null,b()};J.current=c,"string"==typeof a?utils_loadImage(a,s).then(M)["catch"](N)["finally"](d):a instanceof HTMLImageElement?(M(a),d()):(N(h("invalidImageError")),d())})},P=function(a){K.current&&(a.preventDefault(),a.returnValue="")},Q=function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){return[]};return e({type:SHOW_LOADER}),Promise.all(a())["finally"](function(){e({type:HIDE_LOADER})})},R=function(){k&&0<Object.keys(k).length&&e({type:UPDATE_STATE,payload:App_objectSpread(App_objectSpread({},k),{},{finetunes:utils_finetunesStrsToClasses(null===k||void 0===k?void 0:k.finetunes),filter:utils_filterStrToClass(null===k||void 0===k?void 0:k.filter)})})};return (0,react.useEffect)(function(){H.current||!n||utils_isSameImage(n,f)||(I.current=!1,Q(function(){return[O(n)]}))},[n]),(0,react.useEffect)(function(){if(!H.current){var a=null===k||void 0===k?void 0:k.imgSrc;a&&!utils_isSameImage(a,f)?Q(function(){return[O(a).then(R)]}):R()}},[k]),(0,react.useEffect)(function(){0<Object.keys(g||{}).length&&!Object.keys(g).some(function(a){return!g[a]})&&f&&l&&null!==m&&void 0!==m&&m.loadableQuery&&!I.current&&(e({type:UPDATE_STATE,payload:utils_cloudimageQueryToDesignState(m.loadableQuery,g,f)}),I.current=!0)},[g,f,l,m]),(0,react.useEffect)(function(){var a=!1;return t&&G.current?z(G.current.parentNode,function(a){var b=a.width,c=a.height;return E({width:b,height:c})}):D.width&&D.height&&!a&&E({width:void 0,height:void 0}),function(){t&&G.current&&A(G.current),a=!0}},[t]),(0,react.useEffect)(function(){return Q(function initialRequestsPromisesFn(){return[O((null===k||void 0===k?void 0:k.imgSrc)||n)].concat((0,toConsumableArray/* default */.Z)(p?[getBackendTranslations(r,q)]:[]))}),H.current=!1,window&&!o&&window.addEventListener("beforeunload",P),function(){window&&!o&&window.removeEventListener("beforeunload",P)}},[]),(0,react.useEffect)(function(){w&&"object"===(0,esm_typeof/* default */.Z)(w)&&(w.current=function(a){e({type:UPDATE_STATE,payload:a})})},[w,e]),(0,react.useEffect)(function(){v&&"object"===(0,esm_typeof/* default */.Z)(v)&&(v.current=L)},[L]),(0,react.useEffect)(function(){K.current=d},[d]),react.createElement(StyledAppWrapper,{className:ROOT_CONTAINER_CLASS_NAME,"data-phone":F,ref:G,$size:D},c&&react.createElement(common_Spinner,{label:h("loading")}),!u&&react.createElement(components_Topbar,null),f&&0!==j.duration&&react.createElement(StyledMainContent,{className:"FIE_main-container"},!F&&!u&&react.createElement(components_Tabs,null),react.createElement(StyledCanvasAndTools,{className:"FIE_editor-content"},react.createElement(components_MainCanvas,null),!u&&(F?react.createElement(StyledPhoneToolsAndTabs,{className:"FIE_phone-tools-tabs-wrapper"},react.createElement(components_ToolsBar,null),react.createElement(components_Tabs,null)):react.createElement(components_ToolsBar,null)))),react.createElement(components_FeedbackPopup,null))};/* harmony default export */ const components_App = ((0,react.memo)(App));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/AssemblyPoint/globalStyles.js\nvar FontsFaces=We([".","{font-family:",";}.SfxModal-Wrapper *{font-family:",";}"],ROOT_CONTAINER_CLASS_NAME,function(a){var b,c=a.theme,d=void 0===c?{}:c;return(null===(b=d.typography)||void 0===b?void 0:b.fontFamily)||"Arial"},function(a){var b,c=a.theme,d=void 0===c?{}:c;return(null===(b=d.typography)||void 0===b?void 0:b.fontFamily)||"Arial"}),OverrideDefaultStyles=We([".Menu-open{overflow:visible !important;}.",",#SfxPopper{box-sizing:border-box;.SfxPopper-root .SfxMenu-root{overflow:visible;width:max-content;.SfxMenuItem-prefix{margin-right:6px;}}}."," *,#SfxPopper *{box-sizing:border-box;scrollbar-color:rgba(203,211,218,1) rgba(203,211,218,0.35);:disabled,[aria-disabled=\\"true\\"]{cursor:not-allowed;}&::-webkit-scrollbar{width:4px;height:4px;}&::-webkit-scrollbar-track{background:rgba(203,211,218,0.35);}&::-webkit-scrollbar-thumb{background:rgba(203,211,218,1);border-radius:10px;}}"],ROOT_CONTAINER_CLASS_NAME,ROOT_CONTAINER_CLASS_NAME),IconsColor=We([":not(button) > svg:not([color]){color:","}"],function(a){var b=a.theme;return b.palette["icons-primary"]});\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/components/AssemblyPoint/index.js\nvar AssemblyPoint=function(a){var b=a.img,c=a.source,d=a.useCloudimage,e=a.cloudimage;if(b)throw new Error("`img` is renamed to `source` please consider renaming it from your configurations.");if(!c||"string"!=typeof c&&!(c instanceof HTMLImageElement))throw new Error("`source` property is required either a string of image url or a HTMLImageElement for the image that will be edited.");if(d){var f,g;if(null!==e&&void 0!==e&&null!==(f=e.imageSealing)&&void 0!==f&&f.enable&&!(null!==e&&void 0!==e&&null!==(g=e.imageSealing)&&void 0!==g&&g.salt))throw new Error("`salt` property of imageSealing object is required in cloudimage mode as long as `imageSealing` is enabled.")}var h=utils_deepMerge(defaultConfig,a);return react.createElement(react.StrictMode,null,react.createElement(theme_provider_context,{theme:h.theme},react.createElement(FontsFaces,null),react.createElement(IconsColor,null),react.createElement(OverrideDefaultStyles,null),react.createElement(context_AppProvider,{config:h},react.createElement(components_App,null))))};AssemblyPoint.defaultProps={useCloudimage:!1,cloudimage:{},img:void 0};/* harmony default export */ const components_AssemblyPoint = ((0,react.memo)(AssemblyPoint));\n;// CONCATENATED MODULE: ./node_modules/react-filerobot-image-editor/lib/index.js\n/* harmony default export */ const react_filerobot_image_editor_lib = (components_AssemblyPoint);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8002\n')},25986:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(38422);\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU5ODYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLDJCQUEyQixtQkFBTyxDQUFDLEtBQTRCOztBQUUvRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnQtbWlzLW1vYmlsZS1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtZmlsZXJvYm90LWltYWdlLWVkaXRvci9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanM/YjY5MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///25986\n")},42298:(module,__unused_webpack_exports,__webpack_require__)=>{eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) { var throwOnDirectAccess, ReactIs; } else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(25986)();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIyOTguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksS0FBcUMsRUFBRSxxQ0FPMUMsQ0FBQztBQUNGO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyxLQUE0QjtBQUN2RCIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnQtbWlzLW1vYmlsZS1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtZmlsZXJvYm90LWltYWdlLWVkaXRvci9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcz8wMWM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///42298\n")},38422:module=>{"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzg0MjIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudC1taXMtbW9iaWxlLWFwcC8uL25vZGVfbW9kdWxlcy9yZWFjdC1maWxlcm9ib3QtaW1hZ2UtZWRpdG9yL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcz83YzJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///38422\n")},67287:(module,__unused_webpack_exports,__webpack_require__)=>{eval('/* module decorator */ module = __webpack_require__.nmd(module);\n/** @license React v0.26.2\n * react-reconciler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nmodule.exports = function $$$reconciler($$$hostConfig) {\n    var exports = {};\n\'use strict\';var aa=__webpack_require__(27418),ba=__webpack_require__(67294),m=__webpack_require__(63840);function q(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}\nvar ca=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,da=60103,ea=60106,fa=60107,ha=60108,ia=60114,ja=60109,ka=60110,la=60112,ma=60113,na=60120,oa=60115,pa=60116,qa=60121,ra=60129,sa=60130,ta=60131;\nif("function"===typeof Symbol&&Symbol.for){var r=Symbol.for;da=r("react.element");ea=r("react.portal");fa=r("react.fragment");ha=r("react.strict_mode");ia=r("react.profiler");ja=r("react.provider");ka=r("react.context");la=r("react.forward_ref");ma=r("react.suspense");na=r("react.suspense_list");oa=r("react.memo");pa=r("react.lazy");qa=r("react.block");r("react.scope");ra=r("react.debug_trace_mode");sa=r("react.offscreen");ta=r("react.legacy_hidden")}var ua="function"===typeof Symbol&&Symbol.iterator;\nfunction va(a){if(null===a||"object"!==typeof a)return null;a=ua&&a[ua]||a["@@iterator"];return"function"===typeof a?a:null}\nfunction wa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case fa:return"Fragment";case ea:return"Portal";case ia:return"Profiler";case ha:return"StrictMode";case ma:return"Suspense";case na:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case ka:return(a.displayName||"Context")+".Consumer";case ja:return(a._context.displayName||"Context")+".Provider";case la:var b=a.render;b=b.displayName||b.name||"";\nreturn a.displayName||(""!==b?"ForwardRef("+b+")":"ForwardRef");case oa:return wa(a.type);case qa:return wa(a._render);case pa:b=a._payload;a=a._init;try{return wa(a(b))}catch(c){}}return null}function xa(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ya(a){if(xa(a)!==a)throw Error(q(188));}\nfunction za(a){var b=a.alternate;if(!b){b=xa(a);if(null===b)throw Error(q(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ya(e),a;if(f===d)return ya(e),b;f=f.sibling}throw Error(q(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(q(189));}}if(c.alternate!==d)throw Error(q(190));}if(3!==c.tag)throw Error(q(188));return c.stateNode.current===c?a:b}function Aa(a){a=za(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction Ba(a){a=za(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}function Ca(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}\nvar Da=$$$hostConfig.getPublicInstance,Ea=$$$hostConfig.getRootHostContext,Fa=$$$hostConfig.getChildHostContext,Ga=$$$hostConfig.prepareForCommit,Ha=$$$hostConfig.resetAfterCommit,Ia=$$$hostConfig.createInstance,Ja=$$$hostConfig.appendInitialChild,Ka=$$$hostConfig.finalizeInitialChildren,La=$$$hostConfig.prepareUpdate,Ma=$$$hostConfig.shouldSetTextContent,Na=$$$hostConfig.createTextInstance,Pa=$$$hostConfig.scheduleTimeout,Qa=$$$hostConfig.cancelTimeout,Ra=$$$hostConfig.noTimeout,Sa=$$$hostConfig.isPrimaryRenderer,\nTa=$$$hostConfig.supportsMutation,Ua=$$$hostConfig.supportsPersistence,Va=$$$hostConfig.supportsHydration,Wa=$$$hostConfig.getInstanceFromNode,Xa=$$$hostConfig.makeOpaqueHydratingObject,Ya=$$$hostConfig.makeClientId,Za=$$$hostConfig.beforeActiveInstanceBlur,$a=$$$hostConfig.afterActiveInstanceBlur,ab=$$$hostConfig.preparePortalMount,bb=$$$hostConfig.supportsTestSelectors,cb=$$$hostConfig.findFiberRoot,db=$$$hostConfig.getBoundingRect,eb=$$$hostConfig.getTextContent,fb=$$$hostConfig.isHiddenSubtree,\ngb=$$$hostConfig.matchAccessibilityRole,hb=$$$hostConfig.setFocusIfFocusable,ib=$$$hostConfig.setupIntersectionObserver,jb=$$$hostConfig.appendChild,kb=$$$hostConfig.appendChildToContainer,lb=$$$hostConfig.commitTextUpdate,mb=$$$hostConfig.commitMount,nb=$$$hostConfig.commitUpdate,ob=$$$hostConfig.insertBefore,pb=$$$hostConfig.insertInContainerBefore,qb=$$$hostConfig.removeChild,rb=$$$hostConfig.removeChildFromContainer,sb=$$$hostConfig.resetTextContent,tb=$$$hostConfig.hideInstance,ub=$$$hostConfig.hideTextInstance,\nvb=$$$hostConfig.unhideInstance,wb=$$$hostConfig.unhideTextInstance,xb=$$$hostConfig.clearContainer,yb=$$$hostConfig.cloneInstance,zb=$$$hostConfig.createContainerChildSet,Ab=$$$hostConfig.appendChildToContainerChildSet,Bb=$$$hostConfig.finalizeContainerChildren,Cb=$$$hostConfig.replaceContainerChildren,Db=$$$hostConfig.cloneHiddenInstance,Eb=$$$hostConfig.cloneHiddenTextInstance,Fb=$$$hostConfig.canHydrateInstance,Gb=$$$hostConfig.canHydrateTextInstance,Hb=$$$hostConfig.isSuspenseInstancePending,\nIb=$$$hostConfig.isSuspenseInstanceFallback,Jb=$$$hostConfig.getNextHydratableSibling,Kb=$$$hostConfig.getFirstHydratableChild,Lb=$$$hostConfig.hydrateInstance,Mb=$$$hostConfig.hydrateTextInstance,Nb=$$$hostConfig.getNextHydratableInstanceAfterSuspenseInstance,Ob=$$$hostConfig.commitHydratedContainer,Pb=$$$hostConfig.commitHydratedSuspenseInstance,Qb;function Rb(a){if(void 0===Qb)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Qb=b&&b[1]||""}return"\\n"+Qb+a}var Sb=!1;\nfunction Tb(a,b){if(!a||Sb)return"";Sb=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&"string"===typeof k.stack){for(var e=k.stack.split("\\n"),\nf=d.stack.split("\\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return"\\n"+e[g].replace(" at new "," at ");while(1<=g&&0<=h)}break}}}finally{Sb=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Rb(a):""}var Ub=[],Vb=-1;function Wb(a){return{current:a}}function z(a){0>Vb||(a.current=Ub[Vb],Ub[Vb]=null,Vb--)}function A(a,b){Vb++;Ub[Vb]=a.current;a.current=b}\nvar Xb={},B=Wb(Xb),D=Wb(!1),Yb=Xb;function Zb(a,b){var c=a.type.contextTypes;if(!c)return Xb;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function E(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $b(){z(D);z(B)}\nfunction ac(a,b,c){if(B.current!==Xb)throw Error(q(168));A(B,b);A(D,c)}function bc(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(q(108,wa(b)||"Unknown",e));return aa({},c,d)}function cc(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Xb;Yb=B.current;A(B,a);A(D,D.current);return!0}\nfunction dc(a,b,c){var d=a.stateNode;if(!d)throw Error(q(169));c?(a=bc(a,b,Yb),d.__reactInternalMemoizedMergedChildContext=a,z(D),z(B),A(B,a)):z(D);A(D,c)}var ec=null,fc=null,gc=m.unstable_now;gc();var hc=0,F=8;\nfunction ic(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function jc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function kc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(q(358,a));}}\nfunction lc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=ic(k),e=F):(h&=f,0!==h&&(d=ic(h),e=F))}else f=c&~g,0!==f?(d=ic(f),e=F):0!==h&&(d=ic(h),e=F);if(0===d)return 0;d=31-mc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){ic(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-mc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction nc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function oc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=pc(24&~b),0===a?oc(10,b):a;case 10:return a=pc(192&~b),0===a?oc(8,b):a;case 8:return a=pc(3584&~b),0===a&&(a=pc(4186112&~b),0===a&&(a=512)),a;case 2:return b=pc(805306368&~b),0===b&&(b=268435456),b}throw Error(q(358,a));}function pc(a){return a&-a}function qc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction rc(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-mc(b);a[b]=c}var mc=Math.clz32?Math.clz32:sc,tc=Math.log,uc=Math.LN2;function sc(a){return 0===a?32:31-(tc(a)/uc|0)|0}\nvar vc=m.unstable_runWithPriority,wc=m.unstable_scheduleCallback,xc=m.unstable_cancelCallback,yc=m.unstable_shouldYield,zc=m.unstable_requestPaint,Ac=m.unstable_now,Bc=m.unstable_getCurrentPriorityLevel,Cc=m.unstable_ImmediatePriority,Dc=m.unstable_UserBlockingPriority,Ec=m.unstable_NormalPriority,Fc=m.unstable_LowPriority,Gc=m.unstable_IdlePriority,Hc={},Ic=void 0!==zc?zc:function(){},Jc=null,Kc=null,Lc=!1,Mc=Ac(),G=1E4>Mc?Ac:function(){return Ac()-Mc};\nfunction Nc(){switch(Bc()){case Cc:return 99;case Dc:return 98;case Ec:return 97;case Fc:return 96;case Gc:return 95;default:throw Error(q(332));}}function Oc(a){switch(a){case 99:return Cc;case 98:return Dc;case 97:return Ec;case 96:return Fc;case 95:return Gc;default:throw Error(q(332));}}function Pc(a,b){a=Oc(a);return vc(a,b)}function Qc(a,b,c){a=Oc(a);return wc(a,b,c)}function H(){if(null!==Kc){var a=Kc;Kc=null;xc(a)}Rc()}\nfunction Rc(){if(!Lc&&null!==Jc){Lc=!0;var a=0;try{var b=Jc;Pc(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Jc=null}catch(c){throw null!==Jc&&(Jc=Jc.slice(a+1)),wc(Cc,H),c;}finally{Lc=!1}}}var Sc=ca.ReactCurrentBatchConfig;function Tc(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var I="function"===typeof Object.is?Object.is:Tc,Uc=Object.prototype.hasOwnProperty;\nfunction Vc(a,b){if(I(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Uc.call(b,c[d])||!I(a[c[d]],b[c[d]]))return!1;return!0}\nfunction Wc(a){switch(a.tag){case 5:return Rb(a.type);case 16:return Rb("Lazy");case 13:return Rb("Suspense");case 19:return Rb("SuspenseList");case 0:case 2:case 15:return a=Tb(a.type,!1),a;case 11:return a=Tb(a.type.render,!1),a;case 22:return a=Tb(a.type._render,!1),a;case 1:return a=Tb(a.type,!0),a;default:return""}}function Xc(a,b){if(a&&a.defaultProps){b=aa({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Yc=Wb(null),Zc=null,$c=null,ad=null;\nfunction bd(){ad=$c=Zc=null}function cd(a,b){a=a.type._context;Sa?(A(Yc,a._currentValue),a._currentValue=b):(A(Yc,a._currentValue2),a._currentValue2=b)}function dd(a){var b=Yc.current;z(Yc);a=a.type._context;Sa?a._currentValue=b:a._currentValue2=b}function ed(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}\nfunction fd(a,b){Zc=a;ad=$c=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(gd=!0),a.firstContext=null)}function J(a,b){if(ad!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)ad=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===$c){if(null===Zc)throw Error(q(308));$c=b;Zc.dependencies={lanes:0,firstContext:b,responders:null}}else $c=$c.next=b}return Sa?a._currentValue:a._currentValue2}var hd=!1;\nfunction id(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function jd(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function kd(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction md(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction nd(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction od(a,b,c,d){var e=a.updateQueue;hd=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var t=n.lastBaseUpdate;t!==g&&(null===t?n.firstBaseUpdate=l:t.next=l,n.lastBaseUpdate=k)}}if(null!==f){t=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var y=a,x=f;h=b;p=c;switch(x.tag){case 1:y=x.payload;if("function"===typeof y){t=y.call(p,t,h);break a}t=y;break a;case 3:y.flags=y.flags&-4097|64;case 0:y=x.payload;h="function"===typeof y?y.call(p,t,h):y;if(null===h||void 0===h)break a;t=aa({},t,h);break a;case 2:hd=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=t):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=t);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;pd|=g;a.lanes=g;a.memoizedState=t}}function qd(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(q(191,e));e.call(d)}}}var rd=(new ba.Component).refs;\nfunction sd(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:aa({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar vd={isMounted:function(a){return(a=a._reactInternals)?xa(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=K(),e=td(a),f=kd(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);md(a,f);ud(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=K(),e=td(a),f=kd(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);md(a,f);ud(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=K(),d=td(a),e=kd(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);md(a,e);ud(a,d,c)}};function wd(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Vc(c,d)||!Vc(e,f):!0}\nfunction xd(a,b,c){var d=!1,e=Xb;var f=b.contextType;"object"===typeof f&&null!==f?f=J(f):(e=E(b)?Yb:B.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Zb(a,e):Xb);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=vd;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction yd(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&vd.enqueueReplaceState(b,b.state,null)}\nfunction zd(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=rd;id(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=J(f):(f=E(b)?Yb:B.current,e.context=Zb(a,f));od(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(sd(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||\n(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&vd.enqueueReplaceState(e,e.state,null),od(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4)}var Ad=Array.isArray;\nfunction Bd(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(q(309));var d=c.stateNode}if(!d)throw Error(q(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===rd&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(q(284));if(!c._owner)throw Error(q(290,a));}return a}\nfunction Cd(a,b){if("textarea"!==a.type)throw Error(q(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b));}\nfunction Dd(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Ed(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Fd(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Bd(a,b,c),d.return=a,d;d=Gd(c.type,c.key,c.props,null,a.mode,d);d.ref=Bd(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nHd(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Id(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function t(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Fd(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case da:return c=Gd(b.type,b.key,b.props,null,a.mode,c),c.ref=Bd(a,null,b),c.return=a,c;case ea:return b=Hd(b,a.mode,c),b.return=a,b}if(Ad(b)||va(b))return b=Id(b,\na.mode,c,null),b.return=a,b;Cd(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case da:return c.key===e?c.type===fa?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ea:return c.key===e?l(a,b,c,d):null}if(Ad(c)||va(c))return null!==e?null:n(a,b,c,d,null);Cd(a,c)}return null}function y(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||\nnull,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case da:return a=a.get(null===d.key?c:d.key)||null,d.type===fa?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ea:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Ad(d)||va(d))return a=a.get(c)||null,n(b,a,d,e,null);Cd(b,d)}return null}function x(e,g,h,k){for(var l=null,v=null,u=g,C=g=0,n=null;null!==u&&C<h.length;C++){u.index>C?(n=u,u=null):n=u.sibling;var w=p(e,u,h[C],k);if(null===w){null===u&&(u=n);break}a&&u&&null===\nw.alternate&&b(e,u);g=f(w,g,C);null===v?l=w:v.sibling=w;v=w;u=n}if(C===h.length)return c(e,u),l;if(null===u){for(;C<h.length;C++)u=t(e,h[C],k),null!==u&&(g=f(u,g,C),null===v?l=u:v.sibling=u,v=u);return l}for(u=d(e,u);C<h.length;C++)n=y(u,e,C,h[C],k),null!==n&&(a&&null!==n.alternate&&u.delete(null===n.key?C:n.key),g=f(n,g,C),null===v?l=n:v.sibling=n,v=n);a&&u.forEach(function(a){return b(e,a)});return l}function Y(e,g,h,k){var l=va(h);if("function"!==typeof l)throw Error(q(150));h=l.call(h);if(null==\nh)throw Error(q(151));for(var u=l=null,v=g,n=g=0,C=null,w=h.next();null!==v&&!w.done;n++,w=h.next()){v.index>n?(C=v,v=null):C=v.sibling;var x=p(e,v,w.value,k);if(null===x){null===v&&(v=C);break}a&&v&&null===x.alternate&&b(e,v);g=f(x,g,n);null===u?l=x:u.sibling=x;u=x;v=C}if(w.done)return c(e,v),l;if(null===v){for(;!w.done;n++,w=h.next())w=t(e,w.value,k),null!==w&&(g=f(w,g,n),null===u?l=w:u.sibling=w,u=w);return l}for(v=d(e,v);!w.done;n++,w=h.next())w=y(v,e,n,w.value,k),null!==w&&(a&&null!==w.alternate&&\nv.delete(null===w.key?n:w.key),g=f(w,g,n),null===u?l=w:u.sibling=w,u=w);a&&v.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===fa&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case da:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===fa){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Bd(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===fa?(d=Id(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Gd(f.type,f.key,f.props,null,a.mode,h),h.ref=Bd(a,d,f),h.return=a,a=h)}return g(a);case ea:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nHd(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Fd(f,a.mode,h),d.return=a,a=d),g(a);if(Ad(f))return x(a,d,f,h);if(va(f))return Y(a,d,f,h);l&&Cd(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(q(152,wa(a.type)||"Component"));}return c(a,d)}}var Jd=Dd(!0),Kd=Dd(!1),Ld={},L=Wb(Ld),Md=Wb(Ld),Nd=Wb(Ld);\nfunction Od(a){if(a===Ld)throw Error(q(174));return a}function Pd(a,b){A(Nd,b);A(Md,a);A(L,Ld);a=Ea(b);z(L);A(L,a)}function Qd(){z(L);z(Md);z(Nd)}function Rd(a){var b=Od(Nd.current),c=Od(L.current);b=Fa(c,a.type,b);c!==b&&(A(Md,a),A(L,b))}function Sd(a){Md.current===a&&(z(L),z(Md))}var M=Wb(0);\nfunction Td(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||Hb(c)||Ib(c)))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Ud=null,Vd=null,Wd=!1;\nfunction Xd(a,b){var c=Yd(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Zd(a,b){switch(a.tag){case 5:return b=Fb(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=Gb(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction $d(a){if(Wd){var b=Vd;if(b){var c=b;if(!Zd(a,b)){b=Jb(c);if(!b||!Zd(a,b)){a.flags=a.flags&-1025|2;Wd=!1;Ud=a;return}Xd(Ud,c)}Ud=a;Vd=Kb(b)}else a.flags=a.flags&-1025|2,Wd=!1,Ud=a}}function ae(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Ud=a}\nfunction be(a){if(!Va||a!==Ud)return!1;if(!Wd)return ae(a),Wd=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!Ma(b,a.memoizedProps))for(b=Vd;b;)Xd(a,b),b=Jb(b);ae(a);if(13===a.tag){if(!Va)throw Error(q(316));a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(q(317));Vd=Nb(a)}else Vd=Ud?Jb(a.stateNode):null;return!0}function ce(){Va&&(Vd=Ud=null,Wd=!1)}var de=[];\nfunction ee(){for(var a=0;a<de.length;a++){var b=de[a];Sa?b._workInProgressVersionPrimary=null:b._workInProgressVersionSecondary=null}de.length=0}var fe=ca.ReactCurrentDispatcher,ge=ca.ReactCurrentBatchConfig,he=0,N=null,O=null,P=null,ie=!1,je=!1;function Q(){throw Error(q(321));}function ke(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!I(a[c],b[c]))return!1;return!0}\nfunction le(a,b,c,d,e,f){he=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;fe.current=null===a||null===a.memoizedState?me:ne;a=c(d,e);if(je){f=0;do{je=!1;if(!(25>f))throw Error(q(301));f+=1;P=O=null;b.updateQueue=null;fe.current=oe;a=c(d,e)}while(je)}fe.current=pe;b=null!==O&&null!==O.next;he=0;P=O=N=null;ie=!1;if(b)throw Error(q(300));return a}function qe(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}\nfunction re(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(q(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}function se(a,b){return"function"===typeof b?b(a):b}\nfunction te(a){var b=re(),c=b.queue;if(null===c)throw Error(q(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((he&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;N.lanes|=l;pd|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;I(d,b.memoizedState)||(gd=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction ue(a){var b=re(),c=b.queue;if(null===c)throw Error(q(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);I(f,b.memoizedState)||(gd=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction ve(a,b,c){var d=b._getVersion;d=d(b._source);var e=Sa?b._workInProgressVersionPrimary:b._workInProgressVersionSecondary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(he&a)===a)Sa?b._workInProgressVersionPrimary=d:b._workInProgressVersionSecondary=d,de.push(b);if(a)return c(b._source);de.push(b);throw Error(q(350));}\nfunction we(a,b,c,d){var e=R;if(null===e)throw Error(q(349));var f=b._getVersion,g=f(b._source),h=fe.current,k=h.useState(function(){return ve(e,b,c)}),l=k[1],n=k[0];k=P;var t=a.memoizedState,p=t.refs,y=p.getSnapshot,x=t.source;t=t.subscribe;var Y=N;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!I(g,a)){a=c(b._source);I(n,a)||(l(a),a=td(Y),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-mc(h),t=1<<k;d[k]|=a;h&=~t}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=td(Y);e.mutableReadLanes|=d&e.pendingLanes}catch(Oa){c(function(){throw Oa;})}})},[b,d]);I(y,c)&&I(x,b)&&I(t,d)||(a={pending:null,dispatch:null,lastRenderedReducer:se,lastRenderedState:n},a.dispatch=l=xe.bind(null,N,a),k.queue=a,k.baseQueue=null,n=ve(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction ye(a,b,c){var d=re();return we(d,a,b,c)}function ze(a){var b=qe();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:se,lastRenderedState:a};a=a.dispatch=xe.bind(null,N,a);return[b.memoizedState,a]}\nfunction Ae(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Be(a){var b=qe();a={current:a};return b.memoizedState=a}function Ce(){return re().memoizedState}function De(a,b,c,d){var e=qe();N.flags|=a;e.memoizedState=Ae(1|b,c,void 0,void 0===d?null:d)}\nfunction Ee(a,b,c,d){var e=re();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&ke(d,g.deps)){Ae(b,c,f,d);return}}N.flags|=a;e.memoizedState=Ae(1|b,c,f,d)}function Fe(a,b){return De(516,4,a,b)}function Ge(a,b){return Ee(516,4,a,b)}function He(a,b){return Ee(4,2,a,b)}function Ie(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction Je(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ee(4,2,Ie.bind(null,b,a),c)}function Ke(){}function Le(a,b){var c=re();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&ke(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function Me(a,b){var c=re();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&ke(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction Ne(a,b){var c=Nc();Pc(98>c?98:c,function(){a(!0)});Pc(97<c?97:c,function(){var c=ge.transition;ge.transition=1;try{a(!1),b()}finally{ge.transition=c}})}\nfunction xe(a,b,c){var d=K(),e=td(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===N||null!==g&&g===N)je=ie=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(I(k,h))return}catch(l){}finally{}ud(a,e,d)}}\nvar pe={readContext:J,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useOpaqueIdentifier:Q,unstable_isNewReconciler:!1},me={readContext:J,useCallback:function(a,b){qe().memoizedState=[a,void 0===b?null:b];return a},useContext:J,useEffect:Fe,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return De(4,2,Ie.bind(null,b,a),c)},useLayoutEffect:function(a,\nb){return De(4,2,a,b)},useMemo:function(a,b){var c=qe();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=qe();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=xe.bind(null,N,a);return[d.memoizedState,a]},useRef:Be,useState:ze,useDebugValue:Ke,useDeferredValue:function(a){var b=ze(a),c=b[0],d=b[1];Fe(function(){var b=ge.transition;ge.transition=1;try{d(a)}finally{ge.transition=\nb}},[a]);return c},useTransition:function(){var a=ze(!1),b=a[0];a=Ne.bind(null,a[1]);Be(a);return[a,b]},useMutableSource:function(a,b,c){var d=qe();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return we(d,a,b,c)},useOpaqueIdentifier:function(){if(Wd){var a=!1,b=Xa(function(){a||(a=!0,c(Ya()));throw Error(q(355));}),c=ze(b)[1];0===(N.mode&2)&&(N.flags|=516,Ae(5,function(){c(Ya())},void 0,null));return b}b=Ya();ze(b);return b},unstable_isNewReconciler:!1},ne={readContext:J,\nuseCallback:Le,useContext:J,useEffect:Ge,useImperativeHandle:Je,useLayoutEffect:He,useMemo:Me,useReducer:te,useRef:Ce,useState:function(){return te(se)},useDebugValue:Ke,useDeferredValue:function(a){var b=te(se),c=b[0],d=b[1];Ge(function(){var b=ge.transition;ge.transition=1;try{d(a)}finally{ge.transition=b}},[a]);return c},useTransition:function(){var a=te(se)[0];return[Ce().current,a]},useMutableSource:ye,useOpaqueIdentifier:function(){return te(se)[0]},unstable_isNewReconciler:!1},oe={readContext:J,\nuseCallback:Le,useContext:J,useEffect:Ge,useImperativeHandle:Je,useLayoutEffect:He,useMemo:Me,useReducer:ue,useRef:Ce,useState:function(){return ue(se)},useDebugValue:Ke,useDeferredValue:function(a){var b=ue(se),c=b[0],d=b[1];Ge(function(){var b=ge.transition;ge.transition=1;try{d(a)}finally{ge.transition=b}},[a]);return c},useTransition:function(){var a=ue(se)[0];return[Ce().current,a]},useMutableSource:ye,useOpaqueIdentifier:function(){return ue(se)[0]},unstable_isNewReconciler:!1},Oe=ca.ReactCurrentOwner,\ngd=!1;function S(a,b,c,d){b.child=null===a?Kd(b,null,c,d):Jd(b,a.child,c,d)}function Pe(a,b,c,d,e){c=c.render;var f=b.ref;fd(b,e);d=le(a,b,c,d,f,e);if(null!==a&&!gd)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,Re(a,b,e);b.flags|=1;S(a,b,d,e);return b.child}\nfunction Se(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!Te(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Ue(a,b,g,d,e,f);a=Gd(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Vc,c(e,d)&&a.ref===b.ref))return Re(a,b,f);b.flags|=1;a=Ed(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction Ue(a,b,c,d,e,f){if(null!==a&&Vc(a.memoizedProps,d)&&a.ref===b.ref)if(gd=!1,0!==(f&e))0!==(a.flags&16384)&&(gd=!0);else return b.lanes=a.lanes,Re(a,b,f);return Ve(a,b,c,d,f)}\nfunction We(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode||"unstable-defer-without-hiding"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},Xe(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},Xe(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},Xe(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,Xe(b,d);S(a,b,e,c);return b.child}\nfunction Ye(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function Ve(a,b,c,d,e){var f=E(c)?Yb:B.current;f=Zb(b,f);fd(b,e);c=le(a,b,c,d,f,e);if(null!==a&&!gd)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,Re(a,b,e);b.flags|=1;S(a,b,c,e);return b.child}\nfunction Ze(a,b,c,d,e){if(E(c)){var f=!0;cc(b)}else f=!1;fd(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),xd(b,c,d),zd(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=J(l):(l=E(c)?Yb:B.current,l=Zb(b,l));var n=c.getDerivedStateFromProps,t="function"===typeof n||"function"===typeof g.getSnapshotBeforeUpdate;t||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==\ntypeof g.componentWillReceiveProps||(h!==d||k!==l)&&yd(b,g,d,l);hd=!1;var p=b.memoizedState;g.state=p;od(b,d,g,e);k=b.memoizedState;h!==d||p!==k||D.current||hd?("function"===typeof n&&(sd(b,c,n,d),k=b.memoizedState),(h=hd||wd(b,c,h,d,p,k,l))?(t||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&\n(b.flags|=4)):("function"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;jd(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Xc(b.type,h);g.props=l;t=b.pendingProps;p=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=J(k):(k=E(c)?Yb:B.current,k=Zb(b,k));var y=c.getDerivedStateFromProps;(n="function"===typeof y||"function"===typeof g.getSnapshotBeforeUpdate)||\n"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==t||p!==k)&&yd(b,g,d,k);hd=!1;p=b.memoizedState;g.state=p;od(b,d,g,e);var x=b.memoizedState;h!==t||p!==x||D.current||hd?("function"===typeof y&&(sd(b,c,y,d),x=b.memoizedState),(l=hd||wd(b,c,l,d,p,x,k))?(n||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,x,k),"function"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,x,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||\n(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return $e(a,b,c,d,f,e)}function $e(a,b,c,d,e,f){Ye(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&dc(b,c,!1),Re(a,b,f);d=b.stateNode;Oe.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Jd(b,a.child,null,f),b.child=Jd(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&dc(b,c,!0);return b.child}\nfunction af(a){var b=a.stateNode;b.pendingContext?ac(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ac(a,b.context,!1);Pd(a,b.containerInfo)}var bf={dehydrated:null,retryLane:0};\nfunction cf(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);A(M,e&1);if(null===a){void 0!==d.fallback&&$d(b);a=d.children;e=d.fallback;if(f)return a=df(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=bf,a;if("number"===typeof d.unstable_expectedLoadTime)return a=df(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=bf,b.lanes=33554432,a;c=ef({mode:"visible",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=ff(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=bf,d;c=gf(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=ff(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=bf,d;c=gf(a,b,d.children,c);b.memoizedState=null;return c}function df(a,b,c,d){var e=a.mode,f=a.child;b={mode:"hidden",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=ef(b,e,0,null);c=Id(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction gf(a,b,c,d){var e=a.child;a=e.sibling;c=Ed(e,{mode:"visible",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction ff(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:"hidden",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Ed(g,h);null!==a?d=Ed(a,d):(d=Id(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function hf(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);ed(a.return,b)}\nfunction jf(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction kf(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;S(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&hf(a,c);else if(19===a.tag)hf(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}A(M,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Td(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);jf(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Td(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}jf(b,!0,c,null,f,b.lastEffect);break;case "together":jf(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction Re(a,b,c){null!==a&&(b.dependencies=a.dependencies);pd|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(q(153));if(null!==b.child){a=b.child;c=Ed(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Ed(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}function lf(a){a.flags|=4}var mf,nf,of,pf;\nif(Ta)mf=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)Ja(a,c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}},nf=function(){},of=function(a,b,c,d,e){a=a.memoizedProps;if(a!==d){var f=b.stateNode,g=Od(L.current);c=La(f,c,a,d,e,g);(b.updateQueue=c)&&lf(b)}},pf=function(a,b,c,d){c!==d&&lf(b)};else if(Ua){mf=function(a,\nb,c,d){for(var e=b.child;null!==e;){if(5===e.tag){var f=e.stateNode;c&&d&&(f=Db(f,e.type,e.memoizedProps,e));Ja(a,f)}else if(6===e.tag)f=e.stateNode,c&&d&&(f=Eb(f,e.memoizedProps,e)),Ja(a,f);else if(4!==e.tag){if(13===e.tag&&0!==(e.flags&4)&&(f=null!==e.memoizedState)){var g=e.child;if(null!==g&&(null!==g.child&&(g.child.return=g,mf(a,g,!0,f)),f=g.sibling,null!==f)){f.return=e;e=f;continue}}if(null!==e.child){e.child.return=e;e=e.child;continue}}if(e===b)break;for(;null===e.sibling;){if(null===e.return||\ne.return===b)return;e=e.return}e.sibling.return=e.return;e=e.sibling}};var qf=function(a,b,c,d){for(var e=b.child;null!==e;){if(5===e.tag){var f=e.stateNode;c&&d&&(f=Db(f,e.type,e.memoizedProps,e));Ab(a,f)}else if(6===e.tag)f=e.stateNode,c&&d&&(f=Eb(f,e.memoizedProps,e)),Ab(a,f);else if(4!==e.tag){if(13===e.tag&&0!==(e.flags&4)&&(f=null!==e.memoizedState)){var g=e.child;if(null!==g&&(null!==g.child&&(g.child.return=g,qf(a,g,!0,f)),f=g.sibling,null!==f)){f.return=e;e=f;continue}}if(null!==e.child){e.child.return=\ne;e=e.child;continue}}if(e===b)break;for(;null===e.sibling;){if(null===e.return||e.return===b)return;e=e.return}e.sibling.return=e.return;e=e.sibling}};nf=function(a){var b=a.stateNode;if(null!==a.firstEffect){var c=b.containerInfo,d=zb(c);qf(d,a,!1,!1);b.pendingChildren=d;lf(a);Bb(c,d)}};of=function(a,b,c,d,e){var f=a.stateNode,g=a.memoizedProps;if((a=null===b.firstEffect)&&g===d)b.stateNode=f;else{var h=b.stateNode,k=Od(L.current),l=null;g!==d&&(l=La(h,c,g,d,e,k));a&&null===l?b.stateNode=f:(f=yb(f,\nl,c,g,d,b,a,h),Ka(f,c,d,e,k)&&lf(b),b.stateNode=f,a?lf(b):mf(f,b,!1,!1))}};pf=function(a,b,c,d){c!==d?(a=Od(Nd.current),c=Od(L.current),b.stateNode=Na(d,a,c,b),lf(b)):b.stateNode=a.stateNode}}else nf=function(){},of=function(){},pf=function(){};\nfunction rf(a,b){if(!Wd)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction sf(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return E(b.type)&&$b(),null;case 3:Qd();z(D);z(B);ee();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)be(b)?lf(b):d.hydrate||(b.flags|=256);nf(b);return null;case 5:Sd(b);var e=Od(Nd.current);c=b.type;if(null!==a&&null!=b.stateNode)of(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(q(166));return null}a=Od(L.current);if(be(b)){if(!Va)throw Error(q(175));a=Lb(b.stateNode,b.type,b.memoizedProps,e,a,b);b.updateQueue=a;null!==a&&lf(b)}else{var f=Ia(c,d,e,a,b);mf(f,b,!1,!1);b.stateNode=f;Ka(f,c,d,e,a)&&lf(b)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)pf(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(q(166));a=Od(Nd.current);e=Od(L.current);if(be(b)){if(!Va)throw Error(q(176));Mb(b.stateNode,\nb.memoizedProps,b)&&lf(b)}else b.stateNode=Na(d,a,e,b)}return null;case 13:z(M);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;e=!1;null===a?void 0!==b.memoizedProps.fallback&&be(b):e=null!==a.memoizedState;if(d&&!e&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))0===T&&(T=3);else{if(0===T||3===T)T=4;null===R||0===(pd&134217727)&&0===(tf&134217727)||uf(R,U)}Ua&&d&&(b.flags|=4);Ta&&(d||e)&&(b.flags|=4);return null;case 4:return Qd(),\nnf(b),null===a&&ab(b.stateNode.containerInfo),null;case 10:return dd(b),null;case 17:return E(b.type)&&$b(),null;case 19:z(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.flags&64);f=d.rendering;if(null===f)if(e)rf(d,!1);else{if(0!==T||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){f=Td(a);if(null!==f){b.flags|=64;rf(d,!1);a=f.updateQueue;null!==a&&(b.updateQueue=a,b.flags|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;a=c;for(d=b.child;null!==d;)e=d,c=a,e.flags&=\n2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,f=e.alternate,null===f?(e.childLanes=0,e.lanes=c,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.stateNode=null):(e.childLanes=f.childLanes,e.lanes=f.lanes,e.child=f.child,e.memoizedProps=f.memoizedProps,e.memoizedState=f.memoizedState,e.updateQueue=f.updateQueue,e.type=f.type,c=f.dependencies,e.dependencies=null===c?null:{lanes:c.lanes,firstContext:c.firstContext}),d=d.sibling;A(M,M.current&1|\n2);return b.child}a=a.sibling}null!==d.tail&&G()>vf&&(b.flags|=64,e=!0,rf(d,!1),b.lanes=33554432)}else{if(!e)if(a=Td(f),null!==a){if(b.flags|=64,e=!0,a=a.updateQueue,null!==a&&(b.updateQueue=a,b.flags|=4),rf(d,!0),null===d.tail&&"hidden"===d.tailMode&&!f.alternate&&!Wd)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*G()-d.renderingStartTime>vf&&1073741824!==c&&(b.flags|=64,e=!0,rf(d,!1),b.lanes=33554432);d.isBackwards?(f.sibling=b.child,b.child=f):(a=d.last,null!==a?a.sibling=\nf:b.child=f,d.last=f)}return null!==d.tail?(a=d.tail,d.rendering=a,d.tail=a.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=G(),a.sibling=null,b=M.current,A(M,e?b&1|2:b&1),a):null;case 23:case 24:return wf(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&"unstable-defer-without-hiding"!==d.mode&&(b.flags|=4),null}throw Error(q(156,b.tag));}\nfunction xf(a){switch(a.tag){case 1:E(a.type)&&$b();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:Qd();z(D);z(B);ee();b=a.flags;if(0!==(b&64))throw Error(q(285));a.flags=b&-4097|64;return a;case 5:return Sd(a),null;case 13:return z(M),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return z(M),null;case 4:return Qd(),null;case 10:return dd(a),null;case 23:case 24:return wf(),null;default:return null}}\nfunction yf(a,b){try{var c="",d=b;do c+=Wc(d),d=d.return;while(d);var e=c}catch(f){e="\\nError generating stack: "+f.message+"\\n"+f.stack}return{value:a,source:b,stack:e}}function zf(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Af="function"===typeof WeakMap?WeakMap:Map;function Bf(a,b,c){c=kd(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Cf||(Cf=!0,Df=d);zf(a,b)};return c}\nfunction Ef(a,b,c){c=kd(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){zf(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===Ff?Ff=new Set([this]):Ff.add(this),zf(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}var Gf="function"===typeof WeakSet?WeakSet:Set;\nfunction Hf(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){If(a,c)}else b.current=null}\nfunction Jf(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:Xc(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:Ta&&b.flags&256&&xb(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(q(163));}\nfunction Kf(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}\nfunction Lf(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Mf(c,a),Nf(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:Xc(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&qd(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=Da(c.child.stateNode);break;case 1:a=c.child.stateNode}qd(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mb(a,c.type,c.memoizedProps,c);return;case 6:return;case 4:return;case 12:return;case 13:Va&&null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&\nPb(c))));return;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(q(163));}\nfunction Of(a,b){if(Ta)for(var c=a;;){if(5===c.tag){var d=c.stateNode;b?tb(d):vb(c.stateNode,c.memoizedProps)}else if(6===c.tag)d=c.stateNode,b?ub(d):wb(d,c.memoizedProps);else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction Pf(a,b){if(fc&&"function"===typeof fc.onCommitFiberUnmount)try{fc.onCommitFiberUnmount(ec,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Mf(b,c);else{d=b;try{e()}catch(f){If(d,f)}}c=c.next}while(c!==a)}break;case 1:Hf(b);a=b.stateNode;if("function"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){If(b,\nf)}break;case 5:Hf(b);break;case 4:Ta?Qf(a,b):Ua&&Ua&&(b=b.stateNode.containerInfo,a=zb(b),Cb(b,a))}}function Rf(a,b){for(var c=b;;)if(Pf(a,c),null===c.child||Ta&&4===c.tag){if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}else c.child.return=c,c=c.child}\nfunction Sf(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function Tf(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uf(a){if(Ta){a:{for(var b=a.return;null!==b;){if(Tf(b))break a;b=b.return}throw Error(q(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(q(161));}c.flags&16&&(sb(b),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Tf(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?Vf(a,c,b):Wf(a,c,b)}}function Vf(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?pb(c,a,b):kb(c,a);else if(4!==d&&(a=a.child,null!==a))for(Vf(a,b,c),a=a.sibling;null!==a;)Vf(a,b,c),a=a.sibling}\nfunction Wf(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?ob(c,a,b):jb(c,a);else if(4!==d&&(a=a.child,null!==a))for(Wf(a,b,c),a=a.sibling;null!==a;)Wf(a,b,c),a=a.sibling}\nfunction Qf(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(q(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag)Rf(a,c),f?rb(e,c.stateNode):qb(e,c.stateNode);else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(Pf(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;\nfor(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction Xf(a,b){if(Ta){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Kf(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&nb(c,f,e,a,d,b)}return;case 6:if(null===b.stateNode)throw Error(q(162));c=b.memoizedProps;lb(b.stateNode,null!==a?a.memoizedProps:c,c);return;case 3:Va&&(b=b.stateNode,b.hydrate&&(b.hydrate=!1,Ob(b.containerInfo)));return;case 12:return;case 13:Yf(b);\nZf(b);return;case 19:Zf(b);return;case 17:return;case 23:case 24:Of(b,null!==b.memoizedState);return}throw Error(q(163));}switch(b.tag){case 0:case 11:case 14:case 15:case 22:Kf(3,b);return;case 12:return;case 13:Yf(b);Zf(b);return;case 19:Zf(b);return;case 3:Va&&(c=b.stateNode,c.hydrate&&(c.hydrate=!1,Ob(c.containerInfo)));break;case 23:case 24:return}a:if(Ua){switch(b.tag){case 1:case 5:case 6:case 20:break a;case 3:case 4:b=b.stateNode;Cb(b.containerInfo,b.pendingChildren);break a}throw Error(q(163));\n}}function Yf(a){null!==a.memoizedState&&($f=G(),Ta&&Of(a.child,!0))}function Zf(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Gf);b.forEach(function(b){var d=ag.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}function bg(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var cg=0,dg=1,eg=2,fg=3,gg=4;\nif("function"===typeof Symbol&&Symbol.for){var hg=Symbol.for;cg=hg("selector.component");dg=hg("selector.has_pseudo_class");eg=hg("selector.role");fg=hg("selector.test_id");gg=hg("selector.text")}function ig(a){var b=Wa(a);if(null!=b){if("string"!==typeof b.memoizedProps["data-testname"])throw Error(q(364));return b}a=cb(a);if(null===a)throw Error(q(362));return a.stateNode.current}\nfunction jg(a,b){switch(b.$$typeof){case cg:if(a.type===b.value)return!0;break;case dg:a:{b=b.value;a=[a,0];for(var c=0;c<a.length;){var d=a[c++],e=a[c++],f=b[e];if(5!==d.tag||!fb(d)){for(;null!=f&&jg(d,f);)e++,f=b[e];if(e===b.length){b=!0;break a}else for(d=d.child;null!==d;)a.push(d,e),d=d.sibling}}b=!1}return b;case eg:if(5===a.tag&&gb(a.stateNode,b.value))return!0;break;case gg:if(5===a.tag||6===a.tag)if(a=eb(a),null!==a&&0<=a.indexOf(b.value))return!0;break;case fg:if(5===a.tag&&(a=a.memoizedProps["data-testname"],\n"string"===typeof a&&a.toLowerCase()===b.value.toLowerCase()))return!0;break;default:throw Error(q(365,b));}return!1}function kg(a){switch(a.$$typeof){case cg:return"<"+(wa(a.value)||"Unknown")+">";case dg:return":has("+(kg(a)||"")+")";case eg:return\'[role="\'+a.value+\'"]\';case gg:return\'"\'+a.value+\'"\';case fg:return\'[data-testname="\'+a.value+\'"]\';default:throw Error(q(365,a));}}\nfunction lg(a,b){var c=[];a=[a,0];for(var d=0;d<a.length;){var e=a[d++],f=a[d++],g=b[f];if(5!==e.tag||!fb(e)){for(;null!=g&&jg(e,g);)f++,g=b[f];if(f===b.length)c.push(e);else for(e=e.child;null!==e;)a.push(e,f),e=e.sibling}}return c}function mg(a,b){if(!bb)throw Error(q(363));a=ig(a);a=lg(a,b);b=[];a=Array.from(a);for(var c=0;c<a.length;){var d=a[c++];if(5===d.tag)fb(d)||b.push(d.stateNode);else for(d=d.child;null!==d;)a.push(d),d=d.sibling}return b}var ng=null;\nfunction og(a){if(null===ng)try{var b=("require"+Math.random()).slice(0,7);ng=(module&&module[b]).call(module,"timers").setImmediate}catch(c){ng=function(a){var b=new MessageChannel;b.port1.onmessage=a;b.port2.postMessage(void 0)}}return ng(a)}var pg=Math.ceil,qg=ca.ReactCurrentDispatcher,rg=ca.ReactCurrentOwner,sg=ca.IsSomeRendererActing,V=0,R=null,W=null,U=0,tg=0,ug=Wb(0),T=0,vg=null,wg=0,pd=0,tf=0,xg=0,yg=null,$f=0,vf=Infinity;function zg(){vf=G()+500}\nvar X=null,Cf=!1,Df=null,Ff=null,Ag=!1,Bg=null,Cg=90,Dg=[],Eg=[],Fg=null,Gg=0,Hg=null,Ig=-1,Jg=0,Kg=0,Lg=null,Mg=!1;function K(){return 0!==(V&48)?G():-1!==Ig?Ig:Ig=G()}function td(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===Nc()?1:2;0===Jg&&(Jg=wg);if(0!==Sc.transition){0!==Kg&&(Kg=null!==yg?yg.pendingLanes:0);a=Jg;var b=4186112&~Kg;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=Nc();0!==(V&4)&&98===a?a=oc(12,Jg):(a=jc(a),a=oc(a,Jg));return a}\nfunction ud(a,b,c){if(50<Gg)throw Gg=0,Hg=null,Error(q(185));a=Ng(a,b);if(null===a)return null;rc(a,b,c);a===R&&(tf|=b,4===T&&uf(a,U));var d=Nc();1===b?0!==(V&8)&&0===(V&48)?Og(a):(Z(a,c),0===V&&(zg(),H())):(0===(V&4)||98!==d&&99!==d||(null===Fg?Fg=new Set([a]):Fg.add(a)),Z(a,c));yg=a}function Ng(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Z(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-mc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;ic(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=lc(a,a===R?U:0);b=F;if(0===d)null!==c&&(c!==Hc&&xc(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Hc&&xc(c)}15===b?(c=Og.bind(null,a),null===Jc?(Jc=[c],Kc=wc(Cc,Rc)):Jc.push(c),\nc=Hc):14===b?c=Qc(99,Og.bind(null,a)):(c=kc(b),c=Qc(c,Pg.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Pg(a){Ig=-1;Kg=Jg=0;if(0!==(V&48))throw Error(q(327));var b=a.callbackNode;if(Qg()&&a.callbackNode!==b)return null;var c=lc(a,a===R?U:0);if(0===c)return null;var d=c;var e=V;V|=16;var f=Rg();if(R!==a||U!==d)zg(),Sg(a,d);do try{Tg();break}catch(h){Ug(a,h)}while(1);bd();qg.current=f;V=e;null!==W?d=0:(R=null,U=0,d=T);if(0!==(wg&tf))Sg(a,0);else if(0!==d){2===d&&(V|=64,a.hydrate&&(a.hydrate=!1,xb(a.containerInfo)),c=nc(a),0!==c&&(d=Vg(a,c)));if(1===d)throw b=vg,Sg(a,0),uf(a,c),Z(a,G()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(q(345));case 2:Zg(a);break;case 3:uf(a,c);if((c&62914560)===c&&(d=$f+500-G(),10<d)){if(0!==lc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){K();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Pa(Zg.bind(null,a),d);break}Zg(a);break;case 4:uf(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-mc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=G()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*pg(c/1960))-c;if(10<c){a.timeoutHandle=Pa(Zg.bind(null,a),c);break}Zg(a);break;case 5:Zg(a);break;default:throw Error(q(329));}}Z(a,G());return a.callbackNode===b?Pg.bind(null,a):null}function uf(a,b){b&=~xg;b&=~tf;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-mc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Og(a){if(0!==(V&48))throw Error(q(327));Qg();if(a===R&&0!==(a.expiredLanes&U)){var b=U;var c=Vg(a,b);0!==(wg&tf)&&(b=lc(a,b),c=Vg(a,b))}else b=lc(a,0),c=Vg(a,b);0!==a.tag&&2===c&&(V|=64,a.hydrate&&(a.hydrate=!1,xb(a.containerInfo)),b=nc(a),0!==b&&(c=Vg(a,b)));if(1===c)throw c=vg,Sg(a,0),uf(a,b),Z(a,G()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Zg(a);Z(a,G());return null}\nfunction $g(){if(null!==Fg){var a=Fg;Fg=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Z(a,G())})}H()}function ah(a,b){var c=V;V|=1;try{return a(b)}finally{V=c,0===V&&(zg(),H())}}function bh(a,b){var c=V;if(0!==(c&48))return a(b);V|=1;try{if(a)return Pc(99,a.bind(null,b))}finally{V=c,H()}}function Xe(a,b){A(ug,tg);tg|=b;wg|=b}function wf(){tg=ug.current;z(ug)}\nfunction Sg(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;c!==Ra&&(a.timeoutHandle=Ra,Qa(c));if(null!==W)for(c=W.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$b();break;case 3:Qd();z(D);z(B);ee();break;case 5:Sd(d);break;case 4:Qd();break;case 13:z(M);break;case 19:z(M);break;case 10:dd(d);break;case 23:case 24:wf()}c=c.return}R=a;W=Ed(a.current,null);U=tg=wg=b;T=0;vg=null;xg=tf=pd=0}\nfunction Ug(a,b){do{var c=W;try{bd();fe.current=pe;if(ie){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}ie=!1}he=0;P=O=N=null;je=!1;rg.current=null;if(null===c||null===c.return){T=1;vg=b;W=null;break}a:{var f=a,g=c.return,h=c,k=b;b=U;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var t=0!==(M.current&1),p=g;do{var y;if(y=13===p.tag){var x=p.memoizedState;if(null!==x)y=null!==x.dehydrated?!0:!1;else{var Y=p.memoizedProps;y=void 0===Y.fallback?!1:!0!==Y.unstable_avoidThisFallback?!0:t?!1:!0}}if(y){var u=p.updateQueue;if(null===u){var v=new Set;v.add(l);p.updateQueue=v}else u.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var C=kd(-1,1);C.tag=2;md(h,C)}h.lanes|=1;break a}k=\nvoid 0;h=b;var Oa=f.pingCache;null===Oa?(Oa=f.pingCache=new Af,k=new Set,Oa.set(l,k)):(k=Oa.get(l),void 0===k&&(k=new Set,Oa.set(l,k)));if(!k.has(h)){k.add(h);var Qe=ch.bind(null,f,l,h);l.then(Qe,Qe)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((wa(h.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==T&&(T=2);k=\nyf(k,h);p=g;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var Wg=Bf(p,f,b);nd(p,Wg);break a;case 1:f=k;var Xg=p.type,ld=p.stateNode;if(0===(p.flags&64)&&("function"===typeof Xg.getDerivedStateFromError||null!==ld&&"function"===typeof ld.componentDidCatch&&(null===Ff||!Ff.has(ld)))){p.flags|=4096;b&=-b;p.lanes|=b;var Yg=Ef(p,f,b);nd(p,Yg);break a}}p=p.return}while(null!==p)}dh(c)}catch(w){b=w;W===c&&null!==c&&(W=c=c.return);continue}break}while(1)}\nfunction Rg(){var a=qg.current;qg.current=pe;return null===a?pe:a}function Vg(a,b){var c=V;V|=16;var d=Rg();R===a&&U===b||Sg(a,b);do try{eh();break}catch(e){Ug(a,e)}while(1);bd();V=c;qg.current=d;if(null!==W)throw Error(q(261));R=null;U=0;return T}function eh(){for(;null!==W;)fh(W)}function Tg(){for(;null!==W&&!yc();)fh(W)}function fh(a){var b=gh(a.alternate,a,tg);a.memoizedProps=a.pendingProps;null===b?dh(a):W=b;rg.current=null}\nfunction dh(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=sf(c,b,tg);if(null!==c){W=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(tg&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=xf(b);if(null!==c){c.flags&=2047;W=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){W=b;return}W=b=a}while(null!==b);0===T&&(T=5)}function Zg(a){var b=Nc();Pc(99,hh.bind(null,a,b));return null}\nfunction hh(a,b){do Qg();while(null!==Bg);if(0!==(V&48))throw Error(q(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(q(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-mc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nFg&&0===(d&24)&&Fg.has(a)&&Fg.delete(a);a===R&&(W=R=null,U=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=V;V|=32;rg.current=null;Lg=Ga(a.containerInfo);Mg=!1;X=d;do try{ih()}catch(v){if(null===X)throw Error(q(330));If(X,v);X=X.nextEffect}while(null!==X);Lg=null;X=d;do try{for(g=a;null!==X;){var n=X.flags;n&16&&Ta&&sb(X.stateNode);if(n&128){var t=X.alternate;if(null!==t){var p=t.ref;null!==p&&("function"===typeof p?p(null):p.current=\nnull)}}switch(n&1038){case 2:Uf(X);X.flags&=-3;break;case 6:Uf(X);X.flags&=-3;Xf(X.alternate,X);break;case 1024:X.flags&=-1025;break;case 1028:X.flags&=-1025;Xf(X.alternate,X);break;case 4:Xf(X.alternate,X);break;case 8:h=g;f=X;Ta?Qf(h,f):Rf(h,f);var y=f.alternate;Sf(f);null!==y&&Sf(y)}X=X.nextEffect}}catch(v){if(null===X)throw Error(q(330));If(X,v);X=X.nextEffect}while(null!==X);Mg&&$a();Ha(a.containerInfo);a.current=c;X=d;do try{for(n=a;null!==X;){var x=X.flags;x&36&&Lf(n,X.alternate,X);if(x&128){t=\nvoid 0;var Y=X.ref;if(null!==Y){var u=X.stateNode;switch(X.tag){case 5:t=Da(u);break;default:t=u}"function"===typeof Y?Y(t):Y.current=t}}X=X.nextEffect}}catch(v){if(null===X)throw Error(q(330));If(X,v);X=X.nextEffect}while(null!==X);X=null;Ic();V=e}else a.current=c;if(Ag)Ag=!1,Bg=a,Cg=b;else for(X=d;null!==X;)b=X.nextEffect,X.nextEffect=null,X.flags&8&&(x=X,x.sibling=null,x.stateNode=null),X=b;d=a.pendingLanes;0===d&&(Ff=null);1===d?a===Hg?Gg++:(Gg=0,Hg=a):Gg=0;c=c.stateNode;if(fc&&"function"===typeof fc.onCommitFiberRoot)try{fc.onCommitFiberRoot(ec,\nc,void 0,64===(c.current.flags&64))}catch(v){}Z(a,G());if(Cf)throw Cf=!1,a=Df,Df=null,a;if(0!==(V&8))return null;H();return null}function ih(){for(;null!==X;){var a=X.alternate;Mg||null===Lg||(0!==(X.flags&8)?Ca(X,Lg)&&(Mg=!0,Za()):13===X.tag&&bg(a,X)&&Ca(X,Lg)&&(Mg=!0,Za()));var b=X.flags;0!==(b&256)&&Jf(a,X);0===(b&512)||Ag||(Ag=!0,Qc(97,function(){Qg();return null}));X=X.nextEffect}}function Qg(){if(90!==Cg){var a=97<Cg?97:Cg;Cg=90;return Pc(a,jh)}return!1}\nfunction Nf(a,b){Dg.push(b,a);Ag||(Ag=!0,Qc(97,function(){Qg();return null}))}function Mf(a,b){Eg.push(b,a);Ag||(Ag=!0,Qc(97,function(){Qg();return null}))}\nfunction jh(){if(null===Bg)return!1;var a=Bg;Bg=null;if(0!==(V&48))throw Error(q(331));var b=V;V|=32;var c=Eg;Eg=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if("function"===typeof g)try{g()}catch(k){if(null===f)throw Error(q(330));If(f,k)}}c=Dg;Dg=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(q(330));If(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;V=b;H();return!0}function kh(a,b,c){b=yf(c,b);b=Bf(a,b,1);md(a,b);b=K();a=Ng(a,1);null!==a&&(rc(a,1,b),Z(a,b))}\nfunction If(a,b){if(3===a.tag)kh(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){kh(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Ff||!Ff.has(d))){a=yf(b,a);var e=Ef(c,a,1);md(c,e);e=K();c=Ng(c,1);if(null!==c)rc(c,1,e),Z(c,e);else if("function"===typeof d.componentDidCatch&&(null===Ff||!Ff.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction ch(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=K();a.pingedLanes|=a.suspendedLanes&c;R===a&&(U&c)===c&&(4===T||3===T&&(U&62914560)===U&&500>G()-$f?Sg(a,0):xg|=c);Z(a,b)}function ag(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===Nc()?1:2:(0===Jg&&(Jg=wg),b=pc(62914560&~Jg),0===b&&(b=4194304)));c=K();a=Ng(a,b);null!==a&&(rc(a,b,c),Z(a,c))}var gh;\ngh=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||D.current)gd=!0;else if(0!==(c&d))gd=0!==(a.flags&16384)?!0:!1;else{gd=!1;switch(b.tag){case 3:af(b);ce();break;case 5:Rd(b);break;case 1:E(b.type)&&cc(b);break;case 4:Pd(b,b.stateNode.containerInfo);break;case 10:cd(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return cf(a,b,c);A(M,M.current&1);b=Re(a,b,c);return null!==b?b.sibling:null}A(M,M.current&1);break;case 19:d=\n0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return kf(a,b,c);b.flags|=64}var e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);A(M,M.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,We(a,b,c)}return Re(a,b,c)}else gd=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Zb(b,B.current);fd(b,c);e=le(null,b,d,a,e,c);b.flags|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&\nvoid 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(E(d)){var f=!0;cc(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;id(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&sd(b,d,g,a);e.updater=vd;b.stateNode=e;e._reactInternals=b;zd(b,d,a,c);b=$e(null,b,d,!0,f,c)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;\nf=b.tag=lh(e);a=Xc(e,a);switch(f){case 0:b=Ve(null,b,e,a,c);break a;case 1:b=Ze(null,b,e,a,c);break a;case 11:b=Pe(null,b,e,a,c);break a;case 14:b=Se(null,b,e,Xc(e.type,a),d,c);break a}throw Error(q(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Xc(d,e),Ve(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Xc(d,e),Ze(a,b,d,e,c);case 3:af(b);d=b.updateQueue;if(null===a||null===d)throw Error(q(282));d=b.pendingProps;e=b.memoizedState;e=null!==\ne?e.element:null;jd(a,b);od(b,d,null,c);d=b.memoizedState.element;if(d===e)ce(),b=Re(a,b,c);else{e=b.stateNode;if(f=e.hydrate)Va?(Vd=Kb(b.stateNode.containerInfo),Ud=b,f=Wd=!0):f=!1;if(f){if(Va&&(a=e.mutableSourceEagerHydrationData,null!=a))for(e=0;e<a.length;e+=2)f=a[e],g=a[e+1],Sa?f._workInProgressVersionPrimary=g:f._workInProgressVersionSecondary=g,de.push(f);c=Kd(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else S(a,b,d,c),ce();b=b.child}return b;case 5:return Rd(b),null===\na&&$d(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ma(d,e)?g=null:null!==f&&Ma(d,f)&&(b.flags|=16),Ye(a,b),S(a,b,g,c),b.child;case 6:return null===a&&$d(b),null;case 13:return cf(a,b,c);case 4:return Pd(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Jd(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Xc(d,e),Pe(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\nc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;cd(b,f);if(null!==g){var h=g.value;f=I(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!D.current){b=Re(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==\n(l.observedBits&f)){1===h.tag&&(l=kd(-1,c&-c),l.tag=2,md(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);ed(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,fd(b,c),e=J(e,f.unstable_observedBits),d=d(e),b.flags|=1,S(a,b,\nd,c),b.child;case 14:return e=b.type,f=Xc(e,b.pendingProps),f=Xc(e.type,f),Se(a,b,e,f,d,c);case 15:return Ue(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Xc(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,E(d)?(a=!0,cc(b)):a=!1,fd(b,c),xd(b,d,e),zd(b,d,e,c),$e(null,b,d,!0,a,c);case 19:return kf(a,b,c);case 23:return We(a,b,c);case 24:return We(a,b,c)}throw Error(q(156,b.tag));};\nvar mh={current:!1},nh=m.unstable_flushAllWithoutAsserting,oh="function"===typeof nh;function ph(){if(void 0!==nh)return nh();for(var a=!1;Qg();)a=!0;return a}function qh(a){try{ph(),og(function(){ph()?qh(a):a()})}catch(b){a(b)}}var rh=0,sh=!1;\nfunction th(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function Yd(a,b,c,d){return new th(a,b,c,d)}function Te(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction lh(a){if("function"===typeof a)return Te(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===la)return 11;if(a===oa)return 14}return 2}\nfunction Ed(a,b){var c=a.alternate;null===c?(c=Yd(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Gd(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)Te(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case fa:return Id(c.children,e,f,b);case ra:g=8;e|=16;break;case ha:g=8;e|=1;break;case ia:return a=Yd(12,c,b,e|8),a.elementType=ia,a.type=ia,a.lanes=f,a;case ma:return a=Yd(13,c,b,e),a.type=ma,a.elementType=ma,a.lanes=f,a;case na:return a=Yd(19,c,b,e),a.elementType=na,a.lanes=f,a;case sa:return ef(c,e,f,b);case ta:return a=Yd(24,c,b,e),a.elementType=ta,a.lanes=f,a;default:if("object"===\ntypeof a&&null!==a)switch(a.$$typeof){case ja:g=10;break a;case ka:g=9;break a;case la:g=11;break a;case oa:g=14;break a;case pa:g=16;d=null;break a;case qa:g=22;break a}throw Error(q(130,null==a?a:typeof a,""));}b=Yd(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Id(a,b,c,d){a=Yd(7,a,d,b);a.lanes=c;return a}function ef(a,b,c,d){a=Yd(23,a,d,b);a.elementType=sa;a.lanes=c;return a}function Fd(a,b,c){a=Yd(6,a,null,b);a.lanes=c;return a}\nfunction Hd(a,b,c){b=Yd(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction uh(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=Ra;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=qc(0);this.expirationTimes=qc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=qc(0);Va&&(this.mutableSourceEagerHydrationData=null)}\nfunction vh(a){var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(q(188));throw Error(q(268,Object.keys(a)));}a=Aa(b);return null===a?null:a.stateNode}function wh(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function xh(a,b){wh(a,b);(a=a.alternate)&&wh(a,b)}function yh(a){a=Aa(a);return null===a?null:a.stateNode}function zh(){return null}exports.IsThisRendererActing=mh;\nexports.act=function(a){function b(){rh--;sg.current=c;mh.current=d}!1===sh&&(sh=!0,console.error("act(...) is not supported in production builds of React, and might not behave as expected."));rh++;var c=sg.current,d=mh.current;sg.current=!0;mh.current=!0;try{var e=ah(a)}catch(f){throw b(),f;}if(null!==e&&"object"===typeof e&&"function"===typeof e.then)return{then:function(a,d){e.then(function(){1<rh||!0===oh&&!0===c?(b(),a()):qh(function(c){b();c?d(c):a()})},function(a){b();d(a)})}};try{1!==rh||\n!1!==oh&&!1!==c||ph(),b()}catch(f){throw b(),f;}return{then:function(a){a()}}};exports.attemptContinuousHydration=function(a){if(13===a.tag){var b=K();ud(a,67108864,b);xh(a,67108864)}};exports.attemptHydrationAtCurrentPriority=function(a){if(13===a.tag){var b=K(),c=td(a);ud(a,c,b);xh(a,c)}};\nexports.attemptSynchronousHydration=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.hydrate){var c=ic(b.pendingLanes);b.expiredLanes|=c&b.pendingLanes;Z(b,G());0===(V&48)&&(zg(),H())}break;case 13:var d=K();bh(function(){return ud(a,1,d)});xh(a,4)}};exports.attemptUserBlockingHydration=function(a){if(13===a.tag){var b=K();ud(a,4,b);xh(a,4)}};exports.batchedEventUpdates=function(a,b){var c=V;V|=2;try{return a(b)}finally{V=c,0===V&&(zg(),H())}};exports.batchedUpdates=ah;\nexports.createComponentSelector=function(a){return{$$typeof:cg,value:a}};exports.createContainer=function(a,b,c){a=new uh(a,b,c);b=Yd(3,null,null,2===b?7:1===b?3:0);a.current=b;b.stateNode=a;id(b);return a};exports.createHasPsuedoClassSelector=function(a){return{$$typeof:dg,value:a}};exports.createPortal=function(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ea,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}};\nexports.createRoleSelector=function(a){return{$$typeof:eg,value:a}};exports.createTestNameSelector=function(a){return{$$typeof:fg,value:a}};exports.createTextSelector=function(a){return{$$typeof:gg,value:a}};exports.deferredUpdates=function(a){return Pc(97,a)};exports.discreteUpdates=function(a,b,c,d,e){var f=V;V|=4;try{return Pc(98,a.bind(null,b,c,d,e))}finally{V=f,0===V&&(zg(),H())}};exports.findAllNodes=mg;\nexports.findBoundingRects=function(a,b){if(!bb)throw Error(q(363));b=mg(a,b);a=[];for(var c=0;c<b.length;c++)a.push(db(b[c]));for(b=a.length-1;0<b;b--){c=a[b];for(var d=c.x,e=d+c.width,f=c.y,g=f+c.height,h=b-1;0<=h;h--)if(b!==h){var k=a[h],l=k.x,n=l+k.width,t=k.y,p=t+k.height;if(d>=l&&f>=t&&e<=n&&g<=p){a.splice(b,1);break}else if(!(d!==l||c.width!==k.width||p<f||t>g)){t>f&&(k.height+=t-f,k.y=f);p<g&&(k.height=g-t);a.splice(b,1);break}else if(!(f!==t||c.height!==k.height||n<d||l>e)){l>d&&(k.width+=\nl-d,k.x=d);n<e&&(k.width=e-l);a.splice(b,1);break}}}return a};exports.findHostInstance=vh;exports.findHostInstanceWithNoPortals=function(a){a=Ba(a);return null===a?null:20===a.tag?a.stateNode.instance:a.stateNode};exports.findHostInstanceWithWarning=function(a){return vh(a)};exports.flushControlled=function(a){var b=V;V|=1;try{Pc(99,a)}finally{V=b,0===V&&(zg(),H())}};exports.flushDiscreteUpdates=function(){0===(V&49)&&($g(),Qg())};exports.flushPassiveEffects=Qg;exports.flushSync=bh;\nexports.focusWithin=function(a,b){if(!bb)throw Error(q(363));a=ig(a);b=lg(a,b);b=Array.from(b);for(a=0;a<b.length;){var c=b[a++];if(!fb(c)){if(5===c.tag&&hb(c.stateNode))return!0;for(c=c.child;null!==c;)b.push(c),c=c.sibling}}return!1};exports.getCurrentUpdateLanePriority=function(){return hc};\nexports.getFindAllNodesFailureDescription=function(a,b){if(!bb)throw Error(q(363));var c=0,d=[];a=[ig(a),0];for(var e=0;e<a.length;){var f=a[e++],g=a[e++],h=b[g];if(5!==f.tag||!fb(f))if(jg(f,h)&&(d.push(kg(h)),g++,g>c&&(c=g)),g<b.length)for(f=f.child;null!==f;)a.push(f,g),f=f.sibling}if(c<b.length){for(a=[];c<b.length;c++)a.push(kg(b[c]));return"findAllNodes was able to match part of the selector:\\n  "+(d.join(" > ")+"\\n\\nNo matching component was found for:\\n  ")+a.join(" > ")}return null};\nexports.getPublicRootInstance=function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return Da(a.child.stateNode);default:return a.child.stateNode}};\nexports.injectIntoDevTools=function(a){a={bundleType:a.bundleType,version:a.version,rendererPackageName:a.rendererPackageName,rendererConfig:a.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ca.ReactCurrentDispatcher,findHostInstanceByFiber:yh,findFiberByHostInstance:a.findFiberByHostInstance||zh,findHostInstancesForRefresh:null,\nscheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)a=!1;else{var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!b.isDisabled&&b.supportsFiber)try{ec=b.inject(a),fc=b}catch(c){}a=!0}return a};exports.observeVisibleRects=function(a,b,c,d){if(!bb)throw Error(q(363));a=mg(a,b);var e=ib(a,c,d).disconnect;return{disconnect:function(){e()}}};\nexports.registerMutableSourceForHydration=function(a,b){var c=b._getVersion;c=c(b._source);null==a.mutableSourceEagerHydrationData?a.mutableSourceEagerHydrationData=[b,c]:a.mutableSourceEagerHydrationData.push(b,c)};exports.runWithPriority=function(a,b){var c=hc;try{return hc=a,b()}finally{hc=c}};exports.shouldSuspend=function(){return!1};exports.unbatchedUpdates=function(a,b){var c=V;V&=-2;V|=8;try{return a(b)}finally{V=c,0===V&&(zg(),H())}};\nexports.updateContainer=function(a,b,c,d){var e=b.current,f=K(),g=td(e);a:if(c){c=c._reactInternals;b:{if(xa(c)!==c||1!==c.tag)throw Error(q(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(E(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(q(171));}if(1===c.tag){var k=c.type;if(E(k)){c=bc(c,k,h);break a}}c=h}else c=Xb;null===b.context?b.context=c:b.pendingContext=c;b=kd(f,g);b.payload={element:a};d=void 0===\nd?null:d;null!==d&&(b.callback=d);md(e,b);ud(e,g,f);return g};\n\n    return exports;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///67287\n')},76525:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(67287);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzY1MjUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxJQUFxQztBQUN6QyxFQUFFLDJDQUFvRTtBQUN0RSxFQUFFLEtBQUssRUFFTiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnQtbWlzLW1vYmlsZS1hcHAvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVjb25jaWxlci9pbmRleC5qcz8zNDk3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1yZWNvbmNpbGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LXJlY29uY2lsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///76525\n")},96774:module=>{eval('//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A\'s keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTY3NzQuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLG9CQUFvQixvQkFBb0I7QUFDeEM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnQtbWlzLW1vYmlsZS1hcHAvLi9ub2RlX21vZHVsZXMvc2hhbGxvd2VxdWFsL2luZGV4LmpzPzFiMmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQiwgY29tcGFyZSwgY29tcGFyZUNvbnRleHQpIHtcbiAgdmFyIHJldCA9IGNvbXBhcmUgPyBjb21wYXJlLmNhbGwoY29tcGFyZUNvbnRleHQsIG9iakEsIG9iakIpIDogdm9pZCAwO1xuXG4gIGlmIChyZXQgIT09IHZvaWQgMCkge1xuICAgIHJldHVybiAhIXJldDtcbiAgfVxuXG4gIGlmIChvYmpBID09PSBvYmpCKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iakEgIT09IFwib2JqZWN0XCIgfHwgIW9iakEgfHwgdHlwZW9mIG9iakIgIT09IFwib2JqZWN0XCIgfHwgIW9iakIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG5cbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGJIYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuYmluZChvYmpCKTtcblxuICAvLyBUZXN0IGZvciBBJ3Mga2V5cyBkaWZmZXJlbnQgZnJvbSBCLlxuICBmb3IgKHZhciBpZHggPSAwOyBpZHggPCBrZXlzQS5sZW5ndGg7IGlkeCsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNBW2lkeF07XG5cbiAgICBpZiAoIWJIYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHZhbHVlQSA9IG9iakFba2V5XTtcbiAgICB2YXIgdmFsdWVCID0gb2JqQltrZXldO1xuXG4gICAgcmV0ID0gY29tcGFyZSA/IGNvbXBhcmUuY2FsbChjb21wYXJlQ29udGV4dCwgdmFsdWVBLCB2YWx1ZUIsIGtleSkgOiB2b2lkIDA7XG5cbiAgICBpZiAocmV0ID09PSBmYWxzZSB8fCAocmV0ID09PSB2b2lkIDAgJiYgdmFsdWVBICE9PSB2YWx1ZUIpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///96774\n')}}]);