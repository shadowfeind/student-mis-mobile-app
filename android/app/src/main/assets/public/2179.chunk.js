"use strict";(self.webpackChunkstudent_mis_mobile_app=self.webpackChunkstudent_mis_mobile_app||[]).push([[2179],{2179:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ examDivision_ExamDivision)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__(885);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/makeStyles.js\nvar makeStyles = __webpack_require__(1120);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Toolbar/Toolbar.js\nvar Toolbar = __webpack_require__(8358);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js\nvar InputAdornment = __webpack_require__(7397);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Button/Button.js\nvar Button = __webpack_require__(282);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/TableBody/TableBody.js\nvar TableBody = __webpack_require__(9613);\n// EXTERNAL MODULE: ./src/customHooks/useCustomTable.js\nvar useCustomTable = __webpack_require__(1198);\n// EXTERNAL MODULE: ./src/components/controls/InputControl.js\nvar InputControl = __webpack_require__(9277);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/esm/Search.js\nvar Search = __webpack_require__(7215);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/Add.js\nvar Add = __webpack_require__(3957);\n// EXTERNAL MODULE: ./src/components/Popup.js\nvar Popup = __webpack_require__(9004);\n// EXTERNAL MODULE: ./src/components/CustomContainer.js\nvar CustomContainer = __webpack_require__(9286);\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 18 modules\nvar es = __webpack_require__(9704);\n// EXTERNAL MODULE: ./src/components/Notification.js\nvar Notification = __webpack_require__(983);\n// EXTERNAL MODULE: ./src/components/ConfirmDialog.js\nvar ConfirmDialog = __webpack_require__(851);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/TableRow/TableRow.js\nvar TableRow = __webpack_require__(7394);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/TableCell/TableCell.js\nvar TableCell = __webpack_require__(8222);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/Edit.js\nvar Edit = __webpack_require__(9067);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/Delete.js\nvar Delete = __webpack_require__(8428);\n;// CONCATENATED MODULE: ./src/student/examDivision/ExamDivisionTableCollapse.js\n\n\n\n\nvar useStyles = (0,makeStyles/* default */.Z)({\n  button: {\n    marginRight: "1px",\n    padding: "5px",\n    minWidth: "10px",\n    fontSize: "12px"\n  }\n});\n\nvar ExamDivisionTableCollapse = function ExamDivisionTableCollapse(_ref) {\n  var item = _ref.item,\n      updateCollegeHandler = _ref.updateCollegeHandler,\n      deleteCollegeHandler = _ref.deleteCollegeHandler;\n  var classes = useStyles();\n  return /*#__PURE__*/react.createElement(TableRow/* default */.Z, {\n    key: item.$id\n  }, /*#__PURE__*/react.createElement(TableCell/* default */.Z, null, item.StartRange), /*#__PURE__*/react.createElement(TableCell/* default */.Z, null, item.EndRange), /*#__PURE__*/react.createElement(TableCell/* default */.Z, null, item.Division), /*#__PURE__*/react.createElement(TableCell/* default */.Z, null, item.Comment), /*#__PURE__*/react.createElement(TableCell/* default */.Z, null, item.Created_On.slice(0, 10)), /*#__PURE__*/react.createElement(TableCell/* default */.Z, null, item.Updated_On.slice(0, 10)), /*#__PURE__*/react.createElement(TableCell/* default */.Z, null, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    variant: "contained",\n    color: "primary",\n    className: classes.button,\n    onClick: function onClick() {\n      return updateCollegeHandler(item.IDAcademicExamDivision, item.IDFacultyProgramLink);\n    }\n  }, /*#__PURE__*/react.createElement(Edit/* default */.Z, {\n    style: {\n      fontSize: 12\n    }\n  })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    variant: "contained",\n    color: "secondary",\n    className: classes.button,\n    onClick: function onClick() {\n      return deleteCollegeHandler(item.IDAcademicExamDivision, item.IDFacultyProgramLink);\n    }\n  }, /*#__PURE__*/react.createElement(Delete/* default */.Z, {\n    style: {\n      fontSize: 12\n    }\n  }))));\n};\n\n/* harmony default export */ const examDivision_ExamDivisionTableCollapse = (ExamDivisionTableCollapse);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(5861);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(7757);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar node_modules_axios = __webpack_require__(9669);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(node_modules_axios);\n// EXTERNAL MODULE: ./src/constants.js\nvar constants = __webpack_require__(8061);\n// EXTERNAL MODULE: ./src/student/examDivision/ExamDivisionConstants.js\nvar ExamDivisionConstants = __webpack_require__(2832);\n;// CONCATENATED MODULE: ./src/student/examDivision/ExamDivisionActions.js\n\n\n\n\n\nvar getAllExamDivisionAction = function getAllExamDivisionAction() {\n  return /*#__PURE__*/function () {\n    var _ref = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee(dispatch) {\n      var _yield$axios$get, data;\n\n      return regenerator_default().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: ExamDivisionConstants/* GET_ALL_EXAM_DIVISION_REQUEST */.Vg\n              });\n              _context.next = 4;\n              return axios_default().get("".concat(constants/* API_URL */.T5, "/api/AcademicExamDivision/GetAllExamDivision"), constants/* tokenConfig */.Y2);\n\n            case 4:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: ExamDivisionConstants/* GET_ALL_EXAM_DIVISION_SUCCESS */.W6,\n                payload: data\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context["catch"](0);\n              dispatch({\n                type: ExamDivisionConstants/* GET_ALL_EXAM_DIVISION_FAIL */.yv,\n                payload: _context.t0.message && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 12:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nvar getSingleExamDivisionAction = function getSingleExamDivisionAction() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var _yield$axios$get2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: GET_SINGLE_EXAM_DIVISION_REQUEST\n              });\n              _context2.next = 4;\n              return axios.get("".concat(API_URL, "/api/GetToCreateAcademicExamDivision/6/singleGetToCreate"), tokenConfig);\n\n            case 4:\n              _yield$axios$get2 = _context2.sent;\n              data = _yield$axios$get2.data;\n              dispatch({\n                type: GET_SINGLE_EXAM_DIVISION_SUCCESS,\n                payload: data\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2["catch"](0);\n              dispatch({\n                type: GET_SINGLE_EXAM_DIVISION_FAIL,\n                payload: _context2.t0.message && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 12:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nvar createExamDivisionAction = function createExamDivisionAction(examDivision) {\n  return /*#__PURE__*/function () {\n    var _ref3 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee3(dispatch) {\n      var jsonData, _yield$axios$post, data;\n\n      return regenerator_default().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: ExamDivisionConstants/* CREATE_EXAM_DIVISION_REQUEST */.Rt\n              });\n              jsonData = JSON.stringify({\n                dbModel: examDivision\n              }); // const config = {\n              //   headers: {\n              //     "Content-Type": "application/json",\n              //   },\n              // };\n\n              _context3.next = 5;\n              return axios_default().post("".concat(constants/* API_URL */.T5, "/api/AcademicExamDivision/PostAcademicExamDivision"), jsonData, constants/* tokenConfig */.Y2);\n\n            case 5:\n              _yield$axios$post = _context3.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: ExamDivisionConstants/* CREATE_EXAM_DIVISION_SUCCESS */.sb,\n                payload: data\n              });\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3["catch"](0);\n              dispatch({\n                type: ExamDivisionConstants/* CREATE_EXAM_DIVISION_FAIL */.TG,\n                payload: _context3.t0.message && _context3.t0.response.data.message ? _context3.t0.response.data.message : _context3.t0.message\n              });\n\n            case 13:\n            case "end":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 10]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nvar getSingleExamDivisionEditAction = function getSingleExamDivisionEditAction(IDAcademicExamDivision, idFacultyProgramLink) {\n  return /*#__PURE__*/function () {\n    var _ref4 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee4(dispatch) {\n      var _yield$axios$get3, data;\n\n      return regenerator_default().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dispatch({\n                type: ExamDivisionConstants/* GET_SINGLE_EXAM_DIVISION_EDIT_REQUEST */.g_\n              });\n              _context4.next = 4;\n              return axios_default().get("".concat(constants/* API_URL */.T5, "/api/GetToEditSingleAcademicExamDivision/").concat(IDAcademicExamDivision, "/").concat(idFacultyProgramLink, "/singleEdit"), constants/* tokenConfig */.Y2);\n\n            case 4:\n              _yield$axios$get3 = _context4.sent;\n              data = _yield$axios$get3.data;\n              dispatch({\n                type: ExamDivisionConstants/* GET_SINGLE_EXAM_DIVISION_EDIT_SUCCESS */.Te,\n                payload: data\n              });\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4["catch"](0);\n              dispatch({\n                type: ExamDivisionConstants/* GET_SINGLE_EXAM_DIVISION_EDIT_FAIL */.VU,\n                payload: _context4.t0.message && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message\n              });\n\n            case 12:\n            case "end":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 9]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nvar updateSingleExamDivisionAction = function updateSingleExamDivisionAction(examDivision) {\n  return /*#__PURE__*/function () {\n    var _ref5 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee5(dispatch) {\n      var jsonData, _yield$axios$put, data;\n\n      return regenerator_default().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dispatch({\n                type: ExamDivisionConstants/* UPDATE_SINGLE_EXAM_DIVISION_REQUEST */.nm\n              });\n              jsonData = JSON.stringify({\n                dbModel: examDivision\n              }); // const config = {\n              //   headers: {\n              //     "Content-Type": "application/json",\n              //   },\n              // };\n\n              _context5.next = 5;\n              return axios_default().put(" ".concat(constants/* API_URL */.T5, "/api/AcademicExamDivision/PutAcademicExamDivision"), jsonData, constants/* tokenConfig */.Y2);\n\n            case 5:\n              _yield$axios$put = _context5.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: ExamDivisionConstants/* UPDATE_SINGLE_EXAM_DIVISION_SUCCESS */.Q7,\n                payload: data\n              });\n              _context5.next = 13;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5["catch"](0);\n              dispatch({\n                type: ExamDivisionConstants/* UPDATE_SINGLE_EXAM_DIVISION_FAIL */.mc,\n                payload: _context5.t0.message && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message\n              });\n\n            case 13:\n            case "end":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 10]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(4942);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Grid/Grid.js\nvar Grid = __webpack_require__(1749);\n// EXTERNAL MODULE: ./src/customHooks/useForm.js\nvar useForm = __webpack_require__(834);\n;// CONCATENATED MODULE: ./src/components/controls/CheckBoxControl.js\n // import { CheckBox } from "@material-ui/icons";\n\n\n\nvar CheckBoxControl = function CheckBoxControl(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      label = _ref.label,\n      _onChange = _ref.onChange;\n\n  var converToDefaultEventPara = function converToDefaultEventPara(name, value) {\n    return {\n      target: {\n        name: name,\n        value: value\n      }\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, null, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      name: name,\n      color: "primary",\n      checked: value,\n      onChange: function onChange(e) {\n        return _onChange(converToDefaultEventPara(name, e.target.checked));\n      }\n    }),\n    label: label\n  }));\n};\n\n/* harmony default export */ const controls_CheckBoxControl = ((/* unused pure expression or super */ null && (CheckBoxControl)));\n;// CONCATENATED MODULE: ./src/student/examDivision/ExamDivisionForm.js\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n\n\n\n\n\n\n\nvar initialFormValues = {\n  IDAcademicExamDivision: 0,\n  IDFacultyProgramLink: 6,\n  StartRange: 0,\n  EndRange: 0,\n  Division: "",\n  Comment: "",\n  Created_On: "2021-09-23",\n  Updated_On: "2021-09-23"\n};\n\nvar ExamDivisionForm = function ExamDivisionForm(_ref) {\n  var examDivision = _ref.examDivision,\n      setOpenPopup = _ref.setOpenPopup;\n  var dispatch = (0,es/* useDispatch */.I0)();\n\n  var validate = function validate() {\n    var fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n\n    var temp = _objectSpread({}, errors);\n\n    temp.StartRange = !fieldValues.StartRange ? "This feild is required" : fieldValues.StartRange.length > 20 ? "Must be less than 20 characters" : "";\n    temp.EndRange = !fieldValues.EndRange ? "This feild is required" : fieldValues.EndRange.length > 20 ? "Must be less than 20 characters" : "";\n    temp.Division = !fieldValues.Division ? "This feild is required" : !fieldValues.Division.trim() ? "This feild is required" : fieldValues.Division.length > 20 ? "Must be less than 20 characters" : "";\n    temp.Comment = !fieldValues.Comment ? "This feild is required" : !fieldValues.Comment.trim() ? "This feild is required" : "";\n    setErrors(_objectSpread({}, temp));\n    return Object.values(temp).every(function (x) {\n      return x === "";\n    });\n  };\n\n  var _useForm = (0,useForm/* useForm */.c)(initialFormValues),\n      values = _useForm.values,\n      setValues = _useForm.setValues,\n      handleInputChange = _useForm.handleInputChange,\n      errors = _useForm.errors,\n      setErrors = _useForm.setErrors;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (validate()) {\n      if (values.IDAcademicExamDivision === 0) {\n        dispatch(createExamDivisionAction(values));\n      } else {\n        dispatch(updateSingleExamDivisionAction(values));\n      }\n    }\n  };\n\n  (0,react.useEffect)(function () {\n    if (examDivision) {\n      setValues(_objectSpread({}, examDivision));\n    }\n  }, [examDivision]);\n  return /*#__PURE__*/react.createElement(useForm/* Form */.l, {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n    container: true,\n    style: {\n      fontSize: "12px"\n    }\n  }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n    item: true,\n    xs: 6\n  }, /*#__PURE__*/react.createElement(InputControl/* default */.Z, {\n    name: "StartRange",\n    label: "Start Range",\n    value: values.StartRange,\n    onChange: handleInputChange,\n    type: "number",\n    errors: errors.StartRange\n  }), /*#__PURE__*/react.createElement(InputControl/* default */.Z, {\n    name: "Division",\n    label: "Division",\n    value: values.Division,\n    onChange: handleInputChange,\n    errors: errors.Division\n  }), /*#__PURE__*/react.createElement(InputControl/* default */.Z, {\n    name: "Comment",\n    label: "Comment",\n    value: values.Comment,\n    onChange: handleInputChange,\n    errors: errors.Comment\n  }), /*#__PURE__*/react.createElement("div", null)), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n    item: true,\n    xs: 6\n  }, /*#__PURE__*/react.createElement(InputControl/* default */.Z, {\n    name: "EndRange",\n    label: "End Range",\n    type: "number",\n    value: values.EndRange,\n    onChange: handleInputChange,\n    errors: errors.EndRange\n  }))), /*#__PURE__*/react.createElement("div", {\n    style: {\n      display: "flex",\n      justifyContent: "end",\n      paddingTop: "10px",\n      marginTop: "10px",\n      borderTop: "1px solid #f3f3f3"\n    }\n  }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    variant: "contained",\n    color: "secondary",\n    onClick: function onClick() {\n      return setOpenPopup(false);\n    },\n    style: {\n      margin: "10px 0 0 10px"\n    }\n  }, "CANCEL"), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    variant: "contained",\n    color: "primary",\n    type: "submit",\n    style: {\n      margin: "10px 0 0 10px"\n    }\n  }, "SUBMIT")));\n};\n\n/* harmony default export */ const examDivision_ExamDivisionForm = (ExamDivisionForm);\n;// CONCATENATED MODULE: ./src/student/examDivision/ExamDivision.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar ExamDivision_useStyles = (0,makeStyles/* default */.Z)(function (theme) {\n  return {\n    searchInput: {\n      width: "75%",\n      fontSize: "12px"\n    },\n    button: {\n      position: "absolute",\n      right: "10px"\n    }\n  };\n});\nvar tableHeader = [{\n  id: "StartRange",\n  label: "Start Range"\n}, {\n  id: "EndRange",\n  label: "End Range"\n}, {\n  id: "Division",\n  label: "Division"\n}, {\n  id: "Comment",\n  label: "Comment"\n}, {\n  id: "Created_On",\n  label: "Created_On"\n}, {\n  id: "Updated_On",\n  label: "Updated_On"\n}, {\n  id: "Actions",\n  label: "Actions",\n  disableSorting: true\n}];\n\nvar ExamDivision = function ExamDivision() {\n  var _useState = (0,react.useState)([]),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      tableData = _useState2[0],\n      setTableData = _useState2[1];\n\n  var _useState3 = (0,react.useState)({\n    fn: function fn(item) {\n      return item;\n    }\n  }),\n      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n      filterFn = _useState4[0],\n      setFilterFn = _useState4[1];\n\n  var _useState5 = (0,react.useState)(false),\n      _useState6 = (0,slicedToArray/* default */.Z)(_useState5, 2),\n      openPopup = _useState6[0],\n      setOpenPopup = _useState6[1];\n\n  var _useState7 = (0,react.useState)({\n    isOpen: false,\n    message: "",\n    type: ""\n  }),\n      _useState8 = (0,slicedToArray/* default */.Z)(_useState7, 2),\n      notify = _useState8[0],\n      setNotify = _useState8[1];\n\n  var _useState9 = (0,react.useState)({\n    isOpen: false,\n    title: "",\n    subTitle: ""\n  }),\n      _useState10 = (0,slicedToArray/* default */.Z)(_useState9, 2),\n      confirmDialog = _useState10[0],\n      setConfirmDialog = _useState10[1];\n\n  var classes = ExamDivision_useStyles();\n  var dispatch = (0,es/* useDispatch */.I0)();\n\n  var _useSelector = (0,es/* useSelector */.v9)(function (state) {\n    return state.getAllExamDivision;\n  }),\n      examDivision = _useSelector.examDivision,\n      error = _useSelector.error; // const { examDivision: singleExamDivision, error: singleExamDivisionError } = useSelector((state) => state.getSingleExamDivision);\n\n\n  var _useSelector2 = (0,es/* useSelector */.v9)(function (state) {\n    return state.getSingleExamDivisionEdit;\n  }),\n      singleExamDivision = _useSelector2.singleExamDivision,\n      singleExamDivisionError = _useSelector2.error;\n\n  var _useSelector3 = (0,es/* useSelector */.v9)(function (state) {\n    return state.createExamDivision;\n  }),\n      examDivisionCreateSuccess = _useSelector3.success,\n      examDivisionCreateError = _useSelector3.error;\n\n  var _useSelector4 = (0,es/* useSelector */.v9)(function (state) {\n    return state.updateSingleExamDivision;\n  }),\n      updateSingleExamDivisionSuccess = _useSelector4.success,\n      updateSingleExamDivisionError = _useSelector4.error;\n\n  if (error) {\n    setNotify({\n      isOpen: true,\n      message: error,\n      type: "error"\n    });\n    dispatch({\n      type: ExamDivisionConstants/* GET_ALL_EXAM_DIVISION_RESET */.pN\n    });\n  }\n\n  if (examDivisionCreateSuccess) {\n    dispatch(getAllExamDivisionAction());\n    setNotify({\n      isOpen: true,\n      message: "Exam Division Created Successfully",\n      type: "success"\n    });\n    setOpenPopup(false);\n    dispatch({\n      type: ExamDivisionConstants/* CREATE_EXAM_DIVISION_RESET */.B9\n    });\n  }\n\n  if (examDivisionCreateError) {\n    setNotify({\n      isOpen: true,\n      message: examDivisionCreateError,\n      type: "error"\n    });\n    dispatch({\n      type: ExamDivisionConstants/* CREATE_EXAM_DIVISION_RESET */.B9\n    });\n  }\n\n  if (updateSingleExamDivisionSuccess) {\n    dispatch(getAllExamDivisionAction());\n    setNotify({\n      isOpen: true,\n      message: "Updated Succesfully",\n      type: "success"\n    });\n    setOpenPopup(false);\n    dispatch({\n      type: ExamDivisionConstants/* UPDATE_SINGLE_EXAM_DIVISION_RESET */.UF\n    });\n  }\n\n  if (updateSingleExamDivisionError) {\n    setNotify({\n      isOpen: true,\n      message: updateExamDivisionError,\n      type: "error"\n    });\n    setOpenPopup(false);\n    dispatch({\n      type: ExamDivisionConstants/* UPDATE_SINGLE_EXAM_DIVISION_RESET */.UF\n    });\n  }\n\n  var updateCollegeHandler = function updateCollegeHandler(IDAcademicExamDivision, IDFacultyProgramLink) {\n    dispatch(getSingleExamDivisionEditAction(IDAcademicExamDivision, IDFacultyProgramLink));\n    setOpenPopup(true);\n  };\n\n  var deleteCollegeHandler = function deleteCollegeHandler() {};\n\n  (0,react.useEffect)(function () {\n    if (!examDivision) {\n      dispatch(getAllExamDivisionAction());\n    }\n\n    if (examDivision) {\n      setTableData(examDivision.dbModelLst);\n    }\n  }, [dispatch, examDivision]);\n\n  var _useCustomTable = (0,useCustomTable/* default */.Z)(tableData, tableHeader, filterFn),\n      TableContainer = _useCustomTable.TableContainer,\n      TblHead = _useCustomTable.TblHead,\n      TblPagination = _useCustomTable.TblPagination,\n      tableDataAfterPagingAndSorting = _useCustomTable.tableDataAfterPagingAndSorting;\n\n  var handleSearch = function handleSearch(e) {\n    setFilterFn({\n      fn: function fn(item) {\n        if (e.target.value === "") {\n          return item;\n        } else {\n          return item.filter(function (x) {\n            return x.Division.toLowerCase().includes(e.target.value);\n          });\n        }\n      }\n    });\n  };\n\n  var addHandler = function addHandler() {\n    dispatch({\n      type: ExamDivisionConstants/* GET_SINGLE_EXAM_DIVISION_EDIT_RESET */.lp\n    });\n    setOpenPopup(true);\n  };\n\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(CustomContainer/* default */.Z, null, /*#__PURE__*/react.createElement(Toolbar/* default */.Z, null, /*#__PURE__*/react.createElement(InputControl/* default */.Z, {\n    className: classes.searchInput,\n    label: "Search Exam Division",\n    InputProps: {\n      startAdornment: /*#__PURE__*/react.createElement(InputAdornment/* default */.Z, {\n        position: "start"\n      }, /*#__PURE__*/react.createElement(Search/* default */.Z, null))\n    },\n    onChange: handleSearch\n  }), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    variant: "contained",\n    color: "primary",\n    startIcon: /*#__PURE__*/react.createElement(Add/* default */.Z, null),\n    className: classes.button,\n    onClick: addHandler\n  }, "CREATE", " ")), /*#__PURE__*/react.createElement(TableContainer, {\n    className: classes.table\n  }, /*#__PURE__*/react.createElement(TblHead, null), /*#__PURE__*/react.createElement(TableBody/* default */.Z, null, tableDataAfterPagingAndSorting().map(function (item) {\n    return /*#__PURE__*/react.createElement(examDivision_ExamDivisionTableCollapse, {\n      key: item.$id,\n      item: item,\n      updateCollegeHandler: updateCollegeHandler,\n      deleteCollegeHandler: deleteCollegeHandler\n    });\n  }))), /*#__PURE__*/react.createElement(TblPagination, null), /*#__PURE__*/react.createElement(Popup/* default */.Z, {\n    openPopup: openPopup,\n    setOpenPopup: setOpenPopup,\n    title: "Exam Division Form"\n  }, /*#__PURE__*/react.createElement(examDivision_ExamDivisionForm, {\n    examDivision: singleExamDivision && singleExamDivision.dbModel,\n    setOpenPopup: setOpenPopup\n  }))), /*#__PURE__*/react.createElement(Notification/* default */.Z, {\n    notify: notify,\n    setNotify: setNotify\n  }), /*#__PURE__*/react.createElement(ConfirmDialog/* default */.Z, {\n    confirmDialog: confirmDialog,\n    setConfirmDialog: setConfirmDialog\n  }));\n};\n\n/* harmony default export */ const examDivision_ExamDivision = (ExamDivision);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2179\n')}}]);